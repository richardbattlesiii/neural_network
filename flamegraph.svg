<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="2516"><g><title>`0x10 (3 samples, 0.12%)</title><rect x="0.0000%" y="597" width="0.1192%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="607.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (3 samples, 0.12%)</title><rect x="0.0000%" y="581" width="0.1192%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="591.50"></text></g><g><title>`0x1D94E1775E0 (1 samples, 0.04%)</title><rect x="0.1192%" y="597" width="0.0397%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3692%" y="607.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (1 samples, 0.04%)</title><rect x="0.1192%" y="581" width="0.0397%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.3692%" y="591.50"></text></g><g><title>`0x7FF97E64AF00 (2 samples, 0.08%)</title><rect x="0.1590%" y="597" width="0.0795%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="2"/><text x="0.4090%" y="607.50"></text></g><g><title>`0x7FF97E60128B (1 samples, 0.04%)</title><rect x="0.2385%" y="517" width="0.0397%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="1"/><text x="0.4885%" y="527.50"></text></g><g><title>`0x7FF97E6146AD (1 samples, 0.04%)</title><rect x="0.2385%" y="501" width="0.0397%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="1"/><text x="0.4885%" y="511.50"></text></g><g><title>`0x7FF97E614DE6 (1 samples, 0.04%)</title><rect x="0.2385%" y="485" width="0.0397%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="1"/><text x="0.4885%" y="495.50"></text></g><g><title>`0x7FF97E615351 (1 samples, 0.04%)</title><rect x="0.2385%" y="469" width="0.0397%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.4885%" y="479.50"></text></g><g><title>`0x7FF97E609BEA (1 samples, 0.04%)</title><rect x="0.2385%" y="453" width="0.0397%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.4885%" y="463.50"></text></g><g><title>`0x7FF97E609CCD (1 samples, 0.04%)</title><rect x="0.2385%" y="437" width="0.0397%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.4885%" y="447.50"></text></g><g><title>`0x7FF97E600EFE (2 samples, 0.08%)</title><rect x="0.2782%" y="501" width="0.0795%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="2"/><text x="0.5282%" y="511.50"></text></g><g><title>`0x7FF97E61E031 (2 samples, 0.08%)</title><rect x="0.2782%" y="485" width="0.0795%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="2"/><text x="0.5282%" y="495.50"></text></g><g><title>`0x7FF97E61A8E7 (2 samples, 0.08%)</title><rect x="0.2782%" y="469" width="0.0795%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="2"/><text x="0.5282%" y="479.50"></text></g><g><title>`0x7FF97E61B129 (2 samples, 0.08%)</title><rect x="0.2782%" y="453" width="0.0795%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="2"/><text x="0.5282%" y="463.50"></text></g><g><title>`0x7FF97E690744 (2 samples, 0.08%)</title><rect x="0.2782%" y="437" width="0.0795%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="2"/><text x="0.5282%" y="447.50"></text></g><g><title>`0x7FF97E600A5C (1 samples, 0.04%)</title><rect x="0.3577%" y="485" width="0.0397%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="0.6077%" y="495.50"></text></g><g><title>`0x7FF97E690604 (1 samples, 0.04%)</title><rect x="0.3577%" y="469" width="0.0397%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="0.6077%" y="479.50"></text></g><g><title>`0x7FF97E625E66 (5 samples, 0.20%)</title><rect x="0.2385%" y="565" width="0.1987%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="5"/><text x="0.4885%" y="575.50"></text></g><g><title>`0x7FF97E65289A (5 samples, 0.20%)</title><rect x="0.2385%" y="549" width="0.1987%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="5"/><text x="0.4885%" y="559.50"></text></g><g><title>`0x7FF97E6011CB (5 samples, 0.20%)</title><rect x="0.2385%" y="533" width="0.1987%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="5"/><text x="0.4885%" y="543.50"></text></g><g><title>`0x7FF97E601390 (4 samples, 0.16%)</title><rect x="0.2782%" y="517" width="0.1590%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="4"/><text x="0.5282%" y="527.50"></text></g><g><title>`0x7FF97E600FC8 (2 samples, 0.08%)</title><rect x="0.3577%" y="501" width="0.0795%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="2"/><text x="0.6077%" y="511.50"></text></g><g><title>`0x7FF97E600B0F (1 samples, 0.04%)</title><rect x="0.3975%" y="485" width="0.0397%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="0.6475%" y="495.50"></text></g><g><title>`0x7FF97E61C8D8 (1 samples, 0.04%)</title><rect x="0.3975%" y="469" width="0.0397%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="0.6475%" y="479.50"></text></g><g><title>`0x7FF97E614A0F (1 samples, 0.04%)</title><rect x="0.3975%" y="453" width="0.0397%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="1"/><text x="0.6475%" y="463.50"></text></g><g><title>`0x7FF97E6619FC (1 samples, 0.04%)</title><rect x="0.3975%" y="437" width="0.0397%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="1"/><text x="0.6475%" y="447.50"></text></g><g><title>`0x7FF97DFB0FD9 (1 samples, 0.04%)</title><rect x="0.3975%" y="421" width="0.0397%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="1"/><text x="0.6475%" y="431.50"></text></g><g><title>`0x7FF97B969B34 (1 samples, 0.04%)</title><rect x="0.3975%" y="405" width="0.0397%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="0.6475%" y="415.50"></text></g><g><title>`0x7FF97E601482 (1 samples, 0.04%)</title><rect x="0.4372%" y="405" width="0.0397%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="1"/><text x="0.6872%" y="415.50"></text></g><g><title>`0x7FF97E61A8E7 (1 samples, 0.04%)</title><rect x="0.4372%" y="389" width="0.0397%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="0.6872%" y="399.50"></text></g><g><title>`0x7FF97E61B129 (1 samples, 0.04%)</title><rect x="0.4372%" y="373" width="0.0397%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="1"/><text x="0.6872%" y="383.50"></text></g><g><title>`0x7FF97E690744 (1 samples, 0.04%)</title><rect x="0.4372%" y="357" width="0.0397%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="1"/><text x="0.6872%" y="367.50"></text></g><g><title>`0x7FF97E600A5C (1 samples, 0.04%)</title><rect x="0.4769%" y="389" width="0.0397%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="1"/><text x="0.7269%" y="399.50"></text></g><g><title>`0x7FF97E690604 (1 samples, 0.04%)</title><rect x="0.4769%" y="373" width="0.0397%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="1"/><text x="0.7269%" y="383.50"></text></g><g><title>`0x7FF97BF5BEA8 (3 samples, 0.12%)</title><rect x="0.4372%" y="533" width="0.1192%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="3"/><text x="0.6872%" y="543.50"></text></g><g><title>`0x7FF97BF68FB1 (3 samples, 0.12%)</title><rect x="0.4372%" y="517" width="0.1192%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="3"/><text x="0.6872%" y="527.50"></text></g><g><title>`0x7FF97BF61C03 (3 samples, 0.12%)</title><rect x="0.4372%" y="501" width="0.1192%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="3"/><text x="0.6872%" y="511.50"></text></g><g><title>`0x7FF97B93B412 (3 samples, 0.12%)</title><rect x="0.4372%" y="485" width="0.1192%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="3"/><text x="0.6872%" y="495.50"></text></g><g><title>`0x7FF97E61A73A (3 samples, 0.12%)</title><rect x="0.4372%" y="469" width="0.1192%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="3"/><text x="0.6872%" y="479.50"></text></g><g><title>`0x7FF97E6090AC (3 samples, 0.12%)</title><rect x="0.4372%" y="453" width="0.1192%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="3"/><text x="0.6872%" y="463.50"></text></g><g><title>`0x7FF97E618DB4 (3 samples, 0.12%)</title><rect x="0.4372%" y="437" width="0.1192%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="3"/><text x="0.6872%" y="447.50"></text></g><g><title>`0x7FF97E6012BF (3 samples, 0.12%)</title><rect x="0.4372%" y="421" width="0.1192%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="3"/><text x="0.6872%" y="431.50"></text></g><g><title>`0x7FF97E6014F0 (2 samples, 0.08%)</title><rect x="0.4769%" y="405" width="0.0795%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="2"/><text x="0.7269%" y="415.50"></text></g><g><title>`0x7FF97E600B0F (1 samples, 0.04%)</title><rect x="0.5167%" y="389" width="0.0397%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="1"/><text x="0.7667%" y="399.50"></text></g><g><title>`0x7FF97E61C8D8 (1 samples, 0.04%)</title><rect x="0.5167%" y="373" width="0.0397%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="0.7667%" y="383.50"></text></g><g><title>`0x7FF97E614B9B (1 samples, 0.04%)</title><rect x="0.5167%" y="357" width="0.0397%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="1"/><text x="0.7667%" y="367.50"></text></g><g><title>`0x7FF97E614DB0 (1 samples, 0.04%)</title><rect x="0.5167%" y="341" width="0.0397%" height="15" fill="rgb(250,191,14)" fg:x="13" fg:w="1"/><text x="0.7667%" y="351.50"></text></g><g><title>`0x7FF97E614E6C (1 samples, 0.04%)</title><rect x="0.5167%" y="325" width="0.0397%" height="15" fill="rgb(239,60,40)" fg:x="13" fg:w="1"/><text x="0.7667%" y="335.50"></text></g><g><title>`0x7FF97BF5C099 (4 samples, 0.16%)</title><rect x="0.4372%" y="549" width="0.1590%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="4"/><text x="0.6872%" y="559.50"></text></g><g><title>`0x7FF97BF5BED8 (1 samples, 0.04%)</title><rect x="0.5564%" y="533" width="0.0397%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="1"/><text x="0.8064%" y="543.50"></text></g><g><title>`0x7FF97DFB7FAB (1 samples, 0.04%)</title><rect x="0.5564%" y="517" width="0.0397%" height="15" fill="rgb(250,213,24)" fg:x="14" fg:w="1"/><text x="0.8064%" y="527.50"></text></g><g><title>`0x7FF97E64117D (1 samples, 0.04%)</title><rect x="0.5564%" y="501" width="0.0397%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="1"/><text x="0.8064%" y="511.50"></text></g><g><title>`0x7FF97E6414D7 (1 samples, 0.04%)</title><rect x="0.5564%" y="485" width="0.0397%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="1"/><text x="0.8064%" y="495.50"></text></g><g><title>`0x7FF97E64177C (1 samples, 0.04%)</title><rect x="0.5564%" y="469" width="0.0397%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="1"/><text x="0.8064%" y="479.50"></text></g><g><title>`0x7FF97D91DFD7 (1 samples, 0.04%)</title><rect x="0.5564%" y="453" width="0.0397%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="1"/><text x="0.8064%" y="463.50"></text></g><g><title>`0x7FF97E616FBF (1 samples, 0.04%)</title><rect x="0.5564%" y="437" width="0.0397%" height="15" fill="rgb(217,147,25)" fg:x="14" fg:w="1"/><text x="0.8064%" y="447.50"></text></g><g><title>neural_network.exe`std::rt::lang_start_internal::closure$1 (1 samples, 0.04%)</title><rect x="0.5962%" y="453" width="0.0397%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="0.8462%" y="463.50"></text></g><g><title>neural_network.exe`std::rt::init (1 samples, 0.04%)</title><rect x="0.5962%" y="437" width="0.0397%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="1"/><text x="0.8462%" y="447.50"></text></g><g><title>neural_network.exe`std::thread::Thread::new_inner (1 samples, 0.04%)</title><rect x="0.5962%" y="421" width="0.0397%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="0.8462%" y="431.50"></text></g><g><title>`0x7FF97E62AFF1 (1 samples, 0.04%)</title><rect x="0.6359%" y="373" width="0.0397%" height="15" fill="rgb(248,47,43)" fg:x="16" fg:w="1"/><text x="0.8859%" y="383.50"></text></g><g><title>`0x7FF97E62C324 (1 samples, 0.04%)</title><rect x="0.6359%" y="357" width="0.0397%" height="15" fill="rgb(221,10,30)" fg:x="16" fg:w="1"/><text x="0.8859%" y="367.50"></text></g><g><title>`0x7FF97E62A10C (1 samples, 0.04%)</title><rect x="0.6359%" y="341" width="0.0397%" height="15" fill="rgb(210,229,1)" fg:x="16" fg:w="1"/><text x="0.8859%" y="351.50"></text></g><g><title>`0x7FF97E636AC6 (1 samples, 0.04%)</title><rect x="0.6359%" y="325" width="0.0397%" height="15" fill="rgb(222,148,37)" fg:x="16" fg:w="1"/><text x="0.8859%" y="335.50"></text></g><g><title>`0x7FF97E690364 (1 samples, 0.04%)</title><rect x="0.6359%" y="309" width="0.0397%" height="15" fill="rgb(234,67,33)" fg:x="16" fg:w="1"/><text x="0.8859%" y="319.50"></text></g><g><title>neural_network.exe`Unknown (1 samples, 0.04%)</title><rect x="0.6757%" y="373" width="0.0397%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="1"/><text x="0.9257%" y="383.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet7predict17h62ebcdd77e5e2ea7E (1 samples, 0.04%)</title><rect x="0.6757%" y="357" width="0.0397%" height="15" fill="rgb(247,138,52)" fg:x="17" fg:w="1"/><text x="0.9257%" y="367.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet12forward_pass17hd1a206657b28ada8E.llvm.4137659153823433258 (1 samples, 0.04%)</title><rect x="0.6757%" y="341" width="0.0397%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="1"/><text x="0.9257%" y="351.50"></text></g><g><title>neural_network.exe`_ZN14neural_network6layers11dense_layer10DenseLayer4pass17h9edb117f1cddcd20E (1 samples, 0.04%)</title><rect x="0.6757%" y="325" width="0.0397%" height="15" fill="rgb(246,177,23)" fg:x="17" fg:w="1"/><text x="0.9257%" y="335.50"></text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17h91cec0a105d9df62E (1 samples, 0.04%)</title><rect x="0.6757%" y="309" width="0.0397%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="1"/><text x="0.9257%" y="319.50"></text></g><g><title>`0x7FF97E62AFF1 (1 samples, 0.04%)</title><rect x="0.6757%" y="293" width="0.0397%" height="15" fill="rgb(216,154,8)" fg:x="17" fg:w="1"/><text x="0.9257%" y="303.50"></text></g><g><title>`0x7FF97E62C324 (1 samples, 0.04%)</title><rect x="0.6757%" y="277" width="0.0397%" height="15" fill="rgb(244,35,45)" fg:x="17" fg:w="1"/><text x="0.9257%" y="287.50"></text></g><g><title>`0x7FF97E629C08 (1 samples, 0.04%)</title><rect x="0.6757%" y="261" width="0.0397%" height="15" fill="rgb(251,115,12)" fg:x="17" fg:w="1"/><text x="0.9257%" y="271.50"></text></g><g><title>`0x7FF97E634FFB (1 samples, 0.04%)</title><rect x="0.6757%" y="245" width="0.0397%" height="15" fill="rgb(240,54,50)" fg:x="17" fg:w="1"/><text x="0.9257%" y="255.50"></text></g><g><title>`0x7FF97E6368DA (1 samples, 0.04%)</title><rect x="0.6757%" y="229" width="0.0397%" height="15" fill="rgb(233,84,52)" fg:x="17" fg:w="1"/><text x="0.9257%" y="239.50"></text></g><g><title>`0x7FF97E636988 (1 samples, 0.04%)</title><rect x="0.6757%" y="213" width="0.0397%" height="15" fill="rgb(207,117,47)" fg:x="17" fg:w="1"/><text x="0.9257%" y="223.50"></text></g><g><title>`0x7FF97E636AC6 (1 samples, 0.04%)</title><rect x="0.6757%" y="197" width="0.0397%" height="15" fill="rgb(249,43,39)" fg:x="17" fg:w="1"/><text x="0.9257%" y="207.50"></text></g><g><title>`0x7FF97E690364 (1 samples, 0.04%)</title><rect x="0.6757%" y="181" width="0.0397%" height="15" fill="rgb(209,38,44)" fg:x="17" fg:w="1"/><text x="0.9257%" y="191.50"></text></g><g><title>`0x7FF968D514EF (1 samples, 0.04%)</title><rect x="0.7154%" y="357" width="0.0397%" height="15" fill="rgb(236,212,23)" fg:x="18" fg:w="1"/><text x="0.9654%" y="367.50"></text></g><g><title>`0x7FF97B93906F (1 samples, 0.04%)</title><rect x="0.7552%" y="357" width="0.0397%" height="15" fill="rgb(242,79,21)" fg:x="19" fg:w="1"/><text x="1.0052%" y="367.50"></text></g><g><title>`0x7FF97E690184 (1 samples, 0.04%)</title><rect x="0.7552%" y="341" width="0.0397%" height="15" fill="rgb(211,96,35)" fg:x="19" fg:w="1"/><text x="1.0052%" y="351.50"></text></g><g><title>`0x7FF97E62C2AB (1 samples, 0.04%)</title><rect x="0.7949%" y="341" width="0.0397%" height="15" fill="rgb(253,215,40)" fg:x="20" fg:w="1"/><text x="1.0449%" y="351.50"></text></g><g><title>`0x7FF97E69CC6F (3 samples, 0.12%)</title><rect x="0.8347%" y="341" width="0.1192%" height="15" fill="rgb(211,81,21)" fg:x="21" fg:w="3"/><text x="1.0847%" y="351.50"></text></g><g><title>`0x7FF97E62AFF1 (5 samples, 0.20%)</title><rect x="0.7949%" y="357" width="0.1987%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="5"/><text x="1.0449%" y="367.50"></text></g><g><title>`0x7FF97E69CE16 (1 samples, 0.04%)</title><rect x="0.9539%" y="341" width="0.0397%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="1.2039%" y="351.50"></text></g><g><title>`0x7FF97E637AF4 (1 samples, 0.04%)</title><rect x="0.9539%" y="325" width="0.0397%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="1"/><text x="1.2039%" y="335.50"></text></g><g><title>`0x7FF97E637C5B (1 samples, 0.04%)</title><rect x="0.9539%" y="309" width="0.0397%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="1.2039%" y="319.50"></text></g><g><title>`0x7FF97E62AFF1 (1 samples, 0.04%)</title><rect x="0.9539%" y="293" width="0.0397%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="1.2039%" y="303.50"></text></g><g><title>`0x7FF97E62C324 (1 samples, 0.04%)</title><rect x="0.9539%" y="277" width="0.0397%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="1.2039%" y="287.50"></text></g><g><title>`0x7FF97E629C08 (1 samples, 0.04%)</title><rect x="0.9539%" y="261" width="0.0397%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="1.2039%" y="271.50"></text></g><g><title>`0x7FF97E634FFB (1 samples, 0.04%)</title><rect x="0.9539%" y="245" width="0.0397%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="1.2039%" y="255.50"></text></g><g><title>`0x7FF97E6368DA (1 samples, 0.04%)</title><rect x="0.9539%" y="229" width="0.0397%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="1"/><text x="1.2039%" y="239.50"></text></g><g><title>`0x7FF97E636988 (1 samples, 0.04%)</title><rect x="0.9539%" y="213" width="0.0397%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="1"/><text x="1.2039%" y="223.50"></text></g><g><title>`0x7FF97E636AC6 (1 samples, 0.04%)</title><rect x="0.9539%" y="197" width="0.0397%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="1"/><text x="1.2039%" y="207.50"></text></g><g><title>`0x7FF97E690364 (1 samples, 0.04%)</title><rect x="0.9539%" y="181" width="0.0397%" height="15" fill="rgb(228,99,48)" fg:x="24" fg:w="1"/><text x="1.2039%" y="191.50"></text></g><g><title>`0x7FF97E62D57C (1 samples, 0.04%)</title><rect x="0.9936%" y="341" width="0.0397%" height="15" fill="rgb(253,11,6)" fg:x="25" fg:w="1"/><text x="1.2436%" y="351.50"></text></g><g><title>`0x7FF97E62CC9A (2 samples, 0.08%)</title><rect x="0.9936%" y="357" width="0.0795%" height="15" fill="rgb(247,143,39)" fg:x="25" fg:w="2"/><text x="1.2436%" y="367.50"></text></g><g><title>`0x7FF97E62D68A (1 samples, 0.04%)</title><rect x="1.0334%" y="341" width="0.0397%" height="15" fill="rgb(236,97,10)" fg:x="26" fg:w="1"/><text x="1.2834%" y="351.50"></text></g><g><title>`0x7FF97E68F91B (1 samples, 0.04%)</title><rect x="1.0334%" y="325" width="0.0397%" height="15" fill="rgb(233,208,19)" fg:x="26" fg:w="1"/><text x="1.2834%" y="335.50"></text></g><g><title>`0x7FF97E696C26 (1 samples, 0.04%)</title><rect x="1.0731%" y="277" width="0.0397%" height="15" fill="rgb(216,164,2)" fg:x="27" fg:w="1"/><text x="1.3231%" y="287.50"></text></g><g><title>`0x7FF97E696CD7 (1 samples, 0.04%)</title><rect x="1.1129%" y="277" width="0.0397%" height="15" fill="rgb(220,129,5)" fg:x="28" fg:w="1"/><text x="1.3629%" y="287.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17h5fb860b30573fefeE (3 samples, 0.12%)</title><rect x="1.0731%" y="357" width="0.1192%" height="15" fill="rgb(242,17,10)" fg:x="27" fg:w="3"/><text x="1.3231%" y="367.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17hcdd8c185bebeaceaE.llvm.13346314366924044816 (3 samples, 0.12%)</title><rect x="1.0731%" y="341" width="0.1192%" height="15" fill="rgb(242,107,0)" fg:x="27" fg:w="3"/><text x="1.3231%" y="351.50"></text></g><g><title>`0x7FF97E63218A (3 samples, 0.12%)</title><rect x="1.0731%" y="325" width="0.1192%" height="15" fill="rgb(251,28,31)" fg:x="27" fg:w="3"/><text x="1.3231%" y="335.50"></text></g><g><title>`0x7FF97E6322C7 (3 samples, 0.12%)</title><rect x="1.0731%" y="309" width="0.1192%" height="15" fill="rgb(233,223,10)" fg:x="27" fg:w="3"/><text x="1.3231%" y="319.50"></text></g><g><title>`0x7FF97E632AFE (3 samples, 0.12%)</title><rect x="1.0731%" y="293" width="0.1192%" height="15" fill="rgb(215,21,27)" fg:x="27" fg:w="3"/><text x="1.3231%" y="303.50"></text></g><g><title>`0x7FF97E696CEB (1 samples, 0.04%)</title><rect x="1.1526%" y="277" width="0.0397%" height="15" fill="rgb(232,23,21)" fg:x="29" fg:w="1"/><text x="1.4026%" y="287.50"></text></g><g><title>`0x7FF968D51381 (1 samples, 0.04%)</title><rect x="1.1924%" y="341" width="0.0397%" height="15" fill="rgb(244,5,23)" fg:x="30" fg:w="1"/><text x="1.4424%" y="351.50"></text></g><g><title>`0x7FF97E62D68A (1 samples, 0.04%)</title><rect x="1.2321%" y="325" width="0.0397%" height="15" fill="rgb(226,81,46)" fg:x="31" fg:w="1"/><text x="1.4821%" y="335.50"></text></g><g><title>`0x7FF97E62D6A1 (1 samples, 0.04%)</title><rect x="1.2719%" y="325" width="0.0397%" height="15" fill="rgb(247,70,30)" fg:x="32" fg:w="1"/><text x="1.5219%" y="335.50"></text></g><g><title>`0x7FF97E62CC9A (3 samples, 0.12%)</title><rect x="1.2321%" y="341" width="0.1192%" height="15" fill="rgb(212,68,19)" fg:x="31" fg:w="3"/><text x="1.4821%" y="351.50"></text></g><g><title>`0x7FF97E62DBBF (1 samples, 0.04%)</title><rect x="1.3116%" y="325" width="0.0397%" height="15" fill="rgb(240,187,13)" fg:x="33" fg:w="1"/><text x="1.5616%" y="335.50"></text></g><g><title>`0x7FF97E631921 (1 samples, 0.04%)</title><rect x="1.3116%" y="309" width="0.0397%" height="15" fill="rgb(223,113,26)" fg:x="33" fg:w="1"/><text x="1.5616%" y="319.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h4e52541424a9e6d5E (5 samples, 0.20%)</title><rect x="1.1924%" y="357" width="0.1987%" height="15" fill="rgb(206,192,2)" fg:x="30" fg:w="5"/><text x="1.4424%" y="367.50"></text></g><g><title>`0x7FF97E62CCD2 (1 samples, 0.04%)</title><rect x="1.3514%" y="341" width="0.0397%" height="15" fill="rgb(241,108,4)" fg:x="34" fg:w="1"/><text x="1.6014%" y="351.50"></text></g><g><title>neural_network.exe`_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17he2210d71eb5f1170E (13 samples, 0.52%)</title><rect x="1.5501%" y="341" width="0.5167%" height="15" fill="rgb(247,173,49)" fg:x="39" fg:w="13"/><text x="1.8001%" y="351.50"></text></g><g><title>`0x7FF97E696C1E (1 samples, 0.04%)</title><rect x="2.0668%" y="261" width="0.0397%" height="15" fill="rgb(224,114,35)" fg:x="52" fg:w="1"/><text x="2.3168%" y="271.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h6706756a45adb338E (19 samples, 0.76%)</title><rect x="1.3911%" y="357" width="0.7552%" height="15" fill="rgb(245,159,27)" fg:x="35" fg:w="19"/><text x="1.6411%" y="367.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17h5fb860b30573fefeE (2 samples, 0.08%)</title><rect x="2.0668%" y="341" width="0.0795%" height="15" fill="rgb(245,172,44)" fg:x="52" fg:w="2"/><text x="2.3168%" y="351.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17hcdd8c185bebeaceaE.llvm.13346314366924044816 (2 samples, 0.08%)</title><rect x="2.0668%" y="325" width="0.0795%" height="15" fill="rgb(236,23,11)" fg:x="52" fg:w="2"/><text x="2.3168%" y="335.50"></text></g><g><title>`0x7FF97E63218A (2 samples, 0.08%)</title><rect x="2.0668%" y="309" width="0.0795%" height="15" fill="rgb(205,117,38)" fg:x="52" fg:w="2"/><text x="2.3168%" y="319.50"></text></g><g><title>`0x7FF97E6322C7 (2 samples, 0.08%)</title><rect x="2.0668%" y="293" width="0.0795%" height="15" fill="rgb(237,72,25)" fg:x="52" fg:w="2"/><text x="2.3168%" y="303.50"></text></g><g><title>`0x7FF97E632AFE (2 samples, 0.08%)</title><rect x="2.0668%" y="277" width="0.0795%" height="15" fill="rgb(244,70,9)" fg:x="52" fg:w="2"/><text x="2.3168%" y="287.50"></text></g><g><title>`0x7FF97E696CD3 (1 samples, 0.04%)</title><rect x="2.1065%" y="261" width="0.0397%" height="15" fill="rgb(217,125,39)" fg:x="53" fg:w="1"/><text x="2.3565%" y="271.50"></text></g><g><title>neural_network.exe`std::fs::impl$8::read_to_string (1 samples, 0.04%)</title><rect x="2.1463%" y="357" width="0.0397%" height="15" fill="rgb(235,36,10)" fg:x="54" fg:w="1"/><text x="2.3963%" y="367.50"></text></g><g><title>neural_network.exe`std::fs::impl$5::read_to_string (1 samples, 0.04%)</title><rect x="2.1463%" y="341" width="0.0397%" height="15" fill="rgb(251,123,47)" fg:x="54" fg:w="1"/><text x="2.3963%" y="351.50"></text></g><g><title>neural_network.exe`std::io::default_read_to_string (1 samples, 0.04%)</title><rect x="2.1463%" y="325" width="0.0397%" height="15" fill="rgb(221,13,13)" fg:x="54" fg:w="1"/><text x="2.3963%" y="335.50"></text></g><g><title>neural_network.exe`std::io::append_to_string (1 samples, 0.04%)</title><rect x="2.1463%" y="309" width="0.0397%" height="15" fill="rgb(238,131,9)" fg:x="54" fg:w="1"/><text x="2.3963%" y="319.50"></text></g><g><title>neural_network.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (1 samples, 0.04%)</title><rect x="2.1463%" y="293" width="0.0397%" height="15" fill="rgb(211,50,8)" fg:x="54" fg:w="1"/><text x="2.3963%" y="303.50"></text></g><g><title>neural_network.exe`std::fs::impl$5::read_buf (1 samples, 0.04%)</title><rect x="2.1463%" y="277" width="0.0397%" height="15" fill="rgb(245,182,24)" fg:x="54" fg:w="1"/><text x="2.3963%" y="287.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::fs::File::read_buf (1 samples, 0.04%)</title><rect x="2.1463%" y="261" width="0.0397%" height="15" fill="rgb(242,14,37)" fg:x="54" fg:w="1"/><text x="2.3963%" y="271.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::handle::Handle::read_buf (1 samples, 0.04%)</title><rect x="2.1463%" y="245" width="0.0397%" height="15" fill="rgb(246,228,12)" fg:x="54" fg:w="1"/><text x="2.3963%" y="255.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::handle::Handle::synchronous_read (1 samples, 0.04%)</title><rect x="2.1463%" y="229" width="0.0397%" height="15" fill="rgb(213,55,15)" fg:x="54" fg:w="1"/><text x="2.3963%" y="239.50"></text></g><g><title>`0x7FF97E690064 (1 samples, 0.04%)</title><rect x="2.1463%" y="213" width="0.0397%" height="15" fill="rgb(209,9,3)" fg:x="54" fg:w="1"/><text x="2.3963%" y="223.50"></text></g><g><title>neural_network.exe`_ZN14neural_network4flow7flow_ai7convert17ha9b74834f40c516fE (38 samples, 1.51%)</title><rect x="0.7154%" y="373" width="1.5103%" height="15" fill="rgb(230,59,30)" fg:x="18" fg:w="38"/><text x="0.9654%" y="383.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.04%)</title><rect x="2.1860%" y="357" width="0.0397%" height="15" fill="rgb(209,121,21)" fg:x="55" fg:w="1"/><text x="2.4360%" y="367.50"></text></g><g><title>neural_network.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.04%)</title><rect x="2.1860%" y="341" width="0.0397%" height="15" fill="rgb(220,109,13)" fg:x="55" fg:w="1"/><text x="2.4360%" y="351.50"></text></g><g><title>neural_network.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.04%)</title><rect x="2.1860%" y="325" width="0.0397%" height="15" fill="rgb(232,18,1)" fg:x="55" fg:w="1"/><text x="2.4360%" y="335.50"></text></g><g><title>`0x7FF97B939C9C (1 samples, 0.04%)</title><rect x="2.1860%" y="309" width="0.0397%" height="15" fill="rgb(215,41,42)" fg:x="55" fg:w="1"/><text x="2.4360%" y="319.50"></text></g><g><title>`0x7FF97B93A330 (1 samples, 0.04%)</title><rect x="2.1860%" y="293" width="0.0397%" height="15" fill="rgb(224,123,36)" fg:x="55" fg:w="1"/><text x="2.4360%" y="303.50"></text></g><g><title>`0x7FF97E690A44 (1 samples, 0.04%)</title><rect x="2.1860%" y="277" width="0.0397%" height="15" fill="rgb(240,125,3)" fg:x="55" fg:w="1"/><text x="2.4360%" y="287.50"></text></g><g><title>`0x7FF968D511FB (186 samples, 7.39%)</title><rect x="7.5517%" y="357" width="7.3927%" height="15" fill="rgb(205,98,50)" fg:x="190" fg:w="186"/><text x="7.8017%" y="367.50">`0x7FF968D..</text></g><g><title>`0x7FF97E6298DF (1 samples, 0.04%)</title><rect x="14.9444%" y="325" width="0.0397%" height="15" fill="rgb(205,185,37)" fg:x="376" fg:w="1"/><text x="15.1944%" y="335.50"></text></g><g><title>`0x7FF97E634850 (1 samples, 0.04%)</title><rect x="14.9841%" y="293" width="0.0397%" height="15" fill="rgb(238,207,15)" fg:x="377" fg:w="1"/><text x="15.2341%" y="303.50"></text></g><g><title>`0x7FF97E63471A (1 samples, 0.04%)</title><rect x="14.9841%" y="277" width="0.0397%" height="15" fill="rgb(213,199,42)" fg:x="377" fg:w="1"/><text x="15.2341%" y="287.50"></text></g><g><title>`0x7FF97E634A98 (1 samples, 0.04%)</title><rect x="14.9841%" y="261" width="0.0397%" height="15" fill="rgb(235,201,11)" fg:x="377" fg:w="1"/><text x="15.2341%" y="271.50"></text></g><g><title>`0x7FF97E634F99 (2 samples, 0.08%)</title><rect x="14.9841%" y="309" width="0.0795%" height="15" fill="rgb(207,46,11)" fg:x="377" fg:w="2"/><text x="15.2341%" y="319.50"></text></g><g><title>`0x7FF97E6348D2 (1 samples, 0.04%)</title><rect x="15.0238%" y="293" width="0.0397%" height="15" fill="rgb(241,35,35)" fg:x="378" fg:w="1"/><text x="15.2738%" y="303.50"></text></g><g><title>`0x7FF97E634DC5 (1 samples, 0.04%)</title><rect x="15.0238%" y="277" width="0.0397%" height="15" fill="rgb(243,32,47)" fg:x="378" fg:w="1"/><text x="15.2738%" y="287.50"></text></g><g><title>`0x7FF97E636876 (1 samples, 0.04%)</title><rect x="15.0636%" y="293" width="0.0397%" height="15" fill="rgb(247,202,23)" fg:x="379" fg:w="1"/><text x="15.3136%" y="303.50"></text></g><g><title>`0x7FF97E636893 (1 samples, 0.04%)</title><rect x="15.1033%" y="293" width="0.0397%" height="15" fill="rgb(219,102,11)" fg:x="380" fg:w="1"/><text x="15.3533%" y="303.50"></text></g><g><title>`0x7FF97E63696D (1 samples, 0.04%)</title><rect x="15.1431%" y="277" width="0.0397%" height="15" fill="rgb(243,110,44)" fg:x="381" fg:w="1"/><text x="15.3931%" y="287.50"></text></g><g><title>`0x7FF97E636A83 (1 samples, 0.04%)</title><rect x="15.1431%" y="261" width="0.0397%" height="15" fill="rgb(222,74,54)" fg:x="381" fg:w="1"/><text x="15.3931%" y="271.50"></text></g><g><title>`0x7FF97E636988 (146 samples, 5.80%)</title><rect x="15.1828%" y="277" width="5.8029%" height="15" fill="rgb(216,99,12)" fg:x="382" fg:w="146"/><text x="15.4328%" y="287.50">`0x7FF9..</text></g><g><title>`0x7FF97E636AC6 (146 samples, 5.80%)</title><rect x="15.1828%" y="261" width="5.8029%" height="15" fill="rgb(226,22,26)" fg:x="382" fg:w="146"/><text x="15.4328%" y="271.50">`0x7FF9..</text></g><g><title>`0x7FF97E690364 (146 samples, 5.80%)</title><rect x="15.1828%" y="245" width="5.8029%" height="15" fill="rgb(217,163,10)" fg:x="382" fg:w="146"/><text x="15.4328%" y="255.50">`0x7FF9..</text></g><g><title>`0x7FF97E636997 (1 samples, 0.04%)</title><rect x="20.9857%" y="277" width="0.0397%" height="15" fill="rgb(213,25,53)" fg:x="528" fg:w="1"/><text x="21.2357%" y="287.50"></text></g><g><title>`0x7FF97E62B0A0 (1 samples, 0.04%)</title><rect x="20.9857%" y="261" width="0.0397%" height="15" fill="rgb(252,105,26)" fg:x="528" fg:w="1"/><text x="21.2357%" y="271.50"></text></g><g><title>`0x7FF97E629C08 (153 samples, 6.08%)</title><rect x="14.9841%" y="325" width="6.0811%" height="15" fill="rgb(220,39,43)" fg:x="377" fg:w="153"/><text x="15.2341%" y="335.50">`0x7FF97..</text></g><g><title>`0x7FF97E634FFB (151 samples, 6.00%)</title><rect x="15.0636%" y="309" width="6.0016%" height="15" fill="rgb(229,68,48)" fg:x="379" fg:w="151"/><text x="15.3136%" y="319.50">`0x7FF97..</text></g><g><title>`0x7FF97E6368DA (149 samples, 5.92%)</title><rect x="15.1431%" y="293" width="5.9221%" height="15" fill="rgb(252,8,32)" fg:x="381" fg:w="149"/><text x="15.3931%" y="303.50">`0x7FF97..</text></g><g><title>`0x7FF97E6369D7 (1 samples, 0.04%)</title><rect x="21.0254%" y="277" width="0.0397%" height="15" fill="rgb(223,20,43)" fg:x="529" fg:w="1"/><text x="21.2754%" y="287.50"></text></g><g><title>`0x7FF97E62B099 (1 samples, 0.04%)</title><rect x="21.0254%" y="261" width="0.0397%" height="15" fill="rgb(229,81,49)" fg:x="529" fg:w="1"/><text x="21.2754%" y="271.50"></text></g><g><title>`0x7FF97E629E2F (5 samples, 0.20%)</title><rect x="21.0652%" y="325" width="0.1987%" height="15" fill="rgb(236,28,36)" fg:x="530" fg:w="5"/><text x="21.3152%" y="335.50"></text></g><g><title>`0x7FF97E6367AA (5 samples, 0.20%)</title><rect x="21.0652%" y="309" width="0.1987%" height="15" fill="rgb(249,185,26)" fg:x="530" fg:w="5"/><text x="21.3152%" y="319.50"></text></g><g><title>`0x7FF97E6902A4 (5 samples, 0.20%)</title><rect x="21.0652%" y="293" width="0.1987%" height="15" fill="rgb(249,174,33)" fg:x="530" fg:w="5"/><text x="21.3152%" y="303.50"></text></g><g><title>`0x7FF97E62AFF1 (162 samples, 6.44%)</title><rect x="14.9444%" y="357" width="6.4388%" height="15" fill="rgb(233,201,37)" fg:x="376" fg:w="162"/><text x="15.1944%" y="367.50">`0x7FF97..</text></g><g><title>`0x7FF97E62C324 (162 samples, 6.44%)</title><rect x="14.9444%" y="341" width="6.4388%" height="15" fill="rgb(221,78,26)" fg:x="376" fg:w="162"/><text x="15.1944%" y="351.50">`0x7FF97..</text></g><g><title>`0x7FF97E629E8C (3 samples, 0.12%)</title><rect x="21.2639%" y="325" width="0.1192%" height="15" fill="rgb(250,127,30)" fg:x="535" fg:w="3"/><text x="21.5139%" y="335.50"></text></g><g><title>`0x7FF97E6367AA (3 samples, 0.12%)</title><rect x="21.2639%" y="309" width="0.1192%" height="15" fill="rgb(230,49,44)" fg:x="535" fg:w="3"/><text x="21.5139%" y="319.50"></text></g><g><title>`0x7FF97E6902A4 (3 samples, 0.12%)</title><rect x="21.2639%" y="293" width="0.1192%" height="15" fill="rgb(229,67,23)" fg:x="535" fg:w="3"/><text x="21.5139%" y="303.50"></text></g><g><title>`0x7FF97E62F4B8 (1 samples, 0.04%)</title><rect x="21.3831%" y="341" width="0.0397%" height="15" fill="rgb(249,83,47)" fg:x="538" fg:w="1"/><text x="21.6331%" y="351.50"></text></g><g><title>`0x7FF97E62D239 (3 samples, 0.12%)</title><rect x="21.3831%" y="357" width="0.1192%" height="15" fill="rgb(215,43,3)" fg:x="538" fg:w="3"/><text x="21.6331%" y="367.50"></text></g><g><title>`0x7FF97E62F633 (2 samples, 0.08%)</title><rect x="21.4229%" y="341" width="0.0795%" height="15" fill="rgb(238,154,13)" fg:x="539" fg:w="2"/><text x="21.6729%" y="351.50"></text></g><g><title>`0x7FF968D511FB (186 samples, 7.39%)</title><rect x="21.5819%" y="341" width="7.3927%" height="15" fill="rgb(219,56,2)" fg:x="543" fg:w="186"/><text x="21.8319%" y="351.50">`0x7FF968D..</text></g><g><title>`0x7FF97E62C2B1 (1 samples, 0.04%)</title><rect x="28.9746%" y="325" width="0.0397%" height="15" fill="rgb(233,0,4)" fg:x="729" fg:w="1"/><text x="29.2246%" y="335.50"></text></g><g><title>`0x7FF97E62C2FB (1 samples, 0.04%)</title><rect x="29.0143%" y="325" width="0.0397%" height="15" fill="rgb(235,30,7)" fg:x="730" fg:w="1"/><text x="29.2643%" y="335.50"></text></g><g><title>`0x7FF97E6299CE (1 samples, 0.04%)</title><rect x="29.0541%" y="309" width="0.0397%" height="15" fill="rgb(250,79,13)" fg:x="731" fg:w="1"/><text x="29.3041%" y="319.50"></text></g><g><title>`0x7FF97E63471A (1 samples, 0.04%)</title><rect x="29.0541%" y="293" width="0.0397%" height="15" fill="rgb(211,146,34)" fg:x="731" fg:w="1"/><text x="29.3041%" y="303.50"></text></g><g><title>`0x7FF97E634AFE (1 samples, 0.04%)</title><rect x="29.0541%" y="277" width="0.0397%" height="15" fill="rgb(228,22,38)" fg:x="731" fg:w="1"/><text x="29.3041%" y="287.50"></text></g><g><title>`0x7FF97E636893 (1 samples, 0.04%)</title><rect x="29.0938%" y="277" width="0.0397%" height="15" fill="rgb(235,168,5)" fg:x="732" fg:w="1"/><text x="29.3438%" y="287.50"></text></g><g><title>`0x7FF97E629C08 (94 samples, 3.74%)</title><rect x="29.0938%" y="309" width="3.7361%" height="15" fill="rgb(221,155,16)" fg:x="732" fg:w="94"/><text x="29.3438%" y="319.50">`0x7..</text></g><g><title>`0x7FF97E634FFB (94 samples, 3.74%)</title><rect x="29.0938%" y="293" width="3.7361%" height="15" fill="rgb(215,215,53)" fg:x="732" fg:w="94"/><text x="29.3438%" y="303.50">`0x7..</text></g><g><title>`0x7FF97E6368DA (93 samples, 3.70%)</title><rect x="29.1335%" y="277" width="3.6963%" height="15" fill="rgb(223,4,10)" fg:x="733" fg:w="93"/><text x="29.3835%" y="287.50">`0x7..</text></g><g><title>`0x7FF97E636988 (93 samples, 3.70%)</title><rect x="29.1335%" y="261" width="3.6963%" height="15" fill="rgb(234,103,6)" fg:x="733" fg:w="93"/><text x="29.3835%" y="271.50">`0x7..</text></g><g><title>`0x7FF97E636AC6 (93 samples, 3.70%)</title><rect x="29.1335%" y="245" width="3.6963%" height="15" fill="rgb(227,97,0)" fg:x="733" fg:w="93"/><text x="29.3835%" y="255.50">`0x7..</text></g><g><title>`0x7FF97E690364 (93 samples, 3.70%)</title><rect x="29.1335%" y="229" width="3.6963%" height="15" fill="rgb(234,150,53)" fg:x="733" fg:w="93"/><text x="29.3835%" y="239.50">`0x7..</text></g><g><title>`0x7FF97E62C324 (99 samples, 3.93%)</title><rect x="29.0541%" y="325" width="3.9348%" height="15" fill="rgb(228,201,54)" fg:x="731" fg:w="99"/><text x="29.3041%" y="335.50">`0x7..</text></g><g><title>`0x7FF97E629E2F (4 samples, 0.16%)</title><rect x="32.8299%" y="309" width="0.1590%" height="15" fill="rgb(222,22,37)" fg:x="826" fg:w="4"/><text x="33.0799%" y="319.50"></text></g><g><title>`0x7FF97E6367AA (4 samples, 0.16%)</title><rect x="32.8299%" y="293" width="0.1590%" height="15" fill="rgb(237,53,32)" fg:x="826" fg:w="4"/><text x="33.0799%" y="303.50"></text></g><g><title>`0x7FF97E6902A4 (4 samples, 0.16%)</title><rect x="32.8299%" y="277" width="0.1590%" height="15" fill="rgb(233,25,53)" fg:x="826" fg:w="4"/><text x="33.0799%" y="287.50"></text></g><g><title>`0x7FF97E62AFF1 (102 samples, 4.05%)</title><rect x="28.9746%" y="341" width="4.0541%" height="15" fill="rgb(210,40,34)" fg:x="729" fg:w="102"/><text x="29.2246%" y="351.50">`0x7..</text></g><g><title>`0x7FF97E62C36D (1 samples, 0.04%)</title><rect x="32.9889%" y="325" width="0.0397%" height="15" fill="rgb(241,220,44)" fg:x="830" fg:w="1"/><text x="33.2389%" y="335.50"></text></g><g><title>`0x7FF97E62CC9A (1 samples, 0.04%)</title><rect x="33.0286%" y="341" width="0.0397%" height="15" fill="rgb(235,28,35)" fg:x="831" fg:w="1"/><text x="33.2786%" y="351.50"></text></g><g><title>`0x7FF97E62D6C7 (1 samples, 0.04%)</title><rect x="33.0286%" y="325" width="0.0397%" height="15" fill="rgb(210,56,17)" fg:x="831" fg:w="1"/><text x="33.2786%" y="335.50"></text></g><g><title>`0x7FF97E62F633 (10 samples, 0.40%)</title><rect x="33.0684%" y="325" width="0.3975%" height="15" fill="rgb(224,130,29)" fg:x="832" fg:w="10"/><text x="33.3184%" y="335.50"></text></g><g><title>`0x7FF97E62F84F (1 samples, 0.04%)</title><rect x="33.4658%" y="325" width="0.0397%" height="15" fill="rgb(235,212,8)" fg:x="842" fg:w="1"/><text x="33.7158%" y="335.50"></text></g><g><title>`0x7FF97E62D239 (16 samples, 0.64%)</title><rect x="33.0684%" y="341" width="0.6359%" height="15" fill="rgb(223,33,50)" fg:x="832" fg:w="16"/><text x="33.3184%" y="351.50"></text></g><g><title>`0x7FF97E62FCFE (5 samples, 0.20%)</title><rect x="33.5056%" y="325" width="0.1987%" height="15" fill="rgb(219,149,13)" fg:x="843" fg:w="5"/><text x="33.7556%" y="335.50"></text></g><g><title>`0x7FF97E6367AA (5 samples, 0.20%)</title><rect x="33.5056%" y="309" width="0.1987%" height="15" fill="rgb(250,156,29)" fg:x="843" fg:w="5"/><text x="33.7556%" y="319.50"></text></g><g><title>`0x7FF97E6902A4 (5 samples, 0.20%)</title><rect x="33.5056%" y="293" width="0.1987%" height="15" fill="rgb(216,193,19)" fg:x="843" fg:w="5"/><text x="33.7556%" y="303.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers20activation_functions21activation_derivative17hc2b9676b470cd2b3E (33 samples, 1.31%)</title><rect x="33.7043%" y="341" width="1.3116%" height="15" fill="rgb(216,135,14)" fg:x="848" fg:w="33"/><text x="33.9543%" y="351.50"></text></g><g><title>`0x7FF97E6297F0 (1 samples, 0.04%)</title><rect x="35.0159%" y="293" width="0.0397%" height="15" fill="rgb(241,47,5)" fg:x="881" fg:w="1"/><text x="35.2659%" y="303.50"></text></g><g><title>`0x7FF97E629ACD (1 samples, 0.04%)</title><rect x="35.0556%" y="293" width="0.0397%" height="15" fill="rgb(233,42,35)" fg:x="882" fg:w="1"/><text x="35.3056%" y="303.50"></text></g><g><title>`0x7FF97E62AFF1 (3 samples, 0.12%)</title><rect x="35.0159%" y="325" width="0.1192%" height="15" fill="rgb(231,13,6)" fg:x="881" fg:w="3"/><text x="35.2659%" y="335.50"></text></g><g><title>`0x7FF97E62C324 (3 samples, 0.12%)</title><rect x="35.0159%" y="309" width="0.1192%" height="15" fill="rgb(207,181,40)" fg:x="881" fg:w="3"/><text x="35.2659%" y="319.50"></text></g><g><title>`0x7FF97E629C08 (1 samples, 0.04%)</title><rect x="35.0954%" y="293" width="0.0397%" height="15" fill="rgb(254,173,49)" fg:x="883" fg:w="1"/><text x="35.3454%" y="303.50"></text></g><g><title>`0x7FF97E634F99 (1 samples, 0.04%)</title><rect x="35.0954%" y="277" width="0.0397%" height="15" fill="rgb(221,1,38)" fg:x="883" fg:w="1"/><text x="35.3454%" y="287.50"></text></g><g><title>`0x7FF97E6348F0 (1 samples, 0.04%)</title><rect x="35.0954%" y="261" width="0.0397%" height="15" fill="rgb(206,124,46)" fg:x="883" fg:w="1"/><text x="35.3454%" y="271.50"></text></g><g><title>`0x7FF97E62F7CC (1 samples, 0.04%)</title><rect x="35.1351%" y="309" width="0.0397%" height="15" fill="rgb(249,21,11)" fg:x="884" fg:w="1"/><text x="35.3851%" y="319.50"></text></g><g><title>`0x7FF97E62D239 (2 samples, 0.08%)</title><rect x="35.1351%" y="325" width="0.0795%" height="15" fill="rgb(222,201,40)" fg:x="884" fg:w="2"/><text x="35.3851%" y="335.50"></text></g><g><title>`0x7FF97E62F7D0 (1 samples, 0.04%)</title><rect x="35.1749%" y="309" width="0.0397%" height="15" fill="rgb(235,61,29)" fg:x="885" fg:w="1"/><text x="35.4249%" y="319.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (118 samples, 4.69%)</title><rect x="35.2146%" y="309" width="4.6900%" height="15" fill="rgb(219,207,3)" fg:x="886" fg:w="118"/><text x="35.4646%" y="319.50">neura..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply9threading27RangeChunkParallel$LT$G$GT$8for_each17hd8f2bb866c6244c4E (69 samples, 2.74%)</title><rect x="39.9046%" y="309" width="2.7424%" height="15" fill="rgb(222,56,46)" fg:x="1004" fg:w="69"/><text x="40.1546%" y="319.50">ne..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm13masked_kernel17hee2eec0ea6eaee03E (67 samples, 2.66%)</title><rect x="39.9841%" y="293" width="2.6630%" height="15" fill="rgb(239,76,54)" fg:x="1006" fg:w="67"/><text x="40.2341%" y="303.50">ne..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (64 samples, 2.54%)</title><rect x="40.1033%" y="277" width="2.5437%" height="15" fill="rgb(231,124,27)" fg:x="1009" fg:w="64"/><text x="40.3533%" y="287.50">ne..</text></g><g><title>`0x7FF97E62F633 (9 samples, 0.36%)</title><rect x="42.6471%" y="245" width="0.3577%" height="15" fill="rgb(249,195,6)" fg:x="1073" fg:w="9"/><text x="42.8971%" y="255.50"></text></g><g><title>`0x7FF97E62F7DE (2 samples, 0.08%)</title><rect x="43.0048%" y="245" width="0.0795%" height="15" fill="rgb(237,174,47)" fg:x="1082" fg:w="2"/><text x="43.2548%" y="255.50"></text></g><g><title>neural_network.exe`Unknown (199 samples, 7.91%)</title><rect x="35.2146%" y="325" width="7.9094%" height="15" fill="rgb(206,201,31)" fg:x="886" fg:w="199"/><text x="35.4646%" y="335.50">neural_netw..</text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_alloc (12 samples, 0.48%)</title><rect x="42.6471%" y="309" width="0.4769%" height="15" fill="rgb(231,57,52)" fg:x="1073" fg:w="12"/><text x="42.8971%" y="319.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::impl$0::alloc (12 samples, 0.48%)</title><rect x="42.6471%" y="293" width="0.4769%" height="15" fill="rgb(248,177,22)" fg:x="1073" fg:w="12"/><text x="42.8971%" y="303.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::allocate (12 samples, 0.48%)</title><rect x="42.6471%" y="277" width="0.4769%" height="15" fill="rgb(215,211,37)" fg:x="1073" fg:w="12"/><text x="42.8971%" y="287.50"></text></g><g><title>`0x7FF97E62D239 (12 samples, 0.48%)</title><rect x="42.6471%" y="261" width="0.4769%" height="15" fill="rgb(241,128,51)" fg:x="1073" fg:w="12"/><text x="42.8971%" y="271.50"></text></g><g><title>`0x7FF97E62FCFE (1 samples, 0.04%)</title><rect x="43.0843%" y="245" width="0.0397%" height="15" fill="rgb(227,165,31)" fg:x="1084" fg:w="1"/><text x="43.3343%" y="255.50"></text></g><g><title>`0x7FF97E6367AA (1 samples, 0.04%)</title><rect x="43.0843%" y="229" width="0.0397%" height="15" fill="rgb(228,167,24)" fg:x="1084" fg:w="1"/><text x="43.3343%" y="239.50"></text></g><g><title>`0x7FF97E6902A4 (1 samples, 0.04%)</title><rect x="43.0843%" y="213" width="0.0397%" height="15" fill="rgb(228,143,12)" fg:x="1084" fg:w="1"/><text x="43.3343%" y="223.50"></text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17h5868e790f09ad45eE (205 samples, 8.15%)</title><rect x="35.0159%" y="341" width="8.1479%" height="15" fill="rgb(249,149,8)" fg:x="881" fg:w="205"/><text x="35.2659%" y="351.50">neural_netw..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm5sgemm17hc6e77daf678b9b7cE (1 samples, 0.04%)</title><rect x="43.1240%" y="325" width="0.0397%" height="15" fill="rgb(243,35,44)" fg:x="1085" fg:w="1"/><text x="43.3740%" y="335.50"></text></g><g><title>`0x7FF97E62AFF1 (1 samples, 0.04%)</title><rect x="43.1638%" y="325" width="0.0397%" height="15" fill="rgb(246,89,9)" fg:x="1086" fg:w="1"/><text x="43.4138%" y="335.50"></text></g><g><title>`0x7FF97E62C324 (1 samples, 0.04%)</title><rect x="43.1638%" y="309" width="0.0397%" height="15" fill="rgb(233,213,13)" fg:x="1086" fg:w="1"/><text x="43.4138%" y="319.50"></text></g><g><title>`0x7FF97E629C08 (1 samples, 0.04%)</title><rect x="43.1638%" y="293" width="0.0397%" height="15" fill="rgb(233,141,41)" fg:x="1086" fg:w="1"/><text x="43.4138%" y="303.50"></text></g><g><title>`0x7FF97E634F99 (1 samples, 0.04%)</title><rect x="43.1638%" y="277" width="0.0397%" height="15" fill="rgb(239,167,4)" fg:x="1086" fg:w="1"/><text x="43.4138%" y="287.50"></text></g><g><title>`0x7FF97E6348F0 (1 samples, 0.04%)</title><rect x="43.1638%" y="261" width="0.0397%" height="15" fill="rgb(209,217,16)" fg:x="1086" fg:w="1"/><text x="43.4138%" y="271.50"></text></g><g><title>`0x7FF97E62F633 (8 samples, 0.32%)</title><rect x="43.2035%" y="309" width="0.3180%" height="15" fill="rgb(219,88,35)" fg:x="1087" fg:w="8"/><text x="43.4535%" y="319.50"></text></g><g><title>`0x7FF97E62F7DE (1 samples, 0.04%)</title><rect x="43.5215%" y="309" width="0.0397%" height="15" fill="rgb(220,193,23)" fg:x="1095" fg:w="1"/><text x="43.7715%" y="319.50"></text></g><g><title>`0x7FF97E62D239 (12 samples, 0.48%)</title><rect x="43.2035%" y="325" width="0.4769%" height="15" fill="rgb(230,90,52)" fg:x="1087" fg:w="12"/><text x="43.4535%" y="335.50"></text></g><g><title>`0x7FF97E62FCFE (3 samples, 0.12%)</title><rect x="43.5612%" y="309" width="0.1192%" height="15" fill="rgb(252,106,19)" fg:x="1096" fg:w="3"/><text x="43.8112%" y="319.50"></text></g><g><title>`0x7FF97E6367AA (3 samples, 0.12%)</title><rect x="43.5612%" y="293" width="0.1192%" height="15" fill="rgb(206,74,20)" fg:x="1096" fg:w="3"/><text x="43.8112%" y="303.50"></text></g><g><title>`0x7FF97E6902A4 (3 samples, 0.12%)</title><rect x="43.5612%" y="277" width="0.1192%" height="15" fill="rgb(230,138,44)" fg:x="1096" fg:w="3"/><text x="43.8112%" y="287.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (50 samples, 1.99%)</title><rect x="43.6804%" y="309" width="1.9873%" height="15" fill="rgb(235,182,43)" fg:x="1099" fg:w="50"/><text x="43.9304%" y="319.50">n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (150 samples, 5.96%)</title><rect x="45.7472%" y="293" width="5.9618%" height="15" fill="rgb(242,16,51)" fg:x="1151" fg:w="150"/><text x="45.9972%" y="303.50">neural_n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply9threading27RangeChunkParallel$LT$G$GT$8for_each17hd8f2bb866c6244c4E (210 samples, 8.35%)</title><rect x="45.6677%" y="309" width="8.3466%" height="15" fill="rgb(248,9,4)" fg:x="1149" fg:w="210"/><text x="45.9177%" y="319.50">neural_netwo..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm13masked_kernel17hee2eec0ea6eaee03E (58 samples, 2.31%)</title><rect x="51.7091%" y="293" width="2.3052%" height="15" fill="rgb(210,31,22)" fg:x="1301" fg:w="58"/><text x="51.9591%" y="303.50">n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (48 samples, 1.91%)</title><rect x="52.1065%" y="277" width="1.9078%" height="15" fill="rgb(239,54,39)" fg:x="1311" fg:w="48"/><text x="52.3565%" y="287.50">n..</text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17h91cec0a105d9df62E (278 samples, 11.05%)</title><rect x="43.1638%" y="341" width="11.0493%" height="15" fill="rgb(230,99,41)" fg:x="1086" fg:w="278"/><text x="43.4138%" y="351.50">neural_network.e..</text></g><g><title>neural_network.exe`Unknown (265 samples, 10.53%)</title><rect x="43.6804%" y="325" width="10.5326%" height="15" fill="rgb(253,106,12)" fg:x="1099" fg:w="265"/><text x="43.9304%" y="335.50">neural_network...</text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_alloc (5 samples, 0.20%)</title><rect x="54.0143%" y="309" width="0.1987%" height="15" fill="rgb(213,46,41)" fg:x="1359" fg:w="5"/><text x="54.2643%" y="319.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::impl$0::alloc (5 samples, 0.20%)</title><rect x="54.0143%" y="293" width="0.1987%" height="15" fill="rgb(215,133,35)" fg:x="1359" fg:w="5"/><text x="54.2643%" y="303.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::allocate (5 samples, 0.20%)</title><rect x="54.0143%" y="277" width="0.1987%" height="15" fill="rgb(213,28,5)" fg:x="1359" fg:w="5"/><text x="54.2643%" y="287.50"></text></g><g><title>`0x7FF97E62D239 (5 samples, 0.20%)</title><rect x="54.0143%" y="261" width="0.1987%" height="15" fill="rgb(215,77,49)" fg:x="1359" fg:w="5"/><text x="54.2643%" y="271.50"></text></g><g><title>`0x7FF97E62F633 (5 samples, 0.20%)</title><rect x="54.0143%" y="245" width="0.1987%" height="15" fill="rgb(248,100,22)" fg:x="1359" fg:w="5"/><text x="54.2643%" y="255.50"></text></g><g><title>`0x7FF97E62AFF1 (1 samples, 0.04%)</title><rect x="54.2130%" y="325" width="0.0397%" height="15" fill="rgb(208,67,9)" fg:x="1364" fg:w="1"/><text x="54.4630%" y="335.50"></text></g><g><title>`0x7FF97E62C324 (1 samples, 0.04%)</title><rect x="54.2130%" y="309" width="0.0397%" height="15" fill="rgb(219,133,21)" fg:x="1364" fg:w="1"/><text x="54.4630%" y="319.50"></text></g><g><title>`0x7FF97E629C08 (1 samples, 0.04%)</title><rect x="54.2130%" y="293" width="0.0397%" height="15" fill="rgb(246,46,29)" fg:x="1364" fg:w="1"/><text x="54.4630%" y="303.50"></text></g><g><title>`0x7FF97E634F99 (1 samples, 0.04%)</title><rect x="54.2130%" y="277" width="0.0397%" height="15" fill="rgb(246,185,52)" fg:x="1364" fg:w="1"/><text x="54.4630%" y="287.50"></text></g><g><title>`0x7FF97E6348F0 (1 samples, 0.04%)</title><rect x="54.2130%" y="261" width="0.0397%" height="15" fill="rgb(252,136,11)" fg:x="1364" fg:w="1"/><text x="54.4630%" y="271.50"></text></g><g><title>`0x7FF97E62F633 (2 samples, 0.08%)</title><rect x="54.2528%" y="309" width="0.0795%" height="15" fill="rgb(219,138,53)" fg:x="1365" fg:w="2"/><text x="54.5028%" y="319.50"></text></g><g><title>`0x7FF97E62F70D (1 samples, 0.04%)</title><rect x="54.3323%" y="309" width="0.0397%" height="15" fill="rgb(211,51,23)" fg:x="1367" fg:w="1"/><text x="54.5823%" y="319.50"></text></g><g><title>`0x7FF97E63473E (1 samples, 0.04%)</title><rect x="54.3323%" y="293" width="0.0397%" height="15" fill="rgb(247,221,28)" fg:x="1367" fg:w="1"/><text x="54.5823%" y="303.50"></text></g><g><title>`0x7FF97E62D239 (7 samples, 0.28%)</title><rect x="54.2528%" y="325" width="0.2782%" height="15" fill="rgb(251,222,45)" fg:x="1365" fg:w="7"/><text x="54.5028%" y="335.50"></text></g><g><title>`0x7FF97E62FCFE (4 samples, 0.16%)</title><rect x="54.3720%" y="309" width="0.1590%" height="15" fill="rgb(217,162,53)" fg:x="1368" fg:w="4"/><text x="54.6220%" y="319.50"></text></g><g><title>`0x7FF97E6367AA (4 samples, 0.16%)</title><rect x="54.3720%" y="293" width="0.1590%" height="15" fill="rgb(229,93,14)" fg:x="1368" fg:w="4"/><text x="54.6220%" y="303.50"></text></g><g><title>`0x7FF97E6902A4 (4 samples, 0.16%)</title><rect x="54.3720%" y="277" width="0.1590%" height="15" fill="rgb(209,67,49)" fg:x="1368" fg:w="4"/><text x="54.6220%" y="287.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (58 samples, 2.31%)</title><rect x="54.5707%" y="309" width="2.3052%" height="15" fill="rgb(213,87,29)" fg:x="1373" fg:w="58"/><text x="54.8207%" y="319.50">n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (131 samples, 5.21%)</title><rect x="56.9952%" y="293" width="5.2067%" height="15" fill="rgb(205,151,52)" fg:x="1434" fg:w="131"/><text x="57.2452%" y="303.50">neural..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply9threading27RangeChunkParallel$LT$G$GT$8for_each17hd8f2bb866c6244c4E (185 samples, 7.35%)</title><rect x="56.8760%" y="309" width="7.3529%" height="15" fill="rgb(253,215,39)" fg:x="1431" fg:w="185"/><text x="57.1260%" y="319.50">neural_net..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm13masked_kernel17hee2eec0ea6eaee03E (51 samples, 2.03%)</title><rect x="62.2019%" y="293" width="2.0270%" height="15" fill="rgb(221,220,41)" fg:x="1565" fg:w="51"/><text x="62.4519%" y="303.50">n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (39 samples, 1.55%)</title><rect x="62.6789%" y="277" width="1.5501%" height="15" fill="rgb(218,133,21)" fg:x="1577" fg:w="39"/><text x="62.9289%" y="287.50"></text></g><g><title>`0x7FF97E62CC9A (1 samples, 0.04%)</title><rect x="64.2289%" y="261" width="0.0397%" height="15" fill="rgb(221,193,43)" fg:x="1616" fg:w="1"/><text x="64.4789%" y="271.50"></text></g><g><title>`0x7FF97E62D562 (1 samples, 0.04%)</title><rect x="64.2289%" y="245" width="0.0397%" height="15" fill="rgb(240,128,52)" fg:x="1616" fg:w="1"/><text x="64.4789%" y="255.50"></text></g><g><title>`0x7FF97E62F633 (2 samples, 0.08%)</title><rect x="64.2687%" y="245" width="0.0795%" height="15" fill="rgb(253,114,12)" fg:x="1617" fg:w="2"/><text x="64.5187%" y="255.50"></text></g><g><title>`0x7FF97E62F75C (1 samples, 0.04%)</title><rect x="64.3482%" y="245" width="0.0397%" height="15" fill="rgb(215,223,47)" fg:x="1619" fg:w="1"/><text x="64.5982%" y="255.50"></text></g><g><title>`0x7FF97E62F7DE (1 samples, 0.04%)</title><rect x="64.3879%" y="245" width="0.0397%" height="15" fill="rgb(248,225,23)" fg:x="1620" fg:w="1"/><text x="64.6379%" y="255.50"></text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17ha48444b8d47a9be3E (258 samples, 10.25%)</title><rect x="54.2130%" y="341" width="10.2544%" height="15" fill="rgb(250,108,0)" fg:x="1364" fg:w="258"/><text x="54.4630%" y="351.50">neural_network...</text></g><g><title>neural_network.exe`Unknown (250 samples, 9.94%)</title><rect x="54.5310%" y="325" width="9.9364%" height="15" fill="rgb(228,208,7)" fg:x="1372" fg:w="250"/><text x="54.7810%" y="335.50">neural_network..</text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_alloc (6 samples, 0.24%)</title><rect x="64.2289%" y="309" width="0.2385%" height="15" fill="rgb(244,45,10)" fg:x="1616" fg:w="6"/><text x="64.4789%" y="319.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::impl$0::alloc (6 samples, 0.24%)</title><rect x="64.2289%" y="293" width="0.2385%" height="15" fill="rgb(207,125,25)" fg:x="1616" fg:w="6"/><text x="64.4789%" y="303.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::allocate (6 samples, 0.24%)</title><rect x="64.2289%" y="277" width="0.2385%" height="15" fill="rgb(210,195,18)" fg:x="1616" fg:w="6"/><text x="64.4789%" y="287.50"></text></g><g><title>`0x7FF97E62D239 (5 samples, 0.20%)</title><rect x="64.2687%" y="261" width="0.1987%" height="15" fill="rgb(249,80,12)" fg:x="1617" fg:w="5"/><text x="64.5187%" y="271.50"></text></g><g><title>`0x7FF97E62F84F (1 samples, 0.04%)</title><rect x="64.4277%" y="245" width="0.0397%" height="15" fill="rgb(221,65,9)" fg:x="1621" fg:w="1"/><text x="64.6777%" y="255.50"></text></g><g><title>neural_network.exe`_ZN7ndarray7numeric12impl_numeric49_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$8sum_axis17h0d8c9ebe2a969f6eE (68 samples, 2.70%)</title><rect x="64.4674%" y="341" width="2.7027%" height="15" fill="rgb(235,49,36)" fg:x="1622" fg:w="68"/><text x="64.7174%" y="351.50">ne..</text></g><g><title>`0x7FF97E62CC9A (1 samples, 0.04%)</title><rect x="67.1701%" y="309" width="0.0397%" height="15" fill="rgb(225,32,20)" fg:x="1690" fg:w="1"/><text x="67.4201%" y="319.50"></text></g><g><title>`0x7FF97E62DBBF (1 samples, 0.04%)</title><rect x="67.1701%" y="293" width="0.0397%" height="15" fill="rgb(215,141,46)" fg:x="1690" fg:w="1"/><text x="67.4201%" y="303.50"></text></g><g><title>`0x7FF97E631990 (1 samples, 0.04%)</title><rect x="67.1701%" y="277" width="0.0397%" height="15" fill="rgb(250,160,47)" fg:x="1690" fg:w="1"/><text x="67.4201%" y="287.50"></text></g><g><title>`0x7FF97E62F633 (5 samples, 0.20%)</title><rect x="67.2099%" y="293" width="0.1987%" height="15" fill="rgb(216,222,40)" fg:x="1691" fg:w="5"/><text x="67.4599%" y="303.50"></text></g><g><title>`0x7FF97E62D239 (6 samples, 0.24%)</title><rect x="67.2099%" y="309" width="0.2385%" height="15" fill="rgb(234,217,39)" fg:x="1691" fg:w="6"/><text x="67.4599%" y="319.50"></text></g><g><title>`0x7FF97E62F84F (1 samples, 0.04%)</title><rect x="67.4086%" y="293" width="0.0397%" height="15" fill="rgb(207,178,40)" fg:x="1696" fg:w="1"/><text x="67.6586%" y="303.50"></text></g><g><title>neural_network.exe`_ZN14neural_network6layers11dense_layer10DenseLayer13backpropagate17hacdda2f65de8594cE (1,338 samples, 53.18%)</title><rect x="21.5024%" y="357" width="53.1797%" height="15" fill="rgb(221,136,13)" fg:x="541" fg:w="1338"/><text x="21.7524%" y="367.50">neural_network.exe`_ZN14neural_network6layers11dense_layer10DenseLayer13backpropagate17h..</text></g><g><title>neural_network.exe`_ZN7ndarray8impl_ops14arithmetic_ops131_$LT$impl$u20$core..ops..arith..Mul$LT$$RF$ndarray..ArrayBase$LT$S2$C$E$GT$$GT$$u20$for$u20$$RF$ndarray..ArrayBase$LT$S$C$D$GT$$GT$3mul17hcb7ca4666222db91E (189 samples, 7.51%)</title><rect x="67.1701%" y="341" width="7.5119%" height="15" fill="rgb(249,199,10)" fg:x="1690" fg:w="189"/><text x="67.4201%" y="351.50">neural_net..</text></g><g><title>neural_network.exe`_ZN7ndarray17impl_constructors49_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$12build_uninit17h9e4133037fcd4b9bE (189 samples, 7.51%)</title><rect x="67.1701%" y="325" width="7.5119%" height="15" fill="rgb(249,222,13)" fg:x="1690" fg:w="189"/><text x="67.4201%" y="335.50">neural_net..</text></g><g><title>neural_network.exe`_ZN7ndarray3zip38Zip$LT$$LP$P1$C$P2$C$PLast$RP$$C$D$GT$20collect_with_partial17h863a0b7799f5e811E (182 samples, 7.23%)</title><rect x="67.4483%" y="309" width="7.2337%" height="15" fill="rgb(244,185,38)" fg:x="1697" fg:w="182"/><text x="67.6983%" y="319.50">neural_net..</text></g><g><title>`0x7FF968D511FB (203 samples, 8.07%)</title><rect x="74.6820%" y="341" width="8.0684%" height="15" fill="rgb(236,202,9)" fg:x="1879" fg:w="203"/><text x="74.9320%" y="351.50">`0x7FF968D5..</text></g><g><title>`0x7FF97E62D239 (8 samples, 0.32%)</title><rect x="82.7504%" y="341" width="0.3180%" height="15" fill="rgb(250,229,37)" fg:x="2082" fg:w="8"/><text x="83.0004%" y="351.50"></text></g><g><title>`0x7FF97E62F633 (8 samples, 0.32%)</title><rect x="82.7504%" y="325" width="0.3180%" height="15" fill="rgb(206,174,23)" fg:x="2082" fg:w="8"/><text x="83.0004%" y="335.50"></text></g><g><title>`0x7FF97E62AFB7 (1 samples, 0.04%)</title><rect x="83.0684%" y="325" width="0.0397%" height="15" fill="rgb(211,33,43)" fg:x="2090" fg:w="1"/><text x="83.3184%" y="335.50"></text></g><g><title>`0x7FF97E62CC9A (1 samples, 0.04%)</title><rect x="83.1081%" y="325" width="0.0397%" height="15" fill="rgb(245,58,50)" fg:x="2091" fg:w="1"/><text x="83.3581%" y="335.50"></text></g><g><title>`0x7FF97E62D588 (1 samples, 0.04%)</title><rect x="83.1081%" y="309" width="0.0397%" height="15" fill="rgb(244,68,36)" fg:x="2091" fg:w="1"/><text x="83.3581%" y="319.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers20activation_functions8activate17ha305ebebb7dcf567E (60 samples, 2.38%)</title><rect x="83.1479%" y="325" width="2.3847%" height="15" fill="rgb(232,229,15)" fg:x="2092" fg:w="60"/><text x="83.3979%" y="335.50">ne..</text></g><g><title>`0x7FF97E62F49F (1 samples, 0.04%)</title><rect x="85.5326%" y="293" width="0.0397%" height="15" fill="rgb(254,30,23)" fg:x="2152" fg:w="1"/><text x="85.7826%" y="303.50"></text></g><g><title>`0x7FF97E62F633 (4 samples, 0.16%)</title><rect x="85.5723%" y="293" width="0.1590%" height="15" fill="rgb(235,160,14)" fg:x="2153" fg:w="4"/><text x="85.8223%" y="303.50"></text></g><g><title>`0x7FF97E62F84F (2 samples, 0.08%)</title><rect x="85.7313%" y="293" width="0.0795%" height="15" fill="rgb(212,155,44)" fg:x="2157" fg:w="2"/><text x="85.9813%" y="303.50"></text></g><g><title>`0x7FF97E62D239 (9 samples, 0.36%)</title><rect x="85.5326%" y="309" width="0.3577%" height="15" fill="rgb(226,2,50)" fg:x="2152" fg:w="9"/><text x="85.7826%" y="319.50"></text></g><g><title>`0x7FF97E62FCFE (2 samples, 0.08%)</title><rect x="85.8108%" y="293" width="0.0795%" height="15" fill="rgb(234,177,6)" fg:x="2159" fg:w="2"/><text x="86.0608%" y="303.50"></text></g><g><title>`0x7FF97E6367AA (2 samples, 0.08%)</title><rect x="85.8108%" y="277" width="0.0795%" height="15" fill="rgb(217,24,9)" fg:x="2159" fg:w="2"/><text x="86.0608%" y="287.50"></text></g><g><title>`0x7FF97E6902A4 (2 samples, 0.08%)</title><rect x="85.8108%" y="261" width="0.0795%" height="15" fill="rgb(220,13,46)" fg:x="2159" fg:w="2"/><text x="86.0608%" y="271.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (40 samples, 1.59%)</title><rect x="85.9698%" y="293" width="1.5898%" height="15" fill="rgb(239,221,27)" fg:x="2163" fg:w="40"/><text x="86.2198%" y="303.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (165 samples, 6.56%)</title><rect x="87.8776%" y="277" width="6.5580%" height="15" fill="rgb(222,198,25)" fg:x="2211" fg:w="165"/><text x="88.1276%" y="287.50">neural_ne..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply9threading27RangeChunkParallel$LT$G$GT$8for_each17hd8f2bb866c6244c4E (224 samples, 8.90%)</title><rect x="87.5596%" y="293" width="8.9030%" height="15" fill="rgb(211,99,13)" fg:x="2203" fg:w="224"/><text x="87.8096%" y="303.50">neural_networ..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm13masked_kernel17hee2eec0ea6eaee03E (51 samples, 2.03%)</title><rect x="94.4356%" y="277" width="2.0270%" height="15" fill="rgb(232,111,31)" fg:x="2376" fg:w="51"/><text x="94.6856%" y="287.50">n..</text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (42 samples, 1.67%)</title><rect x="94.7933%" y="261" width="1.6693%" height="15" fill="rgb(245,82,37)" fg:x="2385" fg:w="42"/><text x="95.0433%" y="271.50"></text></g><g><title>`0x7FF97E62F633 (1 samples, 0.04%)</title><rect x="96.4626%" y="229" width="0.0397%" height="15" fill="rgb(227,149,46)" fg:x="2427" fg:w="1"/><text x="96.7126%" y="239.50"></text></g><g><title>`0x7FF97E62F7DE (1 samples, 0.04%)</title><rect x="96.5024%" y="229" width="0.0397%" height="15" fill="rgb(218,36,50)" fg:x="2428" fg:w="1"/><text x="96.7524%" y="239.50"></text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17h91cec0a105d9df62E (281 samples, 11.17%)</title><rect x="85.5326%" y="325" width="11.1685%" height="15" fill="rgb(226,80,48)" fg:x="2152" fg:w="281"/><text x="85.7826%" y="335.50">neural_network.e..</text></g><g><title>neural_network.exe`Unknown (272 samples, 10.81%)</title><rect x="85.8903%" y="309" width="10.8108%" height="15" fill="rgb(238,224,15)" fg:x="2161" fg:w="272"/><text x="86.1403%" y="319.50">neural_network.e..</text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_alloc (6 samples, 0.24%)</title><rect x="96.4626%" y="293" width="0.2385%" height="15" fill="rgb(241,136,10)" fg:x="2427" fg:w="6"/><text x="96.7126%" y="303.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::impl$0::alloc (6 samples, 0.24%)</title><rect x="96.4626%" y="277" width="0.2385%" height="15" fill="rgb(208,32,45)" fg:x="2427" fg:w="6"/><text x="96.7126%" y="287.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::allocate (6 samples, 0.24%)</title><rect x="96.4626%" y="261" width="0.2385%" height="15" fill="rgb(207,135,9)" fg:x="2427" fg:w="6"/><text x="96.7126%" y="271.50"></text></g><g><title>`0x7FF97E62D239 (6 samples, 0.24%)</title><rect x="96.4626%" y="245" width="0.2385%" height="15" fill="rgb(206,86,44)" fg:x="2427" fg:w="6"/><text x="96.7126%" y="255.50"></text></g><g><title>`0x7FF97E62FCFE (4 samples, 0.16%)</title><rect x="96.5421%" y="229" width="0.1590%" height="15" fill="rgb(245,177,15)" fg:x="2429" fg:w="4"/><text x="96.7921%" y="239.50"></text></g><g><title>`0x7FF97E6367AA (4 samples, 0.16%)</title><rect x="96.5421%" y="213" width="0.1590%" height="15" fill="rgb(206,64,50)" fg:x="2429" fg:w="4"/><text x="96.7921%" y="223.50"></text></g><g><title>`0x7FF97E6902A4 (4 samples, 0.16%)</title><rect x="96.5421%" y="197" width="0.1590%" height="15" fill="rgb(234,36,40)" fg:x="2429" fg:w="4"/><text x="96.7921%" y="207.50"></text></g><g><title>neural_network.exe`_ZN14neural_network6layers11dense_layer10DenseLayer4pass17h9edb117f1cddcd20E (373 samples, 14.83%)</title><rect x="83.0684%" y="341" width="14.8251%" height="15" fill="rgb(213,64,8)" fg:x="2090" fg:w="373"/><text x="83.3184%" y="351.50">neural_network.exe`_ZN1..</text></g><g><title>neural_network.exe`_ZN7ndarray3zip16Zip$LT$P$C$D$GT$5inner17hada544ab19eae98bE.llvm.7293305447528590825 (30 samples, 1.19%)</title><rect x="96.7011%" y="325" width="1.1924%" height="15" fill="rgb(210,75,36)" fg:x="2433" fg:w="30"/><text x="96.9511%" y="335.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet12forward_pass17hd1a206657b28ada8E.llvm.4137659153823433258 (585 samples, 23.25%)</title><rect x="74.6820%" y="357" width="23.2512%" height="15" fill="rgb(229,88,21)" fg:x="1879" fg:w="585"/><text x="74.9320%" y="367.50">neural_network.exe`_ZN14neural_networ..</text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hb07c294342190f5aE (1 samples, 0.04%)</title><rect x="97.8935%" y="341" width="0.0397%" height="15" fill="rgb(252,204,47)" fg:x="2463" fg:w="1"/><text x="98.1435%" y="351.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17hcdd8c185bebeaceaE.llvm.13346314366924044816 (1 samples, 0.04%)</title><rect x="97.8935%" y="325" width="0.0397%" height="15" fill="rgb(208,77,27)" fg:x="2463" fg:w="1"/><text x="98.1435%" y="335.50"></text></g><g><title>`0x7FF97E62CB7D (1 samples, 0.04%)</title><rect x="97.8935%" y="309" width="0.0397%" height="15" fill="rgb(221,76,26)" fg:x="2463" fg:w="1"/><text x="98.1435%" y="319.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet13backpropagate17hcc982577da8adfd9E (2,432 samples, 96.66%)</title><rect x="2.2258%" y="373" width="96.6614%" height="15" fill="rgb(225,139,18)" fg:x="56" fg:w="2432"/><text x="2.4758%" y="383.50">neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet13backpropagate17hcc982577da8adfd9E</text></g><g><title>neural_network.exe`_ZN7ndarray12impl_methods49_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$23zip_mut_with_same_shape17hfec367b60d2de7a1E (24 samples, 0.95%)</title><rect x="97.9332%" y="357" width="0.9539%" height="15" fill="rgb(230,137,11)" fg:x="2464" fg:w="24"/><text x="98.1832%" y="367.50"></text></g><g><title>`0x7FF97E62CC9A (1 samples, 0.04%)</title><rect x="98.8871%" y="325" width="0.0397%" height="15" fill="rgb(212,28,1)" fg:x="2488" fg:w="1"/><text x="99.1371%" y="335.50"></text></g><g><title>`0x7FF97E62D6C7 (1 samples, 0.04%)</title><rect x="98.8871%" y="309" width="0.0397%" height="15" fill="rgb(248,164,17)" fg:x="2488" fg:w="1"/><text x="99.1371%" y="319.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply7packing9pack_avx217h13c2011a146f2013E (1 samples, 0.04%)</title><rect x="98.9269%" y="293" width="0.0397%" height="15" fill="rgb(222,171,42)" fg:x="2489" fg:w="1"/><text x="99.1769%" y="303.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply9threading27RangeChunkParallel$LT$G$GT$8for_each17hd8f2bb866c6244c4E (1 samples, 0.04%)</title><rect x="98.9666%" y="293" width="0.0397%" height="15" fill="rgb(243,84,45)" fg:x="2490" fg:w="1"/><text x="99.2166%" y="303.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply4gemm13masked_kernel17hee2eec0ea6eaee03E (1 samples, 0.04%)</title><rect x="98.9666%" y="277" width="0.0397%" height="15" fill="rgb(252,49,23)" fg:x="2490" fg:w="1"/><text x="99.2166%" y="287.50"></text></g><g><title>neural_network.exe`_ZN14matrixmultiply12sgemm_kernel17kernel_target_fma17h60f801d0d7a890adE (1 samples, 0.04%)</title><rect x="98.9666%" y="261" width="0.0397%" height="15" fill="rgb(215,19,7)" fg:x="2490" fg:w="1"/><text x="99.2166%" y="271.50"></text></g><g><title>`0x7FF97E62F633 (2 samples, 0.08%)</title><rect x="99.0064%" y="229" width="0.0795%" height="15" fill="rgb(238,81,41)" fg:x="2491" fg:w="2"/><text x="99.2564%" y="239.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet7predict17h62ebcdd77e5e2ea7E (6 samples, 0.24%)</title><rect x="98.8871%" y="373" width="0.2385%" height="15" fill="rgb(210,199,37)" fg:x="2488" fg:w="6"/><text x="99.1371%" y="383.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet12forward_pass17hd1a206657b28ada8E.llvm.4137659153823433258 (6 samples, 0.24%)</title><rect x="98.8871%" y="357" width="0.2385%" height="15" fill="rgb(244,192,49)" fg:x="2488" fg:w="6"/><text x="99.1371%" y="367.50"></text></g><g><title>neural_network.exe`_ZN14neural_network6layers11dense_layer10DenseLayer4pass17h9edb117f1cddcd20E (6 samples, 0.24%)</title><rect x="98.8871%" y="341" width="0.2385%" height="15" fill="rgb(226,211,11)" fg:x="2488" fg:w="6"/><text x="99.1371%" y="351.50"></text></g><g><title>neural_network.exe`_ZN247_$LT$ndarray..ArrayBase$LT$S$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$u20$as$u20$ndarray..linalg..impl_linalg..Dot$LT$ndarray..ArrayBase$LT$S2$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$2$u5d$$GT$$GT$$GT$$GT$3dot17h91cec0a105d9df62E (5 samples, 0.20%)</title><rect x="98.9269%" y="325" width="0.1987%" height="15" fill="rgb(236,162,54)" fg:x="2489" fg:w="5"/><text x="99.1769%" y="335.50"></text></g><g><title>neural_network.exe`Unknown (5 samples, 0.20%)</title><rect x="98.9269%" y="309" width="0.1987%" height="15" fill="rgb(220,229,9)" fg:x="2489" fg:w="5"/><text x="99.1769%" y="319.50"></text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_alloc (3 samples, 0.12%)</title><rect x="99.0064%" y="293" width="0.1192%" height="15" fill="rgb(250,87,22)" fg:x="2491" fg:w="3"/><text x="99.2564%" y="303.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::impl$0::alloc (3 samples, 0.12%)</title><rect x="99.0064%" y="277" width="0.1192%" height="15" fill="rgb(239,43,17)" fg:x="2491" fg:w="3"/><text x="99.2564%" y="287.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::alloc::allocate (3 samples, 0.12%)</title><rect x="99.0064%" y="261" width="0.1192%" height="15" fill="rgb(231,177,25)" fg:x="2491" fg:w="3"/><text x="99.2564%" y="271.50"></text></g><g><title>`0x7FF97E62D239 (3 samples, 0.12%)</title><rect x="99.0064%" y="245" width="0.1192%" height="15" fill="rgb(219,179,1)" fg:x="2491" fg:w="3"/><text x="99.2564%" y="255.50"></text></g><g><title>`0x7FF97E62F84F (1 samples, 0.04%)</title><rect x="99.0859%" y="229" width="0.0397%" height="15" fill="rgb(238,219,53)" fg:x="2493" fg:w="1"/><text x="99.3359%" y="239.50"></text></g><g><title>`0x7FF97B952FA9 (1 samples, 0.04%)</title><rect x="99.1256%" y="101" width="0.0397%" height="15" fill="rgb(232,167,36)" fg:x="2494" fg:w="1"/><text x="99.3756%" y="111.50"></text></g><g><title>`0x7FF97E690084 (1 samples, 0.04%)</title><rect x="99.1256%" y="85" width="0.0397%" height="15" fill="rgb(244,19,51)" fg:x="2494" fg:w="1"/><text x="99.3756%" y="95.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::stdio::is_console (2 samples, 0.08%)</title><rect x="99.1256%" y="149" width="0.0795%" height="15" fill="rgb(224,6,22)" fg:x="2494" fg:w="2"/><text x="99.3756%" y="159.50"></text></g><g><title>`0x7FF97B952CD3 (2 samples, 0.08%)</title><rect x="99.1256%" y="133" width="0.0795%" height="15" fill="rgb(224,145,5)" fg:x="2494" fg:w="2"/><text x="99.3756%" y="143.50"></text></g><g><title>`0x7FF97B952EB4 (2 samples, 0.08%)</title><rect x="99.1256%" y="117" width="0.0795%" height="15" fill="rgb(234,130,49)" fg:x="2494" fg:w="2"/><text x="99.3756%" y="127.50"></text></g><g><title>`0x7FF97B952FBA (1 samples, 0.04%)</title><rect x="99.1653%" y="101" width="0.0397%" height="15" fill="rgb(254,6,2)" fg:x="2495" fg:w="1"/><text x="99.4153%" y="111.50"></text></g><g><title>`0x7FF97B9C0427 (1 samples, 0.04%)</title><rect x="99.1653%" y="85" width="0.0397%" height="15" fill="rgb(208,96,46)" fg:x="2495" fg:w="1"/><text x="99.4153%" y="95.50"></text></g><g><title>`0x7FF97E64AF28 (2,492 samples, 99.05%)</title><rect x="0.2385%" y="597" width="99.0461%" height="15" fill="rgb(239,3,39)" fg:x="6" fg:w="2492"/><text x="0.4885%" y="607.50">`0x7FF97E64AF28</text></g><g><title>`0x7FF97DFB257D (2,492 samples, 99.05%)</title><rect x="0.2385%" y="581" width="99.0461%" height="15" fill="rgb(233,210,1)" fg:x="6" fg:w="2492"/><text x="0.4885%" y="591.50">`0x7FF97DFB257D</text></g><g><title>neural_network.exe`__scrt_common_main_seh() (2,487 samples, 98.85%)</title><rect x="0.4372%" y="565" width="98.8474%" height="15" fill="rgb(244,137,37)" fg:x="11" fg:w="2487"/><text x="0.6872%" y="575.50">neural_network.exe`__scrt_common_main_seh()</text></g><g><title>neural_network.exe`invoke_main() (2,483 samples, 98.69%)</title><rect x="0.5962%" y="549" width="98.6884%" height="15" fill="rgb(240,136,2)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="559.50">neural_network.exe`invoke_main()</text></g><g><title>neural_network.exe`main (2,483 samples, 98.69%)</title><rect x="0.5962%" y="533" width="98.6884%" height="15" fill="rgb(239,18,37)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="543.50">neural_network.exe`main</text></g><g><title>neural_network.exe`std::rt::lang_start_internal (2,483 samples, 98.69%)</title><rect x="0.5962%" y="517" width="98.6884%" height="15" fill="rgb(218,185,22)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="527.50">neural_network.exe`std::rt::lang_start_internal</text></g><g><title>neural_network.exe`std::panic::catch_unwind (2,483 samples, 98.69%)</title><rect x="0.5962%" y="501" width="98.6884%" height="15" fill="rgb(225,218,4)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="511.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`std::panicking::try (2,483 samples, 98.69%)</title><rect x="0.5962%" y="485" width="98.6884%" height="15" fill="rgb(230,182,32)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="495.50">neural_network.exe`std::panicking::try</text></g><g><title>neural_network.exe`std::panicking::try::do_call (2,483 samples, 98.69%)</title><rect x="0.5962%" y="469" width="98.6884%" height="15" fill="rgb(242,56,43)" fg:x="15" fg:w="2483"/><text x="0.8462%" y="479.50">neural_network.exe`std::panicking::try::do_call</text></g><g><title>neural_network.exe`std::rt::lang_start_internal::closure$2 (2,482 samples, 98.65%)</title><rect x="0.6359%" y="453" width="98.6486%" height="15" fill="rgb(233,99,24)" fg:x="16" fg:w="2482"/><text x="0.8859%" y="463.50">neural_network.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>neural_network.exe`std::panic::catch_unwind (2,482 samples, 98.65%)</title><rect x="0.6359%" y="437" width="98.6486%" height="15" fill="rgb(234,209,42)" fg:x="16" fg:w="2482"/><text x="0.8859%" y="447.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h6d67b664973906deE.llvm.11580353140927509255 (2,482 samples, 98.65%)</title><rect x="0.6359%" y="421" width="98.6486%" height="15" fill="rgb(227,7,12)" fg:x="16" fg:w="2482"/><text x="0.8859%" y="431.50">neural_network.exe`_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h6d67b664973906deE.llvm.11580353140927509255</text></g><g><title>neural_network.exe`_ZN3std3sys9backtrace28__rust_begin_short_backtrace17h63251156b8c324b6E (2,482 samples, 98.65%)</title><rect x="0.6359%" y="405" width="98.6486%" height="15" fill="rgb(245,203,43)" fg:x="16" fg:w="2482"/><text x="0.8859%" y="415.50">neural_network.exe`_ZN3std3sys9backtrace28__rust_begin_short_backtrace17h63251156b8c324b6E</text></g><g><title>neural_network.exe`Unknown (2,482 samples, 98.65%)</title><rect x="0.6359%" y="389" width="98.6486%" height="15" fill="rgb(238,205,33)" fg:x="16" fg:w="2482"/><text x="0.8859%" y="399.50">neural_network.exe`Unknown</text></g><g><title>neural_network.exe`std::io::stdio::_print (4 samples, 0.16%)</title><rect x="99.1256%" y="373" width="0.1590%" height="15" fill="rgb(231,56,7)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="383.50"></text></g><g><title>neural_network.exe`std::io::stdio::print_to (4 samples, 0.16%)</title><rect x="99.1256%" y="357" width="0.1590%" height="15" fill="rgb(244,186,29)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="367.50"></text></g><g><title>neural_network.exe`std::io::stdio::impl$16::write_fmt (4 samples, 0.16%)</title><rect x="99.1256%" y="341" width="0.1590%" height="15" fill="rgb(234,111,31)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="351.50"></text></g><g><title>neural_network.exe`std::io::Write::write_fmt (4 samples, 0.16%)</title><rect x="99.1256%" y="325" width="0.1590%" height="15" fill="rgb(241,149,10)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="335.50"></text></g><g><title>neural_network.exe`core::fmt::write (4 samples, 0.16%)</title><rect x="99.1256%" y="309" width="0.1590%" height="15" fill="rgb(249,206,44)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="319.50"></text></g><g><title>neural_network.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (4 samples, 0.16%)</title><rect x="99.1256%" y="293" width="0.1590%" height="15" fill="rgb(251,153,30)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="303.50"></text></g><g><title>neural_network.exe`std::io::stdio::impl$19::write_all (4 samples, 0.16%)</title><rect x="99.1256%" y="277" width="0.1590%" height="15" fill="rgb(239,152,38)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="287.50"></text></g><g><title>neural_network.exe`std::sync::reentrant_lock::impl$11::deref (4 samples, 0.16%)</title><rect x="99.1256%" y="261" width="0.1590%" height="15" fill="rgb(249,139,47)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="271.50"></text></g><g><title>neural_network.exe`std::io::buffered::linewritershim::impl$1::write_all (4 samples, 0.16%)</title><rect x="99.1256%" y="245" width="0.1590%" height="15" fill="rgb(244,64,35)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="255.50"></text></g><g><title>neural_network.exe`core::result::impl$26::branch (4 samples, 0.16%)</title><rect x="99.1256%" y="229" width="0.1590%" height="15" fill="rgb(216,46,15)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="239.50"></text></g><g><title>neural_network.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (4 samples, 0.16%)</title><rect x="99.1256%" y="213" width="0.1590%" height="15" fill="rgb(250,74,19)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="223.50"></text></g><g><title>neural_network.exe`std::io::stdio::impl$1::write (4 samples, 0.16%)</title><rect x="99.1256%" y="197" width="0.1590%" height="15" fill="rgb(249,42,33)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="207.50"></text></g><g><title>neural_network.exe`std::io::stdio::handle_ebadf (4 samples, 0.16%)</title><rect x="99.1256%" y="181" width="0.1590%" height="15" fill="rgb(242,149,17)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="191.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::stdio::write (4 samples, 0.16%)</title><rect x="99.1256%" y="165" width="0.1590%" height="15" fill="rgb(244,29,21)" fg:x="2494" fg:w="4"/><text x="99.3756%" y="175.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (2 samples, 0.08%)</title><rect x="99.2051%" y="149" width="0.0795%" height="15" fill="rgb(220,130,37)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="159.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::stdio::write_u16s (2 samples, 0.08%)</title><rect x="99.2051%" y="133" width="0.0795%" height="15" fill="rgb(211,67,2)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="143.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::cvt (2 samples, 0.08%)</title><rect x="99.2051%" y="117" width="0.0795%" height="15" fill="rgb(235,68,52)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="127.50"></text></g><g><title>neural_network.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.08%)</title><rect x="99.2051%" y="101" width="0.0795%" height="15" fill="rgb(246,142,3)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="111.50"></text></g><g><title>`0x7FF97B952BDE (2 samples, 0.08%)</title><rect x="99.2051%" y="85" width="0.0795%" height="15" fill="rgb(241,25,7)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="95.50"></text></g><g><title>`0x7FF97B952C73 (2 samples, 0.08%)</title><rect x="99.2051%" y="69" width="0.0795%" height="15" fill="rgb(242,119,39)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="79.50"></text></g><g><title>`0x7FF97B952FA9 (2 samples, 0.08%)</title><rect x="99.2051%" y="53" width="0.0795%" height="15" fill="rgb(241,98,45)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="63.50"></text></g><g><title>`0x7FF97E690084 (2 samples, 0.08%)</title><rect x="99.2051%" y="37" width="0.0795%" height="15" fill="rgb(254,28,30)" fg:x="2496" fg:w="2"/><text x="99.4551%" y="47.50"></text></g><g><title>`0x7FF97E6CCF61 (1 samples, 0.04%)</title><rect x="99.2846%" y="549" width="0.0397%" height="15" fill="rgb(241,142,54)" fg:x="2498" fg:w="1"/><text x="99.5346%" y="559.50"></text></g><g><title>`0x7FF97E6CCE19 (1 samples, 0.04%)</title><rect x="99.2846%" y="533" width="0.0397%" height="15" fill="rgb(222,85,15)" fg:x="2498" fg:w="1"/><text x="99.5346%" y="543.50"></text></g><g><title>`0x7FF97E69EFE3 (1 samples, 0.04%)</title><rect x="99.2846%" y="517" width="0.0397%" height="15" fill="rgb(210,85,47)" fg:x="2498" fg:w="1"/><text x="99.5346%" y="527.50"></text></g><g><title>`0x7FF97E691F94 (1 samples, 0.04%)</title><rect x="99.2846%" y="501" width="0.0397%" height="15" fill="rgb(224,206,25)" fg:x="2498" fg:w="1"/><text x="99.5346%" y="511.50"></text></g><g><title>`0x7FF97E6CD71D (1 samples, 0.04%)</title><rect x="99.3243%" y="549" width="0.0397%" height="15" fill="rgb(243,201,19)" fg:x="2499" fg:w="1"/><text x="99.5743%" y="559.50"></text></g><g><title>`0x7FF97E6CEFC2 (1 samples, 0.04%)</title><rect x="99.3243%" y="533" width="0.0397%" height="15" fill="rgb(236,59,4)" fg:x="2499" fg:w="1"/><text x="99.5743%" y="543.50"></text></g><g><title>`0x7FF97E638B2F (1 samples, 0.04%)</title><rect x="99.3243%" y="517" width="0.0397%" height="15" fill="rgb(254,179,45)" fg:x="2499" fg:w="1"/><text x="99.5743%" y="527.50"></text></g><g><title>`0x7FF97E690664 (1 samples, 0.04%)</title><rect x="99.3243%" y="501" width="0.0397%" height="15" fill="rgb(226,14,10)" fg:x="2499" fg:w="1"/><text x="99.5743%" y="511.50"></text></g><g><title>`0x7FF97E6CD8E5 (1 samples, 0.04%)</title><rect x="99.3641%" y="549" width="0.0397%" height="15" fill="rgb(244,27,41)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="559.50"></text></g><g><title>`0x7FF97E6485FA (1 samples, 0.04%)</title><rect x="99.3641%" y="533" width="0.0397%" height="15" fill="rgb(235,35,32)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="543.50"></text></g><g><title>`0x7FF97E648CBF (1 samples, 0.04%)</title><rect x="99.3641%" y="517" width="0.0397%" height="15" fill="rgb(218,68,31)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="527.50"></text></g><g><title>`0x7FF97E648D64 (1 samples, 0.04%)</title><rect x="99.3641%" y="501" width="0.0397%" height="15" fill="rgb(207,120,37)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="511.50"></text></g><g><title>`0x7FF97E60EC88 (1 samples, 0.04%)</title><rect x="99.3641%" y="485" width="0.0397%" height="15" fill="rgb(227,98,0)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="495.50"></text></g><g><title>`0x7FF97E648841 (1 samples, 0.04%)</title><rect x="99.3641%" y="469" width="0.0397%" height="15" fill="rgb(207,7,3)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="479.50"></text></g><g><title>`0x7FF97E6489A0 (1 samples, 0.04%)</title><rect x="99.3641%" y="453" width="0.0397%" height="15" fill="rgb(206,98,19)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="463.50"></text></g><g><title>`0x7FF97E648A9E (1 samples, 0.04%)</title><rect x="99.3641%" y="437" width="0.0397%" height="15" fill="rgb(217,5,26)" fg:x="2500" fg:w="1"/><text x="99.6141%" y="447.50"></text></g><g><title>`0x7FF97E6CE29E (1 samples, 0.04%)</title><rect x="99.4038%" y="549" width="0.0397%" height="15" fill="rgb(235,190,38)" fg:x="2501" fg:w="1"/><text x="99.6538%" y="559.50"></text></g><g><title>`0x7FF97E66BD38 (1 samples, 0.04%)</title><rect x="99.4038%" y="533" width="0.0397%" height="15" fill="rgb(247,86,24)" fg:x="2501" fg:w="1"/><text x="99.6538%" y="543.50"></text></g><g><title>`0x7FF97E66BE0C (1 samples, 0.04%)</title><rect x="99.4038%" y="517" width="0.0397%" height="15" fill="rgb(205,101,16)" fg:x="2501" fg:w="1"/><text x="99.6538%" y="527.50"></text></g><g><title>`0x7FF97E690604 (1 samples, 0.04%)</title><rect x="99.4038%" y="501" width="0.0397%" height="15" fill="rgb(246,168,33)" fg:x="2501" fg:w="1"/><text x="99.6538%" y="511.50"></text></g><g><title>`0x7FF97E614AA4 (1 samples, 0.04%)</title><rect x="99.4436%" y="437" width="0.0397%" height="15" fill="rgb(231,114,1)" fg:x="2502" fg:w="1"/><text x="99.6936%" y="447.50"></text></g><g><title>`0x7FF97E614146 (1 samples, 0.04%)</title><rect x="99.4833%" y="421" width="0.0397%" height="15" fill="rgb(207,184,53)" fg:x="2503" fg:w="1"/><text x="99.7333%" y="431.50"></text></g><g><title>`0x7FF97E618D96 (3 samples, 0.12%)</title><rect x="99.4436%" y="501" width="0.1192%" height="15" fill="rgb(224,95,51)" fg:x="2502" fg:w="3"/><text x="99.6936%" y="511.50"></text></g><g><title>`0x7FF97E61E289 (3 samples, 0.12%)</title><rect x="99.4436%" y="485" width="0.1192%" height="15" fill="rgb(212,188,45)" fg:x="2502" fg:w="3"/><text x="99.6936%" y="495.50"></text></g><g><title>`0x7FF97E61D309 (3 samples, 0.12%)</title><rect x="99.4436%" y="469" width="0.1192%" height="15" fill="rgb(223,154,38)" fg:x="2502" fg:w="3"/><text x="99.6936%" y="479.50"></text></g><g><title>`0x7FF97E61C8D8 (3 samples, 0.12%)</title><rect x="99.4436%" y="453" width="0.1192%" height="15" fill="rgb(251,22,52)" fg:x="2502" fg:w="3"/><text x="99.6936%" y="463.50"></text></g><g><title>`0x7FF97E614C54 (2 samples, 0.08%)</title><rect x="99.4833%" y="437" width="0.0795%" height="15" fill="rgb(229,209,22)" fg:x="2503" fg:w="2"/><text x="99.7333%" y="447.50"></text></g><g><title>`0x7FF97E614172 (1 samples, 0.04%)</title><rect x="99.5231%" y="421" width="0.0397%" height="15" fill="rgb(234,138,34)" fg:x="2504" fg:w="1"/><text x="99.7731%" y="431.50"></text></g><g><title>`0x7FF97B9523A3 (1 samples, 0.04%)</title><rect x="99.5628%" y="389" width="0.0397%" height="15" fill="rgb(212,95,11)" fg:x="2505" fg:w="1"/><text x="99.8128%" y="399.50"></text></g><g><title>`0x7FF97B97B3EF (1 samples, 0.04%)</title><rect x="99.5628%" y="373" width="0.0397%" height="15" fill="rgb(240,179,47)" fg:x="2505" fg:w="1"/><text x="99.8128%" y="383.50"></text></g><g><title>`0x7FF97B97B79A (1 samples, 0.04%)</title><rect x="99.5628%" y="357" width="0.0397%" height="15" fill="rgb(240,163,11)" fg:x="2505" fg:w="1"/><text x="99.8128%" y="367.50"></text></g><g><title>`0x7FF97E690A44 (1 samples, 0.04%)</title><rect x="99.5628%" y="341" width="0.0397%" height="15" fill="rgb(236,37,12)" fg:x="2505" fg:w="1"/><text x="99.8128%" y="351.50"></text></g><g><title>`0x7FF97B951DCD (2 samples, 0.08%)</title><rect x="99.5628%" y="405" width="0.0795%" height="15" fill="rgb(232,164,16)" fg:x="2505" fg:w="2"/><text x="99.8128%" y="415.50"></text></g><g><title>`0x7FF97B95246E (1 samples, 0.04%)</title><rect x="99.6025%" y="389" width="0.0397%" height="15" fill="rgb(244,205,15)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="399.50"></text></g><g><title>`0x7FF97B984BBE (1 samples, 0.04%)</title><rect x="99.6025%" y="373" width="0.0397%" height="15" fill="rgb(223,117,47)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="383.50"></text></g><g><title>`0x7FF97B95358A (1 samples, 0.04%)</title><rect x="99.6025%" y="357" width="0.0397%" height="15" fill="rgb(244,107,35)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="367.50"></text></g><g><title>`0x7FF97E680B91 (1 samples, 0.04%)</title><rect x="99.6025%" y="341" width="0.0397%" height="15" fill="rgb(205,140,8)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="351.50"></text></g><g><title>`0x7FF97E680C08 (1 samples, 0.04%)</title><rect x="99.6025%" y="325" width="0.0397%" height="15" fill="rgb(228,84,46)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="335.50"></text></g><g><title>`0x7FF97E6869CD (1 samples, 0.04%)</title><rect x="99.6025%" y="309" width="0.0397%" height="15" fill="rgb(254,188,9)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="319.50"></text></g><g><title>`0x7FF97E686DB3 (1 samples, 0.04%)</title><rect x="99.6025%" y="293" width="0.0397%" height="15" fill="rgb(206,112,54)" fg:x="2506" fg:w="1"/><text x="99.8525%" y="303.50"></text></g><g><title>`0x7FF97E6CE713 (6 samples, 0.24%)</title><rect x="99.4436%" y="549" width="0.2385%" height="15" fill="rgb(216,84,49)" fg:x="2502" fg:w="6"/><text x="99.6936%" y="559.50"></text></g><g><title>`0x7FF97E61A73A (6 samples, 0.24%)</title><rect x="99.4436%" y="533" width="0.2385%" height="15" fill="rgb(214,194,35)" fg:x="2502" fg:w="6"/><text x="99.6936%" y="543.50"></text></g><g><title>`0x7FF97E6090AC (6 samples, 0.24%)</title><rect x="99.4436%" y="517" width="0.2385%" height="15" fill="rgb(249,28,3)" fg:x="2502" fg:w="6"/><text x="99.6936%" y="527.50"></text></g><g><title>`0x7FF97E618E20 (3 samples, 0.12%)</title><rect x="99.5628%" y="501" width="0.1192%" height="15" fill="rgb(222,56,52)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="511.50"></text></g><g><title>`0x7FF97E61DB0D (3 samples, 0.12%)</title><rect x="99.5628%" y="485" width="0.1192%" height="15" fill="rgb(245,217,50)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="495.50"></text></g><g><title>`0x7FF97E65D340 (3 samples, 0.12%)</title><rect x="99.5628%" y="469" width="0.1192%" height="15" fill="rgb(213,201,24)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="479.50"></text></g><g><title>`0x7FF97E65D2CE (3 samples, 0.12%)</title><rect x="99.5628%" y="453" width="0.1192%" height="15" fill="rgb(248,116,28)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="463.50"></text></g><g><title>`0x7FF97E65D51D (3 samples, 0.12%)</title><rect x="99.5628%" y="437" width="0.1192%" height="15" fill="rgb(219,72,43)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="447.50"></text></g><g><title>`0x7FF97E618B7F (3 samples, 0.12%)</title><rect x="99.5628%" y="421" width="0.1192%" height="15" fill="rgb(209,138,14)" fg:x="2505" fg:w="3"/><text x="99.8128%" y="431.50"></text></g><g><title>`0x7FF97B951E3D (1 samples, 0.04%)</title><rect x="99.6423%" y="405" width="0.0397%" height="15" fill="rgb(222,18,33)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="415.50"></text></g><g><title>`0x7FF97B9529AB (1 samples, 0.04%)</title><rect x="99.6423%" y="389" width="0.0397%" height="15" fill="rgb(213,199,7)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="399.50"></text></g><g><title>`0x7FF97B9C49D4 (1 samples, 0.04%)</title><rect x="99.6423%" y="373" width="0.0397%" height="15" fill="rgb(250,110,10)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="383.50"></text></g><g><title>`0x7FF97B9518E1 (1 samples, 0.04%)</title><rect x="99.6423%" y="357" width="0.0397%" height="15" fill="rgb(248,123,6)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="367.50"></text></g><g><title>`0x7FF97B951C34 (1 samples, 0.04%)</title><rect x="99.6423%" y="341" width="0.0397%" height="15" fill="rgb(206,91,31)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="351.50"></text></g><g><title>`0x7FF97B9536C7 (1 samples, 0.04%)</title><rect x="99.6423%" y="325" width="0.0397%" height="15" fill="rgb(211,154,13)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="335.50"></text></g><g><title>`0x7FF97B951D85 (1 samples, 0.04%)</title><rect x="99.6423%" y="309" width="0.0397%" height="15" fill="rgb(225,148,7)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="319.50"></text></g><g><title>`0x7FF97B953B15 (1 samples, 0.04%)</title><rect x="99.6423%" y="293" width="0.0397%" height="15" fill="rgb(220,160,43)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="303.50"></text></g><g><title>`0x7FF97B9547A5 (1 samples, 0.04%)</title><rect x="99.6423%" y="277" width="0.0397%" height="15" fill="rgb(213,52,39)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="287.50"></text></g><g><title>`0x7FF97E691834 (1 samples, 0.04%)</title><rect x="99.6423%" y="261" width="0.0397%" height="15" fill="rgb(243,137,7)" fg:x="2507" fg:w="1"/><text x="99.8923%" y="271.50"></text></g><g><title>`0x7FF97E6CE7B8 (1 samples, 0.04%)</title><rect x="99.6820%" y="549" width="0.0397%" height="15" fill="rgb(230,79,13)" fg:x="2508" fg:w="1"/><text x="99.9320%" y="559.50"></text></g><g><title>`0x7FF97E612190 (1 samples, 0.04%)</title><rect x="99.6820%" y="533" width="0.0397%" height="15" fill="rgb(247,105,23)" fg:x="2508" fg:w="1"/><text x="99.9320%" y="543.50"></text></g><g><title>`0x7FF97E61292B (1 samples, 0.04%)</title><rect x="99.6820%" y="517" width="0.0397%" height="15" fill="rgb(223,179,41)" fg:x="2508" fg:w="1"/><text x="99.9320%" y="527.50"></text></g><g><title>`0x7FF97E612D96 (1 samples, 0.04%)</title><rect x="99.6820%" y="501" width="0.0397%" height="15" fill="rgb(218,9,34)" fg:x="2508" fg:w="1"/><text x="99.9320%" y="511.50"></text></g><g><title>`0x7FF97E6CE9DD (1 samples, 0.04%)</title><rect x="99.7218%" y="549" width="0.0397%" height="15" fill="rgb(222,106,8)" fg:x="2509" fg:w="1"/><text x="99.9718%" y="559.50"></text></g><g><title>`0x7FF97E63B5ED (1 samples, 0.04%)</title><rect x="99.7218%" y="533" width="0.0397%" height="15" fill="rgb(211,220,0)" fg:x="2509" fg:w="1"/><text x="99.9718%" y="543.50"></text></g><g><title>`0x7FF97E63C270 (1 samples, 0.04%)</title><rect x="99.7218%" y="517" width="0.0397%" height="15" fill="rgb(229,52,16)" fg:x="2509" fg:w="1"/><text x="99.9718%" y="527.50"></text></g><g><title>`0x7FF97E61C879 (1 samples, 0.04%)</title><rect x="99.7615%" y="469" width="0.0397%" height="15" fill="rgb(212,155,18)" fg:x="2510" fg:w="1"/><text x="100.0115%" y="479.50"></text></g><g><title>`0x7FF97E61B426 (1 samples, 0.04%)</title><rect x="99.7615%" y="453" width="0.0397%" height="15" fill="rgb(242,21,14)" fg:x="2510" fg:w="1"/><text x="100.0115%" y="463.50"></text></g><g><title>`0x7FF97E61B683 (1 samples, 0.04%)</title><rect x="99.7615%" y="437" width="0.0397%" height="15" fill="rgb(222,19,48)" fg:x="2510" fg:w="1"/><text x="100.0115%" y="447.50"></text></g><g><title>`0x7FF97E6CEA43 (2 samples, 0.08%)</title><rect x="99.7615%" y="549" width="0.0795%" height="15" fill="rgb(232,45,27)" fg:x="2510" fg:w="2"/><text x="100.0115%" y="559.50"></text></g><g><title>`0x7FF97E614B9B (2 samples, 0.08%)</title><rect x="99.7615%" y="533" width="0.0795%" height="15" fill="rgb(249,103,42)" fg:x="2510" fg:w="2"/><text x="100.0115%" y="543.50"></text></g><g><title>`0x7FF97E614DE6 (2 samples, 0.08%)</title><rect x="99.7615%" y="517" width="0.0795%" height="15" fill="rgb(246,81,33)" fg:x="2510" fg:w="2"/><text x="100.0115%" y="527.50"></text></g><g><title>`0x7FF97E615DA4 (2 samples, 0.08%)</title><rect x="99.7615%" y="501" width="0.0795%" height="15" fill="rgb(252,33,42)" fg:x="2510" fg:w="2"/><text x="100.0115%" y="511.50"></text></g><g><title>`0x7FF97E61D309 (2 samples, 0.08%)</title><rect x="99.7615%" y="485" width="0.0795%" height="15" fill="rgb(209,212,41)" fg:x="2510" fg:w="2"/><text x="100.0115%" y="495.50"></text></g><g><title>`0x7FF97E61C8D8 (1 samples, 0.04%)</title><rect x="99.8013%" y="469" width="0.0397%" height="15" fill="rgb(207,154,6)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="479.50"></text></g><g><title>`0x7FF97E614B9B (1 samples, 0.04%)</title><rect x="99.8013%" y="453" width="0.0397%" height="15" fill="rgb(223,64,47)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="463.50"></text></g><g><title>`0x7FF97E614DE6 (1 samples, 0.04%)</title><rect x="99.8013%" y="437" width="0.0397%" height="15" fill="rgb(211,161,38)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="447.50"></text></g><g><title>`0x7FF97E615DA4 (1 samples, 0.04%)</title><rect x="99.8013%" y="421" width="0.0397%" height="15" fill="rgb(219,138,40)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="431.50"></text></g><g><title>`0x7FF97E61D309 (1 samples, 0.04%)</title><rect x="99.8013%" y="405" width="0.0397%" height="15" fill="rgb(241,228,46)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="415.50"></text></g><g><title>`0x7FF97E61C8D8 (1 samples, 0.04%)</title><rect x="99.8013%" y="389" width="0.0397%" height="15" fill="rgb(223,209,38)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="399.50"></text></g><g><title>`0x7FF97E614A21 (1 samples, 0.04%)</title><rect x="99.8013%" y="373" width="0.0397%" height="15" fill="rgb(236,164,45)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="383.50"></text></g><g><title>`0x7FF97E61B2EE (1 samples, 0.04%)</title><rect x="99.8013%" y="357" width="0.0397%" height="15" fill="rgb(231,15,5)" fg:x="2511" fg:w="1"/><text x="100.0513%" y="367.50"></text></g><g><title>`0x7FF97E6CEA4B (1 samples, 0.04%)</title><rect x="99.8410%" y="549" width="0.0397%" height="15" fill="rgb(252,35,15)" fg:x="2512" fg:w="1"/><text x="100.0910%" y="559.50"></text></g><g><title>`0x7FF97E61A580 (1 samples, 0.04%)</title><rect x="99.8410%" y="533" width="0.0397%" height="15" fill="rgb(248,181,18)" fg:x="2512" fg:w="1"/><text x="100.0910%" y="543.50"></text></g><g><title>`0x7FF97E60128B (1 samples, 0.04%)</title><rect x="99.8410%" y="517" width="0.0397%" height="15" fill="rgb(233,39,42)" fg:x="2512" fg:w="1"/><text x="100.0910%" y="527.50"></text></g><g><title>`0x7FF97E6141BB (1 samples, 0.04%)</title><rect x="99.8410%" y="501" width="0.0397%" height="15" fill="rgb(238,110,33)" fg:x="2512" fg:w="1"/><text x="100.0910%" y="511.50"></text></g><g><title>`0x7FF97E65D2CE (1 samples, 0.04%)</title><rect x="99.8808%" y="517" width="0.0397%" height="15" fill="rgb(233,195,10)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="527.50"></text></g><g><title>`0x7FF97E65D51D (1 samples, 0.04%)</title><rect x="99.8808%" y="501" width="0.0397%" height="15" fill="rgb(254,105,3)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="511.50"></text></g><g><title>`0x7FF97E618B7F (1 samples, 0.04%)</title><rect x="99.8808%" y="485" width="0.0397%" height="15" fill="rgb(221,225,9)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="495.50"></text></g><g><title>`0x7FF97C130B2A (1 samples, 0.04%)</title><rect x="99.8808%" y="469" width="0.0397%" height="15" fill="rgb(224,227,45)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="479.50"></text></g><g><title>`0x7FF97C121540 (1 samples, 0.04%)</title><rect x="99.8808%" y="453" width="0.0397%" height="15" fill="rgb(229,198,43)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="463.50"></text></g><g><title>`0x7FF97C13A575 (1 samples, 0.04%)</title><rect x="99.8808%" y="437" width="0.0397%" height="15" fill="rgb(206,209,35)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="447.50"></text></g><g><title>`0x7FF97B93FBBB (1 samples, 0.04%)</title><rect x="99.8808%" y="421" width="0.0397%" height="15" fill="rgb(245,195,53)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="431.50"></text></g><g><title>`0x7FF97B940399 (1 samples, 0.04%)</title><rect x="99.8808%" y="405" width="0.0397%" height="15" fill="rgb(240,92,26)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="415.50"></text></g><g><title>`0x7FF97E690284 (1 samples, 0.04%)</title><rect x="99.8808%" y="389" width="0.0397%" height="15" fill="rgb(207,40,23)" fg:x="2513" fg:w="1"/><text x="100.1308%" y="399.50"></text></g><g><title>`0x7FF97BF576B3 (1 samples, 0.04%)</title><rect x="99.9205%" y="453" width="0.0397%" height="15" fill="rgb(223,111,35)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="463.50"></text></g><g><title>`0x7FF97BF57F98 (1 samples, 0.04%)</title><rect x="99.9205%" y="437" width="0.0397%" height="15" fill="rgb(229,147,28)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="447.50"></text></g><g><title>`0x7FF97BF91FD6 (1 samples, 0.04%)</title><rect x="99.9205%" y="421" width="0.0397%" height="15" fill="rgb(211,29,28)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="431.50"></text></g><g><title>`0x7FF97BF925F8 (1 samples, 0.04%)</title><rect x="99.9205%" y="405" width="0.0397%" height="15" fill="rgb(228,72,33)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="415.50"></text></g><g><title>`0x7FF97BF929A2 (1 samples, 0.04%)</title><rect x="99.9205%" y="389" width="0.0397%" height="15" fill="rgb(205,214,31)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="399.50"></text></g><g><title>`0x7FF97BF92733 (1 samples, 0.04%)</title><rect x="99.9205%" y="373" width="0.0397%" height="15" fill="rgb(224,111,15)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="383.50"></text></g><g><title>`0x7FF97B93B412 (1 samples, 0.04%)</title><rect x="99.9205%" y="357" width="0.0397%" height="15" fill="rgb(253,21,26)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="367.50"></text></g><g><title>`0x7FF97E61A73A (1 samples, 0.04%)</title><rect x="99.9205%" y="341" width="0.0397%" height="15" fill="rgb(245,139,43)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="351.50"></text></g><g><title>`0x7FF97E609070 (1 samples, 0.04%)</title><rect x="99.9205%" y="325" width="0.0397%" height="15" fill="rgb(252,170,7)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="335.50"></text></g><g><title>`0x7FF97E609643 (1 samples, 0.04%)</title><rect x="99.9205%" y="309" width="0.0397%" height="15" fill="rgb(231,118,14)" fg:x="2514" fg:w="1"/><text x="100.1705%" y="319.50"></text></g><g><title>all (2,516 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="2516"/><text x="0.2500%" y="623.50"></text></g><g><title>`0x7FF97E6642AE (18 samples, 0.72%)</title><rect x="99.2846%" y="597" width="0.7154%" height="15" fill="rgb(221,39,39)" fg:x="2498" fg:w="18"/><text x="99.5346%" y="607.50"></text></g><g><title>`0x7FF97E664383 (18 samples, 0.72%)</title><rect x="99.2846%" y="581" width="0.7154%" height="15" fill="rgb(222,119,46)" fg:x="2498" fg:w="18"/><text x="99.5346%" y="591.50"></text></g><g><title>`0x7FF97E6BA86E (18 samples, 0.72%)</title><rect x="99.2846%" y="565" width="0.7154%" height="15" fill="rgb(222,165,49)" fg:x="2498" fg:w="18"/><text x="99.5346%" y="575.50"></text></g><g><title>`0x7FF97E6CEBC9 (3 samples, 0.12%)</title><rect x="99.8808%" y="549" width="0.1192%" height="15" fill="rgb(219,113,52)" fg:x="2513" fg:w="3"/><text x="100.1308%" y="559.50"></text></g><g><title>`0x7FF97E65D340 (3 samples, 0.12%)</title><rect x="99.8808%" y="533" width="0.1192%" height="15" fill="rgb(214,7,15)" fg:x="2513" fg:w="3"/><text x="100.1308%" y="543.50"></text></g><g><title>`0x7FF97E65D340 (2 samples, 0.08%)</title><rect x="99.9205%" y="517" width="0.0795%" height="15" fill="rgb(235,32,4)" fg:x="2514" fg:w="2"/><text x="100.1705%" y="527.50"></text></g><g><title>`0x7FF97E65D2CE (2 samples, 0.08%)</title><rect x="99.9205%" y="501" width="0.0795%" height="15" fill="rgb(238,90,54)" fg:x="2514" fg:w="2"/><text x="100.1705%" y="511.50"></text></g><g><title>`0x7FF97E65D51D (2 samples, 0.08%)</title><rect x="99.9205%" y="485" width="0.0795%" height="15" fill="rgb(213,208,19)" fg:x="2514" fg:w="2"/><text x="100.1705%" y="495.50"></text></g><g><title>`0x7FF97E618B7F (2 samples, 0.08%)</title><rect x="99.9205%" y="469" width="0.0795%" height="15" fill="rgb(233,156,4)" fg:x="2514" fg:w="2"/><text x="100.1705%" y="479.50"></text></g><g><title>`0x7FF97D8E7C2F (1 samples, 0.04%)</title><rect x="99.9603%" y="453" width="0.0397%" height="15" fill="rgb(207,194,5)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="463.50"></text></g><g><title>`0x7FF97D9039A2 (1 samples, 0.04%)</title><rect x="99.9603%" y="437" width="0.0397%" height="15" fill="rgb(206,111,30)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="447.50"></text></g><g><title>`0x7FF97D903B20 (1 samples, 0.04%)</title><rect x="99.9603%" y="421" width="0.0397%" height="15" fill="rgb(243,70,54)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="431.50"></text></g><g><title>`0x7FF97D8FCD6B (1 samples, 0.04%)</title><rect x="99.9603%" y="405" width="0.0397%" height="15" fill="rgb(242,28,8)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="415.50"></text></g><g><title>`0x7FF97D8FCB80 (1 samples, 0.04%)</title><rect x="99.9603%" y="389" width="0.0397%" height="15" fill="rgb(219,106,18)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="399.50"></text></g><g><title>`0x7FF97E62D239 (1 samples, 0.04%)</title><rect x="99.9603%" y="373" width="0.0397%" height="15" fill="rgb(244,222,10)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="383.50"></text></g><g><title>`0x7FF97E62FF18 (1 samples, 0.04%)</title><rect x="99.9603%" y="357" width="0.0397%" height="15" fill="rgb(236,179,52)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="367.50"></text></g><g><title>`0x7FF97E63A4BB (1 samples, 0.04%)</title><rect x="99.9603%" y="341" width="0.0397%" height="15" fill="rgb(213,23,39)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="351.50"></text></g><g><title>`0x7FF97E639A21 (1 samples, 0.04%)</title><rect x="99.9603%" y="325" width="0.0397%" height="15" fill="rgb(238,48,10)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="335.50"></text></g><g><title>`0x7FF97E6392FC (1 samples, 0.04%)</title><rect x="99.9603%" y="309" width="0.0397%" height="15" fill="rgb(251,196,23)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="319.50"></text></g><g><title>`0x7FF97E639C79 (1 samples, 0.04%)</title><rect x="99.9603%" y="293" width="0.0397%" height="15" fill="rgb(250,152,24)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="303.50"></text></g><g><title>`0x7FF97E6228DA (1 samples, 0.04%)</title><rect x="99.9603%" y="277" width="0.0397%" height="15" fill="rgb(209,150,17)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="287.50"></text></g><g><title>`0x7FF97E66F992 (1 samples, 0.04%)</title><rect x="99.9603%" y="261" width="0.0397%" height="15" fill="rgb(234,202,34)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="271.50"></text></g><g><title>`0x7FF97E6901E4 (1 samples, 0.04%)</title><rect x="99.9603%" y="245" width="0.0397%" height="15" fill="rgb(253,148,53)" fg:x="2515" fg:w="1"/><text x="100.2103%" y="255.50"></text></g></svg></svg>