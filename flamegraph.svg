<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="201636"><g><title>neural_network.exe`_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17hdb0870302f0da616E.llvm.8480575818842984857 (24 samples, 0.01%)</title><rect x="0.0258%" y="229" width="0.0119%" height="15" fill="rgb(227,0,7)" fg:x="52" fg:w="24"/><text x="0.2758%" y="239.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17hb4d585ff220ac345E.llvm.8480575818842984857 (24 samples, 0.01%)</title><rect x="0.0258%" y="213" width="0.0119%" height="15" fill="rgb(217,0,24)" fg:x="52" fg:w="24"/><text x="0.2758%" y="223.50"></text></g><g><title>`0x7FF97E63218A (24 samples, 0.01%)</title><rect x="0.0258%" y="197" width="0.0119%" height="15" fill="rgb(221,193,54)" fg:x="52" fg:w="24"/><text x="0.2758%" y="207.50"></text></g><g><title>`0x7FF97E6322C7 (24 samples, 0.01%)</title><rect x="0.0258%" y="181" width="0.0119%" height="15" fill="rgb(248,212,6)" fg:x="52" fg:w="24"/><text x="0.2758%" y="191.50"></text></g><g><title>`0x7FF97E632AFE (21 samples, 0.01%)</title><rect x="0.0273%" y="165" width="0.0104%" height="15" fill="rgb(208,68,35)" fg:x="55" fg:w="21"/><text x="0.2773%" y="175.50"></text></g><g><title>neural_network.exe`_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h22695e6b0e3ffe8eE (46 samples, 0.02%)</title><rect x="0.0397%" y="213" width="0.0228%" height="15" fill="rgb(232,128,0)" fg:x="80" fg:w="46"/><text x="0.2897%" y="223.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h9eff33791bafce73E (57 samples, 0.03%)</title><rect x="0.0377%" y="229" width="0.0283%" height="15" fill="rgb(207,160,47)" fg:x="76" fg:w="57"/><text x="0.2877%" y="239.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hd9a21aecd49233eaE (71 samples, 0.04%)</title><rect x="0.0660%" y="229" width="0.0352%" height="15" fill="rgb(228,23,34)" fg:x="133" fg:w="71"/><text x="0.3160%" y="239.50"></text></g><g><title>`0x7FF97E62CC9A (71 samples, 0.04%)</title><rect x="0.0660%" y="213" width="0.0352%" height="15" fill="rgb(218,30,26)" fg:x="133" fg:w="71"/><text x="0.3160%" y="223.50"></text></g><g><title>`0x7FF97E62DBBF (66 samples, 0.03%)</title><rect x="0.0684%" y="197" width="0.0327%" height="15" fill="rgb(220,122,19)" fg:x="138" fg:w="66"/><text x="0.3184%" y="207.50"></text></g><g><title>`0x7FF97E631921 (66 samples, 0.03%)</title><rect x="0.0684%" y="181" width="0.0327%" height="15" fill="rgb(250,228,42)" fg:x="138" fg:w="66"/><text x="0.3184%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network4flow7flow_ai7convert17hf966dd1b682f51d9E (188 samples, 0.09%)</title><rect x="0.0089%" y="245" width="0.0932%" height="15" fill="rgb(240,193,28)" fg:x="18" fg:w="188"/><text x="0.2589%" y="255.50"></text></g><g><title>`0x7FF968D514E8 (40 samples, 0.02%)</title><rect x="0.2281%" y="197" width="0.0198%" height="15" fill="rgb(216,20,37)" fg:x="460" fg:w="40"/><text x="0.4781%" y="207.50"></text></g><g><title>`0x7FF968D514EF (29 samples, 0.01%)</title><rect x="0.2480%" y="197" width="0.0144%" height="15" fill="rgb(206,188,39)" fg:x="500" fg:w="29"/><text x="0.4980%" y="207.50"></text></g><g><title>`0x7FF97E62AFF1 (126 samples, 0.06%)</title><rect x="0.2624%" y="197" width="0.0625%" height="15" fill="rgb(217,207,13)" fg:x="529" fg:w="126"/><text x="0.5124%" y="207.50"></text></g><g><title>`0x7FF97E62C324 (126 samples, 0.06%)</title><rect x="0.2624%" y="181" width="0.0625%" height="15" fill="rgb(231,73,38)" fg:x="529" fg:w="126"/><text x="0.5124%" y="191.50"></text></g><g><title>`0x7FF97E62A10C (125 samples, 0.06%)</title><rect x="0.2628%" y="165" width="0.0620%" height="15" fill="rgb(225,20,46)" fg:x="530" fg:w="125"/><text x="0.5128%" y="175.50"></text></g><g><title>`0x7FF97E636AC6 (125 samples, 0.06%)</title><rect x="0.2628%" y="149" width="0.0620%" height="15" fill="rgb(210,31,41)" fg:x="530" fg:w="125"/><text x="0.5128%" y="159.50"></text></g><g><title>`0x7FF97E690364 (125 samples, 0.06%)</title><rect x="0.2628%" y="133" width="0.0620%" height="15" fill="rgb(221,200,47)" fg:x="530" fg:w="125"/><text x="0.5128%" y="143.50"></text></g><g><title>`0x7FF968D51310 (22 samples, 0.01%)</title><rect x="0.4478%" y="181" width="0.0109%" height="15" fill="rgb(226,26,5)" fg:x="903" fg:w="22"/><text x="0.6978%" y="191.50"></text></g><g><title>`0x7FF968D513E3 (25 samples, 0.01%)</title><rect x="0.4602%" y="181" width="0.0124%" height="15" fill="rgb(249,33,26)" fg:x="928" fg:w="25"/><text x="0.7102%" y="191.50"></text></g><g><title>`0x7FF97E62AFF1 (33 samples, 0.02%)</title><rect x="0.4756%" y="181" width="0.0164%" height="15" fill="rgb(235,183,28)" fg:x="959" fg:w="33"/><text x="0.7256%" y="191.50"></text></g><g><title>`0x7FF97E62C324 (33 samples, 0.02%)</title><rect x="0.4756%" y="165" width="0.0164%" height="15" fill="rgb(221,5,38)" fg:x="959" fg:w="33"/><text x="0.7256%" y="175.50"></text></g><g><title>`0x7FF97E62A10C (33 samples, 0.02%)</title><rect x="0.4756%" y="149" width="0.0164%" height="15" fill="rgb(247,18,42)" fg:x="959" fg:w="33"/><text x="0.7256%" y="159.50"></text></g><g><title>`0x7FF97E636AC6 (33 samples, 0.02%)</title><rect x="0.4756%" y="133" width="0.0164%" height="15" fill="rgb(241,131,45)" fg:x="959" fg:w="33"/><text x="0.7256%" y="143.50"></text></g><g><title>`0x7FF97E690364 (33 samples, 0.02%)</title><rect x="0.4756%" y="117" width="0.0164%" height="15" fill="rgb(249,31,29)" fg:x="959" fg:w="33"/><text x="0.7256%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (339 samples, 0.17%)</title><rect x="0.3248%" y="197" width="0.1681%" height="15" fill="rgb(225,111,53)" fg:x="655" fg:w="339"/><text x="0.5748%" y="207.50"></text></g><g><title>`0x7FF968D51381 (102 samples, 0.05%)</title><rect x="0.5029%" y="181" width="0.0506%" height="15" fill="rgb(238,160,17)" fg:x="1014" fg:w="102"/><text x="0.7529%" y="191.50"></text></g><g><title>`0x7FF968D51388 (52 samples, 0.03%)</title><rect x="0.5535%" y="181" width="0.0258%" height="15" fill="rgb(214,148,48)" fg:x="1116" fg:w="52"/><text x="0.8035%" y="191.50"></text></g><g><title>`0x7FF968D513E3 (24 samples, 0.01%)</title><rect x="0.5832%" y="181" width="0.0119%" height="15" fill="rgb(232,36,49)" fg:x="1176" fg:w="24"/><text x="0.8332%" y="191.50"></text></g><g><title>`0x7FF968D514E8 (70 samples, 0.03%)</title><rect x="0.6636%" y="181" width="0.0347%" height="15" fill="rgb(209,103,24)" fg:x="1338" fg:w="70"/><text x="0.9136%" y="191.50"></text></g><g><title>`0x7FF968D514EF (56 samples, 0.03%)</title><rect x="0.6983%" y="181" width="0.0278%" height="15" fill="rgb(229,88,8)" fg:x="1408" fg:w="56"/><text x="0.9483%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (472 samples, 0.23%)</title><rect x="0.4930%" y="197" width="0.2341%" height="15" fill="rgb(213,181,19)" fg:x="994" fg:w="472"/><text x="0.7430%" y="207.50"></text></g><g><title>`0x7FF968D51416 (23 samples, 0.01%)</title><rect x="0.8580%" y="181" width="0.0114%" height="15" fill="rgb(254,191,54)" fg:x="1730" fg:w="23"/><text x="1.1080%" y="191.50"></text></g><g><title>`0x7FF968D514E8 (62 samples, 0.03%)</title><rect x="0.8818%" y="181" width="0.0307%" height="15" fill="rgb(241,83,37)" fg:x="1778" fg:w="62"/><text x="1.1318%" y="191.50"></text></g><g><title>`0x7FF968D514EF (55 samples, 0.03%)</title><rect x="0.9125%" y="181" width="0.0273%" height="15" fill="rgb(233,36,39)" fg:x="1840" fg:w="55"/><text x="1.1625%" y="191.50"></text></g><g><title>`0x7FF97E62AFF1 (386 samples, 0.19%)</title><rect x="0.9403%" y="181" width="0.1914%" height="15" fill="rgb(226,3,54)" fg:x="1896" fg:w="386"/><text x="1.1903%" y="191.50"></text></g><g><title>`0x7FF97E62C324 (386 samples, 0.19%)</title><rect x="0.9403%" y="165" width="0.1914%" height="15" fill="rgb(245,192,40)" fg:x="1896" fg:w="386"/><text x="1.1903%" y="175.50"></text></g><g><title>`0x7FF97E62A10C (385 samples, 0.19%)</title><rect x="0.9408%" y="149" width="0.1909%" height="15" fill="rgb(238,167,29)" fg:x="1897" fg:w="385"/><text x="1.1908%" y="159.50"></text></g><g><title>`0x7FF97E636AC6 (385 samples, 0.19%)</title><rect x="0.9408%" y="133" width="0.1909%" height="15" fill="rgb(232,182,51)" fg:x="1897" fg:w="385"/><text x="1.1908%" y="143.50"></text></g><g><title>`0x7FF97E690364 (385 samples, 0.19%)</title><rect x="0.9408%" y="117" width="0.1909%" height="15" fill="rgb(231,60,39)" fg:x="1897" fg:w="385"/><text x="1.1908%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (61 samples, 0.03%)</title><rect x="1.3886%" y="165" width="0.0303%" height="15" fill="rgb(208,69,12)" fg:x="2800" fg:w="61"/><text x="1.6386%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (61 samples, 0.03%)</title><rect x="1.3886%" y="149" width="0.0303%" height="15" fill="rgb(235,93,37)" fg:x="2800" fg:w="61"/><text x="1.6386%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (61 samples, 0.03%)</title><rect x="1.3886%" y="133" width="0.0303%" height="15" fill="rgb(213,116,39)" fg:x="2800" fg:w="61"/><text x="1.6386%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (61 samples, 0.03%)</title><rect x="1.3886%" y="117" width="0.0303%" height="15" fill="rgb(222,207,29)" fg:x="2800" fg:w="61"/><text x="1.6386%" y="127.50"></text></g><g><title>`0x7FF97E690364 (61 samples, 0.03%)</title><rect x="1.3886%" y="101" width="0.0303%" height="15" fill="rgb(206,96,30)" fg:x="2800" fg:w="61"/><text x="1.6386%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (583 samples, 0.29%)</title><rect x="1.1352%" y="181" width="0.2891%" height="15" fill="rgb(218,138,4)" fg:x="2289" fg:w="583"/><text x="1.3852%" y="191.50"></text></g><g><title>`0x7FF968D513D9 (42 samples, 0.02%)</title><rect x="1.4372%" y="165" width="0.0208%" height="15" fill="rgb(250,191,14)" fg:x="2898" fg:w="42"/><text x="1.6872%" y="175.50"></text></g><g><title>`0x7FF968D513E3 (55 samples, 0.03%)</title><rect x="1.4586%" y="165" width="0.0273%" height="15" fill="rgb(239,60,40)" fg:x="2941" fg:w="55"/><text x="1.7086%" y="175.50"></text></g><g><title>`0x7FF968D513EC (28 samples, 0.01%)</title><rect x="1.4868%" y="165" width="0.0139%" height="15" fill="rgb(206,27,48)" fg:x="2998" fg:w="28"/><text x="1.7368%" y="175.50"></text></g><g><title>`0x7FF968D51406 (49 samples, 0.02%)</title><rect x="1.5176%" y="165" width="0.0243%" height="15" fill="rgb(225,35,8)" fg:x="3060" fg:w="49"/><text x="1.7676%" y="175.50"></text></g><g><title>`0x7FF968D51416 (36 samples, 0.02%)</title><rect x="1.5429%" y="165" width="0.0179%" height="15" fill="rgb(250,213,24)" fg:x="3111" fg:w="36"/><text x="1.7929%" y="175.50"></text></g><g><title>`0x7FF968D51426 (42 samples, 0.02%)</title><rect x="1.5617%" y="165" width="0.0208%" height="15" fill="rgb(247,123,22)" fg:x="3149" fg:w="42"/><text x="1.8117%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (234 samples, 0.12%)</title><rect x="1.6019%" y="165" width="0.1161%" height="15" fill="rgb(231,138,38)" fg:x="3230" fg:w="234"/><text x="1.8519%" y="175.50"></text></g><g><title>`0x7FF968D514EF (156 samples, 0.08%)</title><rect x="1.7179%" y="165" width="0.0774%" height="15" fill="rgb(231,145,46)" fg:x="3464" fg:w="156"/><text x="1.9679%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (766 samples, 0.38%)</title><rect x="1.4243%" y="181" width="0.3799%" height="15" fill="rgb(251,118,11)" fg:x="2872" fg:w="766"/><text x="1.6743%" y="191.50"></text></g><g><title>`0x7FF968D51426 (23 samples, 0.01%)</title><rect x="1.9257%" y="165" width="0.0114%" height="15" fill="rgb(217,147,25)" fg:x="3883" fg:w="23"/><text x="2.1757%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (149 samples, 0.07%)</title><rect x="1.9510%" y="165" width="0.0739%" height="15" fill="rgb(247,81,37)" fg:x="3934" fg:w="149"/><text x="2.2010%" y="175.50"></text></g><g><title>`0x7FF968D514EF (85 samples, 0.04%)</title><rect x="2.0249%" y="165" width="0.0422%" height="15" fill="rgb(209,12,38)" fg:x="4083" fg:w="85"/><text x="2.2749%" y="175.50"></text></g><g><title>`0x7FF97E62AFF1 (230 samples, 0.11%)</title><rect x="2.0696%" y="165" width="0.1141%" height="15" fill="rgb(227,1,9)" fg:x="4173" fg:w="230"/><text x="2.3196%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (230 samples, 0.11%)</title><rect x="2.0696%" y="149" width="0.1141%" height="15" fill="rgb(248,47,43)" fg:x="4173" fg:w="230"/><text x="2.3196%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (212 samples, 0.11%)</title><rect x="2.0785%" y="133" width="0.1051%" height="15" fill="rgb(221,10,30)" fg:x="4191" fg:w="212"/><text x="2.3285%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (212 samples, 0.11%)</title><rect x="2.0785%" y="117" width="0.1051%" height="15" fill="rgb(210,229,1)" fg:x="4191" fg:w="212"/><text x="2.3285%" y="127.50"></text></g><g><title>`0x7FF97E690364 (212 samples, 0.11%)</title><rect x="2.0785%" y="101" width="0.1051%" height="15" fill="rgb(222,148,37)" fg:x="4191" fg:w="212"/><text x="2.3285%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (26 samples, 0.01%)</title><rect x="2.1836%" y="149" width="0.0129%" height="15" fill="rgb(234,67,33)" fg:x="4403" fg:w="26"/><text x="2.4336%" y="159.50"></text></g><g><title>`0x7FF97E69702C (26 samples, 0.01%)</title><rect x="2.1836%" y="133" width="0.0129%" height="15" fill="rgb(247,98,35)" fg:x="4403" fg:w="26"/><text x="2.4336%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (42 samples, 0.02%)</title><rect x="2.1836%" y="165" width="0.0208%" height="15" fill="rgb(247,138,52)" fg:x="4403" fg:w="42"/><text x="2.4336%" y="175.50"></text></g><g><title>neural_network.exe`Unknown (158 samples, 0.08%)</title><rect x="2.2045%" y="165" width="0.0784%" height="15" fill="rgb(213,79,30)" fg:x="4445" fg:w="158"/><text x="2.4545%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (50 samples, 0.02%)</title><rect x="2.2580%" y="149" width="0.0248%" height="15" fill="rgb(246,177,23)" fg:x="4553" fg:w="50"/><text x="2.5080%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (50 samples, 0.02%)</title><rect x="2.2580%" y="133" width="0.0248%" height="15" fill="rgb(230,62,27)" fg:x="4553" fg:w="50"/><text x="2.5080%" y="143.50"></text></g><g><title>`0x7FF97E69702C (50 samples, 0.02%)</title><rect x="2.2580%" y="117" width="0.0248%" height="15" fill="rgb(216,154,8)" fg:x="4553" fg:w="50"/><text x="2.5080%" y="127.50"></text></g><g><title>`0x7FF968D513D9 (35 samples, 0.02%)</title><rect x="2.2997%" y="149" width="0.0174%" height="15" fill="rgb(244,35,45)" fg:x="4637" fg:w="35"/><text x="2.5497%" y="159.50"></text></g><g><title>`0x7FF968D513E3 (38 samples, 0.02%)</title><rect x="2.3210%" y="149" width="0.0188%" height="15" fill="rgb(251,115,12)" fg:x="4680" fg:w="38"/><text x="2.5710%" y="159.50"></text></g><g><title>`0x7FF968D513EC (35 samples, 0.02%)</title><rect x="2.3453%" y="149" width="0.0174%" height="15" fill="rgb(240,54,50)" fg:x="4729" fg:w="35"/><text x="2.5953%" y="159.50"></text></g><g><title>`0x7FF968D51406 (24 samples, 0.01%)</title><rect x="2.3776%" y="149" width="0.0119%" height="15" fill="rgb(233,84,52)" fg:x="4794" fg:w="24"/><text x="2.6276%" y="159.50"></text></g><g><title>`0x7FF968D51416 (48 samples, 0.02%)</title><rect x="2.3895%" y="149" width="0.0238%" height="15" fill="rgb(207,117,47)" fg:x="4818" fg:w="48"/><text x="2.6395%" y="159.50"></text></g><g><title>`0x7FF968D5141E (23 samples, 0.01%)</title><rect x="2.4133%" y="149" width="0.0114%" height="15" fill="rgb(249,43,39)" fg:x="4866" fg:w="23"/><text x="2.6633%" y="159.50"></text></g><g><title>`0x7FF968D51426 (38 samples, 0.02%)</title><rect x="2.4247%" y="149" width="0.0188%" height="15" fill="rgb(209,38,44)" fg:x="4889" fg:w="38"/><text x="2.6747%" y="159.50"></text></g><g><title>`0x7FF968D51436 (25 samples, 0.01%)</title><rect x="2.4529%" y="149" width="0.0124%" height="15" fill="rgb(236,212,23)" fg:x="4946" fg:w="25"/><text x="2.7029%" y="159.50"></text></g><g><title>`0x7FF968D514E8 (183 samples, 0.09%)</title><rect x="2.4777%" y="149" width="0.0908%" height="15" fill="rgb(242,79,21)" fg:x="4996" fg:w="183"/><text x="2.7277%" y="159.50"></text></g><g><title>`0x7FF968D514EF (97 samples, 0.05%)</title><rect x="2.5685%" y="149" width="0.0481%" height="15" fill="rgb(211,96,35)" fg:x="5179" fg:w="97"/><text x="2.8185%" y="159.50"></text></g><g><title>`0x7FF968D514F6 (49 samples, 0.02%)</title><rect x="2.6166%" y="149" width="0.0243%" height="15" fill="rgb(253,215,40)" fg:x="5276" fg:w="49"/><text x="2.8666%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (733 samples, 0.36%)</title><rect x="2.2828%" y="165" width="0.3635%" height="15" fill="rgb(211,81,21)" fg:x="4603" fg:w="733"/><text x="2.5328%" y="175.50"></text></g><g><title>`0x7FF97E629C08 (26 samples, 0.01%)</title><rect x="2.8090%" y="117" width="0.0129%" height="15" fill="rgb(208,190,38)" fg:x="5664" fg:w="26"/><text x="3.0590%" y="127.50"></text></g><g><title>`0x7FF97E62C324 (34 samples, 0.02%)</title><rect x="2.8080%" y="133" width="0.0169%" height="15" fill="rgb(235,213,38)" fg:x="5662" fg:w="34"/><text x="3.0580%" y="143.50"></text></g><g><title>`0x7FF97E62AFF1 (37 samples, 0.02%)</title><rect x="2.8070%" y="149" width="0.0183%" height="15" fill="rgb(237,122,38)" fg:x="5660" fg:w="37"/><text x="3.0570%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (107 samples, 0.05%)</title><rect x="2.8284%" y="133" width="0.0531%" height="15" fill="rgb(244,218,35)" fg:x="5703" fg:w="107"/><text x="3.0784%" y="143.50"></text></g><g><title>`0x7FF97E69702C (107 samples, 0.05%)</title><rect x="2.8284%" y="117" width="0.0531%" height="15" fill="rgb(240,68,47)" fg:x="5703" fg:w="107"/><text x="3.0784%" y="127.50"></text></g><g><title>`0x7FF97E62D239 (116 samples, 0.06%)</title><rect x="2.8254%" y="149" width="0.0575%" height="15" fill="rgb(210,16,53)" fg:x="5697" fg:w="116"/><text x="3.0754%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (70 samples, 0.03%)</title><rect x="2.9846%" y="117" width="0.0347%" height="15" fill="rgb(235,124,12)" fg:x="6018" fg:w="70"/><text x="3.2346%" y="127.50"></text></g><g><title>`0x7FF97E69702C (70 samples, 0.03%)</title><rect x="2.9846%" y="101" width="0.0347%" height="15" fill="rgb(224,169,11)" fg:x="6018" fg:w="70"/><text x="3.2346%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (277 samples, 0.14%)</title><rect x="2.8829%" y="149" width="0.1374%" height="15" fill="rgb(250,166,2)" fg:x="5813" fg:w="277"/><text x="3.1329%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (82 samples, 0.04%)</title><rect x="2.9796%" y="133" width="0.0407%" height="15" fill="rgb(242,216,29)" fg:x="6008" fg:w="82"/><text x="3.2296%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (28 samples, 0.01%)</title><rect x="3.1626%" y="133" width="0.0139%" height="15" fill="rgb(230,116,27)" fg:x="6377" fg:w="28"/><text x="3.4126%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (327 samples, 0.16%)</title><rect x="3.0203%" y="149" width="0.1622%" height="15" fill="rgb(228,99,48)" fg:x="6090" fg:w="327"/><text x="3.2703%" y="159.50"></text></g><g><title>`0x7FF968D5147F (23 samples, 0.01%)</title><rect x="3.5093%" y="133" width="0.0114%" height="15" fill="rgb(253,11,6)" fg:x="7076" fg:w="23"/><text x="3.7593%" y="143.50"></text></g><g><title>`0x7FF97E62C324 (27 samples, 0.01%)</title><rect x="3.5753%" y="117" width="0.0134%" height="15" fill="rgb(247,143,39)" fg:x="7209" fg:w="27"/><text x="3.8253%" y="127.50"></text></g><g><title>`0x7FF97E69CE16 (35 samples, 0.02%)</title><rect x="3.5991%" y="117" width="0.0174%" height="15" fill="rgb(236,97,10)" fg:x="7257" fg:w="35"/><text x="3.8491%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (97 samples, 0.05%)</title><rect x="3.5693%" y="133" width="0.0481%" height="15" fill="rgb(233,208,19)" fg:x="7197" fg:w="97"/><text x="3.8193%" y="143.50"></text></g><g><title>`0x7FF97E62CC9A (50 samples, 0.02%)</title><rect x="3.6184%" y="133" width="0.0248%" height="15" fill="rgb(216,164,2)" fg:x="7296" fg:w="50"/><text x="3.8684%" y="143.50"></text></g><g><title>`0x7FF97E62D7B9 (45 samples, 0.02%)</title><rect x="3.6209%" y="117" width="0.0223%" height="15" fill="rgb(220,129,5)" fg:x="7301" fg:w="45"/><text x="3.8709%" y="127.50"></text></g><g><title>`0x7FF97E69702C (40 samples, 0.02%)</title><rect x="3.6234%" y="101" width="0.0198%" height="15" fill="rgb(242,17,10)" fg:x="7306" fg:w="40"/><text x="3.8734%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (129 samples, 0.06%)</title><rect x="3.6526%" y="117" width="0.0640%" height="15" fill="rgb(242,107,0)" fg:x="7365" fg:w="129"/><text x="3.9026%" y="127.50"></text></g><g><title>`0x7FF97E69702C (129 samples, 0.06%)</title><rect x="3.6526%" y="101" width="0.0640%" height="15" fill="rgb(251,28,31)" fg:x="7365" fg:w="129"/><text x="3.9026%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (148 samples, 0.07%)</title><rect x="3.6442%" y="133" width="0.0734%" height="15" fill="rgb(233,223,10)" fg:x="7348" fg:w="148"/><text x="3.8942%" y="143.50"></text></g><g><title>`0x7FF97E69702C (107 samples, 0.05%)</title><rect x="3.9155%" y="85" width="0.0531%" height="15" fill="rgb(215,21,27)" fg:x="7895" fg:w="107"/><text x="4.1655%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (128 samples, 0.06%)</title><rect x="3.9060%" y="117" width="0.0635%" height="15" fill="rgb(232,23,21)" fg:x="7876" fg:w="128"/><text x="4.1560%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (122 samples, 0.06%)</title><rect x="3.9090%" y="101" width="0.0605%" height="15" fill="rgb(244,5,23)" fg:x="7882" fg:w="122"/><text x="4.1590%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (514 samples, 0.25%)</title><rect x="3.7176%" y="133" width="0.2549%" height="15" fill="rgb(226,81,46)" fg:x="7496" fg:w="514"/><text x="3.9676%" y="143.50"></text></g><g><title>`0x7FF968D51324 (24 samples, 0.01%)</title><rect x="4.0221%" y="117" width="0.0119%" height="15" fill="rgb(247,70,30)" fg:x="8110" fg:w="24"/><text x="4.2721%" y="127.50"></text></g><g><title>`0x7FF968D51381 (27 samples, 0.01%)</title><rect x="4.0345%" y="117" width="0.0134%" height="15" fill="rgb(212,68,19)" fg:x="8135" fg:w="27"/><text x="4.2845%" y="127.50"></text></g><g><title>`0x7FF968D51388 (26 samples, 0.01%)</title><rect x="4.0479%" y="117" width="0.0129%" height="15" fill="rgb(240,187,13)" fg:x="8162" fg:w="26"/><text x="4.2979%" y="127.50"></text></g><g><title>`0x7FF968D5147F (24 samples, 0.01%)</title><rect x="4.0925%" y="117" width="0.0119%" height="15" fill="rgb(223,113,26)" fg:x="8252" fg:w="24"/><text x="4.3425%" y="127.50"></text></g><g><title>`0x7FF968D51489 (27 samples, 0.01%)</title><rect x="4.1044%" y="117" width="0.0134%" height="15" fill="rgb(206,192,2)" fg:x="8276" fg:w="27"/><text x="4.3544%" y="127.50"></text></g><g><title>`0x7FF968D514B1 (26 samples, 0.01%)</title><rect x="4.1347%" y="117" width="0.0129%" height="15" fill="rgb(241,108,4)" fg:x="8337" fg:w="26"/><text x="4.3847%" y="127.50"></text></g><g><title>`0x7FF968D514C5 (30 samples, 0.01%)</title><rect x="4.1501%" y="117" width="0.0149%" height="15" fill="rgb(247,173,49)" fg:x="8368" fg:w="30"/><text x="4.4001%" y="127.50"></text></g><g><title>`0x7FF968D514E1 (21 samples, 0.01%)</title><rect x="4.1818%" y="117" width="0.0104%" height="15" fill="rgb(224,114,35)" fg:x="8432" fg:w="21"/><text x="4.4318%" y="127.50"></text></g><g><title>`0x7FF968D514EF (34 samples, 0.02%)</title><rect x="4.1947%" y="117" width="0.0169%" height="15" fill="rgb(245,159,27)" fg:x="8458" fg:w="34"/><text x="4.4447%" y="127.50"></text></g><g><title>`0x7FF968D514F6 (34 samples, 0.02%)</title><rect x="4.2115%" y="117" width="0.0169%" height="15" fill="rgb(245,172,44)" fg:x="8492" fg:w="34"/><text x="4.4615%" y="127.50"></text></g><g><title>`0x7FF97E62CC9A (29 samples, 0.01%)</title><rect x="4.2428%" y="117" width="0.0144%" height="15" fill="rgb(236,23,11)" fg:x="8555" fg:w="29"/><text x="4.4928%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (608 samples, 0.30%)</title><rect x="3.9725%" y="133" width="0.3015%" height="15" fill="rgb(205,117,38)" fg:x="8010" fg:w="608"/><text x="4.2225%" y="143.50"></text></g><g><title>`0x7FF968D51324 (45 samples, 0.02%)</title><rect x="5.2327%" y="117" width="0.0223%" height="15" fill="rgb(237,72,25)" fg:x="10551" fg:w="45"/><text x="5.4827%" y="127.50"></text></g><g><title>`0x7FF968D51388 (46 samples, 0.02%)</title><rect x="5.2634%" y="117" width="0.0228%" height="15" fill="rgb(244,70,9)" fg:x="10613" fg:w="46"/><text x="5.5134%" y="127.50"></text></g><g><title>`0x7FF968D5146F (21 samples, 0.01%)</title><rect x="5.2873%" y="117" width="0.0104%" height="15" fill="rgb(217,125,39)" fg:x="10661" fg:w="21"/><text x="5.5373%" y="127.50"></text></g><g><title>`0x7FF968D514CC (52 samples, 0.03%)</title><rect x="5.3056%" y="117" width="0.0258%" height="15" fill="rgb(235,36,10)" fg:x="10698" fg:w="52"/><text x="5.5556%" y="127.50"></text></g><g><title>`0x7FF968D514D3 (27 samples, 0.01%)</title><rect x="5.3314%" y="117" width="0.0134%" height="15" fill="rgb(251,123,47)" fg:x="10750" fg:w="27"/><text x="5.5814%" y="127.50"></text></g><g><title>`0x7FF968D514E1 (36 samples, 0.02%)</title><rect x="5.3478%" y="117" width="0.0179%" height="15" fill="rgb(221,13,13)" fg:x="10783" fg:w="36"/><text x="5.5978%" y="127.50"></text></g><g><title>`0x7FF968D514EF (36 samples, 0.02%)</title><rect x="5.3666%" y="117" width="0.0179%" height="15" fill="rgb(238,131,9)" fg:x="10821" fg:w="36"/><text x="5.6166%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (234 samples, 0.12%)</title><rect x="5.4187%" y="117" width="0.1161%" height="15" fill="rgb(211,50,8)" fg:x="10926" fg:w="234"/><text x="5.6687%" y="127.50"></text></g><g><title>`0x7FF97E69702C (222 samples, 0.11%)</title><rect x="5.5784%" y="85" width="0.1101%" height="15" fill="rgb(245,182,24)" fg:x="11248" fg:w="222"/><text x="5.8284%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (285 samples, 0.14%)</title><rect x="5.5501%" y="117" width="0.1413%" height="15" fill="rgb(242,14,37)" fg:x="11191" fg:w="285"/><text x="5.8001%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (250 samples, 0.12%)</title><rect x="5.5675%" y="101" width="0.1240%" height="15" fill="rgb(246,228,12)" fg:x="11226" fg:w="250"/><text x="5.8175%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (60 samples, 0.03%)</title><rect x="6.2166%" y="101" width="0.0298%" height="15" fill="rgb(213,55,15)" fg:x="12535" fg:w="60"/><text x="6.4666%" y="111.50"></text></g><g><title>`0x7FF97E696E23 (123 samples, 0.06%)</title><rect x="6.2985%" y="69" width="0.0610%" height="15" fill="rgb(209,9,3)" fg:x="12700" fg:w="123"/><text x="6.5485%" y="79.50"></text></g><g><title>`0x7FF97E69702C (167 samples, 0.08%)</title><rect x="6.3649%" y="69" width="0.0828%" height="15" fill="rgb(230,59,30)" fg:x="12834" fg:w="167"/><text x="6.6149%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (312 samples, 0.15%)</title><rect x="6.2975%" y="85" width="0.1547%" height="15" fill="rgb(209,121,21)" fg:x="12698" fg:w="312"/><text x="6.5475%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (388 samples, 0.19%)</title><rect x="6.2603%" y="101" width="0.1924%" height="15" fill="rgb(220,109,13)" fg:x="12623" fg:w="388"/><text x="6.5103%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (1,547 samples, 0.77%)</title><rect x="5.6924%" y="117" width="0.7672%" height="15" fill="rgb(232,18,1)" fg:x="11478" fg:w="1547"/><text x="5.9424%" y="127.50"></text></g><g><title>`0x7FF968D51324 (59 samples, 0.03%)</title><rect x="6.6099%" y="101" width="0.0293%" height="15" fill="rgb(215,41,42)" fg:x="13328" fg:w="59"/><text x="6.8599%" y="111.50"></text></g><g><title>`0x7FF968D51381 (74 samples, 0.04%)</title><rect x="6.6466%" y="101" width="0.0367%" height="15" fill="rgb(224,123,36)" fg:x="13402" fg:w="74"/><text x="6.8966%" y="111.50"></text></g><g><title>`0x7FF968D51388 (82 samples, 0.04%)</title><rect x="6.6833%" y="101" width="0.0407%" height="15" fill="rgb(240,125,3)" fg:x="13476" fg:w="82"/><text x="6.9333%" y="111.50"></text></g><g><title>`0x7FF968D5146F (22 samples, 0.01%)</title><rect x="6.7245%" y="101" width="0.0109%" height="15" fill="rgb(205,98,50)" fg:x="13559" fg:w="22"/><text x="6.9745%" y="111.50"></text></g><g><title>`0x7FF968D5147F (44 samples, 0.02%)</title><rect x="6.7379%" y="101" width="0.0218%" height="15" fill="rgb(205,185,37)" fg:x="13586" fg:w="44"/><text x="6.9879%" y="111.50"></text></g><g><title>`0x7FF968D514CC (93 samples, 0.05%)</title><rect x="6.7840%" y="101" width="0.0461%" height="15" fill="rgb(238,207,15)" fg:x="13679" fg:w="93"/><text x="7.0340%" y="111.50"></text></g><g><title>`0x7FF968D514D3 (84 samples, 0.04%)</title><rect x="6.8301%" y="101" width="0.0417%" height="15" fill="rgb(213,199,42)" fg:x="13772" fg:w="84"/><text x="7.0801%" y="111.50"></text></g><g><title>`0x7FF968D514E1 (67 samples, 0.03%)</title><rect x="6.8787%" y="101" width="0.0332%" height="15" fill="rgb(235,201,11)" fg:x="13870" fg:w="67"/><text x="7.1287%" y="111.50"></text></g><g><title>`0x7FF968D514EF (107 samples, 0.05%)</title><rect x="6.9194%" y="101" width="0.0531%" height="15" fill="rgb(207,46,11)" fg:x="13952" fg:w="107"/><text x="7.1694%" y="111.50"></text></g><g><title>`0x7FF968D514F6 (74 samples, 0.04%)</title><rect x="6.9725%" y="101" width="0.0367%" height="15" fill="rgb(241,35,35)" fg:x="14059" fg:w="74"/><text x="7.2225%" y="111.50"></text></g><g><title>`0x7FF968D514FA (40 samples, 0.02%)</title><rect x="7.0092%" y="101" width="0.0198%" height="15" fill="rgb(243,32,47)" fg:x="14133" fg:w="40"/><text x="7.2592%" y="111.50"></text></g><g><title>`0x7FF97E62D68A (21 samples, 0.01%)</title><rect x="7.1158%" y="85" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="14348" fg:w="21"/><text x="7.3658%" y="95.50"></text></g><g><title>`0x7FF97E62D8B9 (24 samples, 0.01%)</title><rect x="7.1327%" y="85" width="0.0119%" height="15" fill="rgb(219,102,11)" fg:x="14382" fg:w="24"/><text x="7.3827%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (204 samples, 0.10%)</title><rect x="7.0736%" y="101" width="0.1012%" height="15" fill="rgb(243,110,44)" fg:x="14263" fg:w="204"/><text x="7.3236%" y="111.50"></text></g><g><title>neural_network.exe`memcpy (51 samples, 0.03%)</title><rect x="7.1852%" y="101" width="0.0253%" height="15" fill="rgb(222,74,54)" fg:x="14488" fg:w="51"/><text x="7.4352%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (1,526 samples, 0.76%)</title><rect x="6.4597%" y="117" width="0.7568%" height="15" fill="rgb(216,99,12)" fg:x="13025" fg:w="1526"/><text x="6.7097%" y="127.50"></text></g><g><title>`0x7FF97E62D68A (21 samples, 0.01%)</title><rect x="57.6375%" y="85" width="0.0104%" height="15" fill="rgb(226,22,26)" fg:x="116218" fg:w="21"/><text x="57.8875%" y="95.50"></text></g><g><title>`0x7FF97E696E23 (120 samples, 0.06%)</title><rect x="57.6574%" y="69" width="0.0595%" height="15" fill="rgb(217,163,10)" fg:x="116258" fg:w="120"/><text x="57.9074%" y="79.50"></text></g><g><title>`0x7FF97E69702C (229 samples, 0.11%)</title><rect x="57.7233%" y="69" width="0.1136%" height="15" fill="rgb(213,25,53)" fg:x="116391" fg:w="229"/><text x="57.9733%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (378 samples, 0.19%)</title><rect x="57.6569%" y="85" width="0.1875%" height="15" fill="rgb(252,105,26)" fg:x="116257" fg:w="378"/><text x="57.9069%" y="95.50"></text></g><g><title>`0x7FF97E62DA96 (23 samples, 0.01%)</title><rect x="57.8468%" y="85" width="0.0114%" height="15" fill="rgb(220,39,43)" fg:x="116640" fg:w="23"/><text x="58.0968%" y="95.50"></text></g><g><title>`0x7FF97E653618 (35 samples, 0.02%)</title><rect x="57.8681%" y="69" width="0.0174%" height="15" fill="rgb(229,68,48)" fg:x="116683" fg:w="35"/><text x="58.1181%" y="79.50"></text></g><g><title>`0x7FF97E653704 (35 samples, 0.02%)</title><rect x="57.8681%" y="53" width="0.0174%" height="15" fill="rgb(252,8,32)" fg:x="116683" fg:w="35"/><text x="58.1181%" y="63.50"></text></g><g><title>`0x7FF97E62D239 (34 samples, 0.02%)</title><rect x="57.8686%" y="37" width="0.0169%" height="15" fill="rgb(223,20,43)" fg:x="116684" fg:w="34"/><text x="58.1186%" y="47.50"></text></g><g><title>`0x7FF97E62DB41 (51 samples, 0.03%)</title><rect x="57.8612%" y="85" width="0.0253%" height="15" fill="rgb(229,81,49)" fg:x="116669" fg:w="51"/><text x="58.1112%" y="95.50"></text></g><g><title>`0x7FF97E631990 (21 samples, 0.01%)</title><rect x="57.8994%" y="69" width="0.0104%" height="15" fill="rgb(236,28,36)" fg:x="116746" fg:w="21"/><text x="58.1494%" y="79.50"></text></g><g><title>`0x7FF97E631A59 (25 samples, 0.01%)</title><rect x="57.9113%" y="69" width="0.0124%" height="15" fill="rgb(249,185,26)" fg:x="116770" fg:w="25"/><text x="58.1613%" y="79.50"></text></g><g><title>`0x7FF97E62DBBF (108 samples, 0.05%)</title><rect x="57.8875%" y="85" width="0.0536%" height="15" fill="rgb(249,174,33)" fg:x="116722" fg:w="108"/><text x="58.1375%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (701 samples, 0.35%)</title><rect x="57.6053%" y="101" width="0.3477%" height="15" fill="rgb(233,201,37)" fg:x="116153" fg:w="701"/><text x="57.8553%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17hacf7e5eb81c41081E.llvm.9226229113657676759 (102,320 samples, 50.74%)</title><rect x="7.2165%" y="117" width="50.7449%" height="15" fill="rgb(221,78,26)" fg:x="14551" fg:w="102320"/><text x="7.4665%" y="127.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17hacf7e..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (4,841 samples, 2.40%)</title><rect x="57.9614%" y="117" width="2.4009%" height="15" fill="rgb(250,127,30)" fg:x="116871" fg:w="4841"/><text x="58.2114%" y="127.50">ne..</text></g><g><title>`0x7FF97E69702C (269 samples, 0.13%)</title><rect x="60.7828%" y="69" width="0.1334%" height="15" fill="rgb(230,49,44)" fg:x="122560" fg:w="269"/><text x="61.0328%" y="79.50"></text></g><g><title>`0x7FF97E62CC9A (328 samples, 0.16%)</title><rect x="60.7545%" y="101" width="0.1627%" height="15" fill="rgb(229,67,23)" fg:x="122503" fg:w="328"/><text x="61.0045%" y="111.50"></text></g><g><title>`0x7FF97E62D7B9 (297 samples, 0.15%)</title><rect x="60.7699%" y="85" width="0.1473%" height="15" fill="rgb(249,83,47)" fg:x="122534" fg:w="297"/><text x="61.0199%" y="95.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (1,123 samples, 0.56%)</title><rect x="60.3622%" y="117" width="0.5569%" height="15" fill="rgb(215,43,3)" fg:x="121712" fg:w="1123"/><text x="60.6122%" y="127.50"></text></g><g><title>neural_network.exe`memcpy (22 samples, 0.01%)</title><rect x="60.9202%" y="117" width="0.0109%" height="15" fill="rgb(238,154,13)" fg:x="122837" fg:w="22"/><text x="61.1702%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (114,255 samples, 56.66%)</title><rect x="4.2740%" y="133" width="56.6640%" height="15" fill="rgb(219,56,2)" fg:x="8618" fg:w="114255"/><text x="4.5240%" y="143.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (2,743 samples, 1.36%)</title><rect x="60.9380%" y="133" width="1.3604%" height="15" fill="rgb(233,0,4)" fg:x="122873" fg:w="2743"/><text x="61.1880%" y="143.50"></text></g><g><title>`0x7FF97E69702C (170 samples, 0.08%)</title><rect x="62.4745%" y="85" width="0.0843%" height="15" fill="rgb(235,30,7)" fg:x="125971" fg:w="170"/><text x="62.7245%" y="95.50"></text></g><g><title>`0x7FF97E62F956 (171 samples, 0.08%)</title><rect x="62.4745%" y="101" width="0.0848%" height="15" fill="rgb(250,79,13)" fg:x="125971" fg:w="171"/><text x="62.7245%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (207 samples, 0.10%)</title><rect x="62.4626%" y="117" width="0.1027%" height="15" fill="rgb(211,146,34)" fg:x="125947" fg:w="207"/><text x="62.7126%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (540 samples, 0.27%)</title><rect x="62.2984%" y="133" width="0.2678%" height="15" fill="rgb(228,22,38)" fg:x="125616" fg:w="540"/><text x="62.5484%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (119,744 samples, 59.39%)</title><rect x="3.1825%" y="149" width="59.3862%" height="15" fill="rgb(235,168,5)" fg:x="6417" fg:w="119744"/><text x="3.4325%" y="159.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55f..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (1,688 samples, 0.84%)</title><rect x="62.5687%" y="149" width="0.8372%" height="15" fill="rgb(221,155,16)" fg:x="126161" fg:w="1688"/><text x="62.8187%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (91 samples, 0.05%)</title><rect x="63.4946%" y="117" width="0.0451%" height="15" fill="rgb(215,215,53)" fg:x="128028" fg:w="91"/><text x="63.7446%" y="127.50"></text></g><g><title>`0x7FF97E69702C (91 samples, 0.05%)</title><rect x="63.4946%" y="101" width="0.0451%" height="15" fill="rgb(223,4,10)" fg:x="128028" fg:w="91"/><text x="63.7446%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (271 samples, 0.13%)</title><rect x="63.4058%" y="149" width="0.1344%" height="15" fill="rgb(234,103,6)" fg:x="127849" fg:w="271"/><text x="63.6558%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (97 samples, 0.05%)</title><rect x="63.4921%" y="133" width="0.0481%" height="15" fill="rgb(227,97,0)" fg:x="128023" fg:w="97"/><text x="63.7421%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (122,790 samples, 60.90%)</title><rect x="2.6464%" y="165" width="60.8969%" height="15" fill="rgb(234,150,53)" fg:x="5336" fg:w="122790"/><text x="2.8964%" y="175.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.l..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (943 samples, 0.47%)</title><rect x="63.5432%" y="165" width="0.4677%" height="15" fill="rgb(228,201,54)" fg:x="128126" fg:w="943"/><text x="63.7932%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (972 samples, 0.48%)</title><rect x="64.0109%" y="165" width="0.4821%" height="15" fill="rgb(222,22,37)" fg:x="129069" fg:w="972"/><text x="64.2609%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (21 samples, 0.01%)</title><rect x="64.4825%" y="149" width="0.0104%" height="15" fill="rgb(237,53,32)" fg:x="130020" fg:w="21"/><text x="64.7325%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (126,405 samples, 62.69%)</title><rect x="1.8042%" y="181" width="62.6897%" height="15" fill="rgb(233,25,53)" fg:x="3638" fg:w="126405"/><text x="2.0542%" y="191.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (550 samples, 0.27%)</title><rect x="64.4939%" y="181" width="0.2728%" height="15" fill="rgb(210,40,34)" fg:x="130043" fg:w="550"/><text x="64.7439%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (129,634 samples, 64.29%)</title><rect x="0.7271%" y="197" width="64.2911%" height="15" fill="rgb(241,220,44)" fg:x="1466" fg:w="129634"/><text x="0.9771%" y="207.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (507 samples, 0.25%)</title><rect x="64.7667%" y="181" width="0.2514%" height="15" fill="rgb(235,28,35)" fg:x="130593" fg:w="507"/><text x="65.0167%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (131,127 samples, 65.03%)</title><rect x="0.1289%" y="213" width="65.0315%" height="15" fill="rgb(210,56,17)" fg:x="260" fg:w="131127"/><text x="0.3789%" y="223.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.922..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (287 samples, 0.14%)</title><rect x="65.0182%" y="197" width="0.1423%" height="15" fill="rgb(224,130,29)" fg:x="131100" fg:w="287"/><text x="65.2682%" y="207.50"></text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$19batch_backpropagate17h5640268f40d69c31E (131,202 samples, 65.07%)</title><rect x="0.1146%" y="229" width="65.0687%" height="15" fill="rgb(235,212,8)" fg:x="231" fg:w="131202"/><text x="0.3646%" y="239.50">neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..lay..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix9transpose17h3361e06991f9a56aE (42 samples, 0.02%)</title><rect x="65.1625%" y="213" width="0.0208%" height="15" fill="rgb(223,33,50)" fg:x="131391" fg:w="42"/><text x="65.4125%" y="223.50"></text></g><g><title>`0x7FF97E62C324 (61 samples, 0.03%)</title><rect x="65.2582%" y="181" width="0.0303%" height="15" fill="rgb(219,149,13)" fg:x="131584" fg:w="61"/><text x="65.5082%" y="191.50"></text></g><g><title>`0x7FF97E62A10C (61 samples, 0.03%)</title><rect x="65.2582%" y="165" width="0.0303%" height="15" fill="rgb(250,156,29)" fg:x="131584" fg:w="61"/><text x="65.5082%" y="175.50"></text></g><g><title>`0x7FF97E636AC6 (61 samples, 0.03%)</title><rect x="65.2582%" y="149" width="0.0303%" height="15" fill="rgb(216,193,19)" fg:x="131584" fg:w="61"/><text x="65.5082%" y="159.50"></text></g><g><title>`0x7FF97E690364 (61 samples, 0.03%)</title><rect x="65.2582%" y="133" width="0.0303%" height="15" fill="rgb(216,135,14)" fg:x="131584" fg:w="61"/><text x="65.5082%" y="143.50"></text></g><g><title>`0x7FF97E62AFF1 (62 samples, 0.03%)</title><rect x="65.2582%" y="197" width="0.0307%" height="15" fill="rgb(241,47,5)" fg:x="131584" fg:w="62"/><text x="65.5082%" y="207.50"></text></g><g><title>`0x7FF968D51310 (36 samples, 0.02%)</title><rect x="65.3623%" y="181" width="0.0179%" height="15" fill="rgb(233,42,35)" fg:x="131794" fg:w="36"/><text x="65.6123%" y="191.50"></text></g><g><title>`0x7FF968D513E3 (69 samples, 0.03%)</title><rect x="65.3807%" y="181" width="0.0342%" height="15" fill="rgb(231,13,6)" fg:x="131831" fg:w="69"/><text x="65.6307%" y="191.50"></text></g><g><title>neural_network.exe`Unknown (269 samples, 0.13%)</title><rect x="65.2894%" y="197" width="0.1334%" height="15" fill="rgb(207,181,40)" fg:x="131647" fg:w="269"/><text x="65.5394%" y="207.50"></text></g><g><title>`0x7FF968D51381 (126 samples, 0.06%)</title><rect x="65.4313%" y="181" width="0.0625%" height="15" fill="rgb(254,173,49)" fg:x="131933" fg:w="126"/><text x="65.6813%" y="191.50"></text></g><g><title>`0x7FF968D51388 (23 samples, 0.01%)</title><rect x="65.4938%" y="181" width="0.0114%" height="15" fill="rgb(221,1,38)" fg:x="132059" fg:w="23"/><text x="65.7438%" y="191.50"></text></g><g><title>`0x7FF968D514E8 (54 samples, 0.03%)</title><rect x="65.5488%" y="181" width="0.0268%" height="15" fill="rgb(206,124,46)" fg:x="132170" fg:w="54"/><text x="65.7988%" y="191.50"></text></g><g><title>`0x7FF968D514EF (31 samples, 0.02%)</title><rect x="65.5756%" y="181" width="0.0154%" height="15" fill="rgb(249,21,11)" fg:x="132224" fg:w="31"/><text x="65.8256%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (341 samples, 0.17%)</title><rect x="65.4228%" y="197" width="0.1691%" height="15" fill="rgb(222,201,40)" fg:x="131916" fg:w="341"/><text x="65.6728%" y="207.50"></text></g><g><title>`0x7FF968D514E8 (45 samples, 0.02%)</title><rect x="65.6827%" y="181" width="0.0223%" height="15" fill="rgb(235,61,29)" fg:x="132440" fg:w="45"/><text x="65.9327%" y="191.50"></text></g><g><title>`0x7FF968D514EF (25 samples, 0.01%)</title><rect x="65.7050%" y="181" width="0.0124%" height="15" fill="rgb(219,207,3)" fg:x="132485" fg:w="25"/><text x="65.9550%" y="191.50"></text></g><g><title>`0x7FF97E62AFF1 (203 samples, 0.10%)</title><rect x="65.7174%" y="181" width="0.1007%" height="15" fill="rgb(222,56,46)" fg:x="132510" fg:w="203"/><text x="65.9674%" y="191.50"></text></g><g><title>`0x7FF97E62C324 (203 samples, 0.10%)</title><rect x="65.7174%" y="165" width="0.1007%" height="15" fill="rgb(239,76,54)" fg:x="132510" fg:w="203"/><text x="65.9674%" y="175.50"></text></g><g><title>`0x7FF97E62A10C (203 samples, 0.10%)</title><rect x="65.7174%" y="149" width="0.1007%" height="15" fill="rgb(231,124,27)" fg:x="132510" fg:w="203"/><text x="65.9674%" y="159.50"></text></g><g><title>`0x7FF97E636AC6 (203 samples, 0.10%)</title><rect x="65.7174%" y="133" width="0.1007%" height="15" fill="rgb(249,195,6)" fg:x="132510" fg:w="203"/><text x="65.9674%" y="143.50"></text></g><g><title>`0x7FF97E690364 (203 samples, 0.10%)</title><rect x="65.7174%" y="117" width="0.1007%" height="15" fill="rgb(237,174,47)" fg:x="132510" fg:w="203"/><text x="65.9674%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (36 samples, 0.02%)</title><rect x="65.9446%" y="165" width="0.0179%" height="15" fill="rgb(206,201,31)" fg:x="132968" fg:w="36"/><text x="66.1946%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (36 samples, 0.02%)</title><rect x="65.9446%" y="149" width="0.0179%" height="15" fill="rgb(231,57,52)" fg:x="132968" fg:w="36"/><text x="66.1946%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (36 samples, 0.02%)</title><rect x="65.9446%" y="133" width="0.0179%" height="15" fill="rgb(248,177,22)" fg:x="132968" fg:w="36"/><text x="66.1946%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (36 samples, 0.02%)</title><rect x="65.9446%" y="117" width="0.0179%" height="15" fill="rgb(215,211,37)" fg:x="132968" fg:w="36"/><text x="66.1946%" y="127.50"></text></g><g><title>`0x7FF97E690364 (36 samples, 0.02%)</title><rect x="65.9446%" y="101" width="0.0179%" height="15" fill="rgb(241,128,51)" fg:x="132968" fg:w="36"/><text x="66.1946%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (294 samples, 0.15%)</title><rect x="65.8186%" y="181" width="0.1458%" height="15" fill="rgb(227,165,31)" fg:x="132714" fg:w="294"/><text x="66.0686%" y="191.50"></text></g><g><title>`0x7FF968D51406 (21 samples, 0.01%)</title><rect x="66.0001%" y="165" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="133080" fg:w="21"/><text x="66.2501%" y="175.50"></text></g><g><title>`0x7FF968D51416 (32 samples, 0.02%)</title><rect x="66.0105%" y="165" width="0.0159%" height="15" fill="rgb(228,143,12)" fg:x="133101" fg:w="32"/><text x="66.2605%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (162 samples, 0.08%)</title><rect x="66.0547%" y="165" width="0.0803%" height="15" fill="rgb(249,149,8)" fg:x="133190" fg:w="162"/><text x="66.3047%" y="175.50"></text></g><g><title>`0x7FF968D514EF (72 samples, 0.04%)</title><rect x="66.1350%" y="165" width="0.0357%" height="15" fill="rgb(243,35,44)" fg:x="133352" fg:w="72"/><text x="66.3850%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (428 samples, 0.21%)</title><rect x="65.9644%" y="181" width="0.2123%" height="15" fill="rgb(246,89,9)" fg:x="133008" fg:w="428"/><text x="66.2144%" y="191.50"></text></g><g><title>`0x7FF968D514E8 (129 samples, 0.06%)</title><rect x="66.2689%" y="165" width="0.0640%" height="15" fill="rgb(233,213,13)" fg:x="133622" fg:w="129"/><text x="66.5189%" y="175.50"></text></g><g><title>`0x7FF968D514EF (41 samples, 0.02%)</title><rect x="66.3329%" y="165" width="0.0203%" height="15" fill="rgb(233,141,41)" fg:x="133751" fg:w="41"/><text x="66.5829%" y="175.50"></text></g><g><title>`0x7FF97E629C08 (53 samples, 0.03%)</title><rect x="66.3537%" y="133" width="0.0263%" height="15" fill="rgb(239,167,4)" fg:x="133793" fg:w="53"/><text x="66.6037%" y="143.50"></text></g><g><title>`0x7FF97E634FFB (51 samples, 0.03%)</title><rect x="66.3547%" y="117" width="0.0253%" height="15" fill="rgb(209,217,16)" fg:x="133795" fg:w="51"/><text x="66.6047%" y="127.50"></text></g><g><title>`0x7FF97E6368DA (49 samples, 0.02%)</title><rect x="66.3557%" y="101" width="0.0243%" height="15" fill="rgb(219,88,35)" fg:x="133797" fg:w="49"/><text x="66.6057%" y="111.50"></text></g><g><title>`0x7FF97E636988 (49 samples, 0.02%)</title><rect x="66.3557%" y="85" width="0.0243%" height="15" fill="rgb(220,193,23)" fg:x="133797" fg:w="49"/><text x="66.6057%" y="95.50"></text></g><g><title>`0x7FF97E636AC6 (49 samples, 0.02%)</title><rect x="66.3557%" y="69" width="0.0243%" height="15" fill="rgb(230,90,52)" fg:x="133797" fg:w="49"/><text x="66.6057%" y="79.50"></text></g><g><title>`0x7FF97E690364 (49 samples, 0.02%)</title><rect x="66.3557%" y="53" width="0.0243%" height="15" fill="rgb(252,106,19)" fg:x="133797" fg:w="49"/><text x="66.6057%" y="63.50"></text></g><g><title>`0x7FF97E62C324 (167 samples, 0.08%)</title><rect x="66.3537%" y="149" width="0.0828%" height="15" fill="rgb(206,74,20)" fg:x="133793" fg:w="167"/><text x="66.6037%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (108 samples, 0.05%)</title><rect x="66.3830%" y="133" width="0.0536%" height="15" fill="rgb(230,138,44)" fg:x="133852" fg:w="108"/><text x="66.6330%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (108 samples, 0.05%)</title><rect x="66.3830%" y="117" width="0.0536%" height="15" fill="rgb(235,182,43)" fg:x="133852" fg:w="108"/><text x="66.6330%" y="127.50"></text></g><g><title>`0x7FF97E690364 (108 samples, 0.05%)</title><rect x="66.3830%" y="101" width="0.0536%" height="15" fill="rgb(242,16,51)" fg:x="133852" fg:w="108"/><text x="66.6330%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (168 samples, 0.08%)</title><rect x="66.3537%" y="165" width="0.0833%" height="15" fill="rgb(248,9,4)" fg:x="133793" fg:w="168"/><text x="66.6037%" y="175.50"></text></g><g><title>`0x7FF97E62F956 (94 samples, 0.05%)</title><rect x="66.4380%" y="149" width="0.0466%" height="15" fill="rgb(210,31,22)" fg:x="133963" fg:w="94"/><text x="66.6880%" y="159.50"></text></g><g><title>`0x7FF97E69702C (94 samples, 0.05%)</title><rect x="66.4380%" y="133" width="0.0466%" height="15" fill="rgb(239,54,39)" fg:x="133963" fg:w="94"/><text x="66.6880%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (101 samples, 0.05%)</title><rect x="66.4370%" y="165" width="0.0501%" height="15" fill="rgb(230,99,41)" fg:x="133961" fg:w="101"/><text x="66.6870%" y="175.50"></text></g><g><title>`0x7FF97E62F956 (184 samples, 0.09%)</title><rect x="66.5184%" y="133" width="0.0913%" height="15" fill="rgb(253,106,12)" fg:x="134125" fg:w="184"/><text x="66.7684%" y="143.50"></text></g><g><title>`0x7FF97E69702C (184 samples, 0.09%)</title><rect x="66.5184%" y="117" width="0.0913%" height="15" fill="rgb(213,46,41)" fg:x="134125" fg:w="184"/><text x="66.7684%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (249 samples, 0.12%)</title><rect x="66.4871%" y="165" width="0.1235%" height="15" fill="rgb(215,133,35)" fg:x="134062" fg:w="249"/><text x="66.7371%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (188 samples, 0.09%)</title><rect x="66.5174%" y="149" width="0.0932%" height="15" fill="rgb(213,28,5)" fg:x="134123" fg:w="188"/><text x="66.7674%" y="159.50"></text></g><g><title>`0x7FF968D513D9 (21 samples, 0.01%)</title><rect x="66.6240%" y="149" width="0.0104%" height="15" fill="rgb(215,77,49)" fg:x="134338" fg:w="21"/><text x="66.8740%" y="159.50"></text></g><g><title>`0x7FF968D513E3 (42 samples, 0.02%)</title><rect x="66.6359%" y="149" width="0.0208%" height="15" fill="rgb(248,100,22)" fg:x="134362" fg:w="42"/><text x="66.8859%" y="159.50"></text></g><g><title>`0x7FF968D513EC (21 samples, 0.01%)</title><rect x="66.6587%" y="149" width="0.0104%" height="15" fill="rgb(208,67,9)" fg:x="134408" fg:w="21"/><text x="66.9087%" y="159.50"></text></g><g><title>`0x7FF968D51426 (88 samples, 0.04%)</title><rect x="66.6989%" y="149" width="0.0436%" height="15" fill="rgb(219,133,21)" fg:x="134489" fg:w="88"/><text x="66.9489%" y="159.50"></text></g><g><title>`0x7FF968D514E8 (113 samples, 0.06%)</title><rect x="66.7629%" y="149" width="0.0560%" height="15" fill="rgb(246,46,29)" fg:x="134618" fg:w="113"/><text x="67.0129%" y="159.50"></text></g><g><title>`0x7FF968D514EF (203 samples, 0.10%)</title><rect x="66.8189%" y="149" width="0.1007%" height="15" fill="rgb(246,185,52)" fg:x="134731" fg:w="203"/><text x="67.0689%" y="159.50"></text></g><g><title>`0x7FF968D514F6 (24 samples, 0.01%)</title><rect x="66.9196%" y="149" width="0.0119%" height="15" fill="rgb(252,136,11)" fg:x="134934" fg:w="24"/><text x="67.1696%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (669 samples, 0.33%)</title><rect x="66.6106%" y="165" width="0.3318%" height="15" fill="rgb(219,138,53)" fg:x="134311" fg:w="669"/><text x="66.8606%" y="175.50"></text></g><g><title>`0x7FF97E636988 (90 samples, 0.04%)</title><rect x="67.0292%" y="69" width="0.0446%" height="15" fill="rgb(211,51,23)" fg:x="135155" fg:w="90"/><text x="67.2792%" y="79.50"></text></g><g><title>`0x7FF97E636AC6 (90 samples, 0.04%)</title><rect x="67.0292%" y="53" width="0.0446%" height="15" fill="rgb(247,221,28)" fg:x="135155" fg:w="90"/><text x="67.2792%" y="63.50"></text></g><g><title>`0x7FF97E690364 (90 samples, 0.04%)</title><rect x="67.0292%" y="37" width="0.0446%" height="15" fill="rgb(251,222,45)" fg:x="135155" fg:w="90"/><text x="67.2792%" y="47.50"></text></g><g><title>`0x7FF97E629C08 (106 samples, 0.05%)</title><rect x="67.0218%" y="117" width="0.0526%" height="15" fill="rgb(217,162,53)" fg:x="135140" fg:w="106"/><text x="67.2718%" y="127.50"></text></g><g><title>`0x7FF97E634FFB (93 samples, 0.05%)</title><rect x="67.0282%" y="101" width="0.0461%" height="15" fill="rgb(229,93,14)" fg:x="135153" fg:w="93"/><text x="67.2782%" y="111.50"></text></g><g><title>`0x7FF97E6368DA (91 samples, 0.05%)</title><rect x="67.0292%" y="85" width="0.0451%" height="15" fill="rgb(209,67,49)" fg:x="135155" fg:w="91"/><text x="67.2792%" y="95.50"></text></g><g><title>`0x7FF97E62C324 (114 samples, 0.06%)</title><rect x="67.0213%" y="133" width="0.0565%" height="15" fill="rgb(213,87,29)" fg:x="135139" fg:w="114"/><text x="67.2713%" y="143.50"></text></g><g><title>`0x7FF97E62AFF1 (116 samples, 0.06%)</title><rect x="67.0208%" y="149" width="0.0575%" height="15" fill="rgb(205,151,52)" fg:x="135138" fg:w="116"/><text x="67.2708%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (345 samples, 0.17%)</title><rect x="67.0838%" y="133" width="0.1711%" height="15" fill="rgb(253,215,39)" fg:x="135265" fg:w="345"/><text x="67.3338%" y="143.50"></text></g><g><title>`0x7FF97E69702C (345 samples, 0.17%)</title><rect x="67.0838%" y="117" width="0.1711%" height="15" fill="rgb(221,220,41)" fg:x="135265" fg:w="345"/><text x="67.3338%" y="127.50"></text></g><g><title>`0x7FF97E62D239 (363 samples, 0.18%)</title><rect x="67.0788%" y="149" width="0.1800%" height="15" fill="rgb(218,133,21)" fg:x="135255" fg:w="363"/><text x="67.3288%" y="159.50"></text></g><g><title>`0x7FF97E69702C (90 samples, 0.04%)</title><rect x="67.3020%" y="101" width="0.0446%" height="15" fill="rgb(221,193,43)" fg:x="135705" fg:w="90"/><text x="67.5520%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (93 samples, 0.05%)</title><rect x="67.3020%" y="117" width="0.0461%" height="15" fill="rgb(240,128,52)" fg:x="135705" fg:w="93"/><text x="67.5520%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (183 samples, 0.09%)</title><rect x="67.2588%" y="149" width="0.0908%" height="15" fill="rgb(253,114,12)" fg:x="135618" fg:w="183"/><text x="67.5088%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (103 samples, 0.05%)</title><rect x="67.2985%" y="133" width="0.0511%" height="15" fill="rgb(215,223,47)" fg:x="135698" fg:w="103"/><text x="67.5485%" y="143.50"></text></g><g><title>`0x7FF968D513E3 (69 samples, 0.03%)</title><rect x="67.3873%" y="133" width="0.0342%" height="15" fill="rgb(248,225,23)" fg:x="135877" fg:w="69"/><text x="67.6373%" y="143.50"></text></g><g><title>`0x7FF968D513E7 (21 samples, 0.01%)</title><rect x="67.4215%" y="133" width="0.0104%" height="15" fill="rgb(250,108,0)" fg:x="135946" fg:w="21"/><text x="67.6715%" y="143.50"></text></g><g><title>`0x7FF968D514BB (77 samples, 0.04%)</title><rect x="67.4726%" y="133" width="0.0382%" height="15" fill="rgb(228,208,7)" fg:x="136049" fg:w="77"/><text x="67.7226%" y="143.50"></text></g><g><title>`0x7FF968D514CC (54 samples, 0.03%)</title><rect x="67.5137%" y="133" width="0.0268%" height="15" fill="rgb(244,45,10)" fg:x="136132" fg:w="54"/><text x="67.7637%" y="143.50"></text></g><g><title>`0x7FF968D514DA (68 samples, 0.03%)</title><rect x="67.5415%" y="133" width="0.0337%" height="15" fill="rgb(207,125,25)" fg:x="136188" fg:w="68"/><text x="67.7915%" y="143.50"></text></g><g><title>`0x7FF968D514E8 (63 samples, 0.03%)</title><rect x="67.5767%" y="133" width="0.0312%" height="15" fill="rgb(210,195,18)" fg:x="136259" fg:w="63"/><text x="67.8267%" y="143.50"></text></g><g><title>`0x7FF968D514EF (132 samples, 0.07%)</title><rect x="67.6080%" y="133" width="0.0655%" height="15" fill="rgb(249,80,12)" fg:x="136322" fg:w="132"/><text x="67.8580%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (31 samples, 0.02%)</title><rect x="67.6868%" y="133" width="0.0154%" height="15" fill="rgb(221,65,9)" fg:x="136481" fg:w="31"/><text x="67.9368%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (715 samples, 0.35%)</title><rect x="67.3496%" y="149" width="0.3546%" height="15" fill="rgb(235,49,36)" fg:x="135801" fg:w="715"/><text x="67.5996%" y="159.50"></text></g><g><title>`0x7FF97E629C08 (23 samples, 0.01%)</title><rect x="67.9001%" y="101" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="136911" fg:w="23"/><text x="68.1501%" y="111.50"></text></g><g><title>`0x7FF97E62C324 (30 samples, 0.01%)</title><rect x="67.8981%" y="117" width="0.0149%" height="15" fill="rgb(215,141,46)" fg:x="136907" fg:w="30"/><text x="68.1481%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (64 samples, 0.03%)</title><rect x="67.8961%" y="133" width="0.0317%" height="15" fill="rgb(250,160,47)" fg:x="136903" fg:w="64"/><text x="68.1461%" y="143.50"></text></g><g><title>`0x7FF97E69702C (23 samples, 0.01%)</title><rect x="67.9298%" y="101" width="0.0114%" height="15" fill="rgb(216,222,40)" fg:x="136971" fg:w="23"/><text x="68.1798%" y="111.50"></text></g><g><title>`0x7FF97E62CC9A (27 samples, 0.01%)</title><rect x="67.9283%" y="133" width="0.0134%" height="15" fill="rgb(234,217,39)" fg:x="136968" fg:w="27"/><text x="68.1783%" y="143.50"></text></g><g><title>`0x7FF97E62D7B9 (25 samples, 0.01%)</title><rect x="67.9293%" y="117" width="0.0124%" height="15" fill="rgb(207,178,40)" fg:x="136970" fg:w="25"/><text x="68.1793%" y="127.50"></text></g><g><title>`0x7FF97E62F956 (396 samples, 0.20%)</title><rect x="67.9571%" y="117" width="0.1964%" height="15" fill="rgb(221,136,13)" fg:x="137026" fg:w="396"/><text x="68.2071%" y="127.50"></text></g><g><title>`0x7FF97E69702C (396 samples, 0.20%)</title><rect x="67.9571%" y="101" width="0.1964%" height="15" fill="rgb(249,199,10)" fg:x="137026" fg:w="396"/><text x="68.2071%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (432 samples, 0.21%)</title><rect x="67.9417%" y="133" width="0.2142%" height="15" fill="rgb(249,222,13)" fg:x="136995" fg:w="432"/><text x="68.1917%" y="143.50"></text></g><g><title>`0x7FF97E69702C (60 samples, 0.03%)</title><rect x="68.2547%" y="85" width="0.0298%" height="15" fill="rgb(244,185,38)" fg:x="137626" fg:w="60"/><text x="68.5047%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (68 samples, 0.03%)</title><rect x="68.2512%" y="117" width="0.0337%" height="15" fill="rgb(236,202,9)" fg:x="137619" fg:w="68"/><text x="68.5012%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (66 samples, 0.03%)</title><rect x="68.2522%" y="101" width="0.0327%" height="15" fill="rgb(250,229,37)" fg:x="137621" fg:w="66"/><text x="68.5022%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (261 samples, 0.13%)</title><rect x="68.1560%" y="133" width="0.1294%" height="15" fill="rgb(206,174,23)" fg:x="137427" fg:w="261"/><text x="68.4060%" y="143.50"></text></g><g><title>`0x7FF968D514A7 (24 samples, 0.01%)</title><rect x="68.3554%" y="117" width="0.0119%" height="15" fill="rgb(211,33,43)" fg:x="137829" fg:w="24"/><text x="68.6054%" y="127.50"></text></g><g><title>`0x7FF968D514F6 (24 samples, 0.01%)</title><rect x="68.4159%" y="117" width="0.0119%" height="15" fill="rgb(245,58,50)" fg:x="137951" fg:w="24"/><text x="68.6659%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (343 samples, 0.17%)</title><rect x="68.2854%" y="133" width="0.1701%" height="15" fill="rgb(244,68,36)" fg:x="137688" fg:w="343"/><text x="68.5354%" y="143.50"></text></g><g><title>`0x7FF968D51388 (25 samples, 0.01%)</title><rect x="68.9584%" y="117" width="0.0124%" height="15" fill="rgb(232,229,15)" fg:x="139045" fg:w="25"/><text x="69.2084%" y="127.50"></text></g><g><title>`0x7FF968D514EF (21 samples, 0.01%)</title><rect x="69.0095%" y="117" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="139148" fg:w="21"/><text x="69.2595%" y="127.50"></text></g><g><title>`0x7FF97E69CC6F (22 samples, 0.01%)</title><rect x="69.0760%" y="101" width="0.0109%" height="15" fill="rgb(235,160,14)" fg:x="139282" fg:w="22"/><text x="69.3260%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (143 samples, 0.07%)</title><rect x="69.0398%" y="117" width="0.0709%" height="15" fill="rgb(212,155,44)" fg:x="139209" fg:w="143"/><text x="69.2898%" y="127.50"></text></g><g><title>`0x7FF97E69702C (117 samples, 0.06%)</title><rect x="69.1394%" y="85" width="0.0580%" height="15" fill="rgb(226,2,50)" fg:x="139410" fg:w="117"/><text x="69.3894%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (166 samples, 0.08%)</title><rect x="69.1166%" y="117" width="0.0823%" height="15" fill="rgb(234,177,6)" fg:x="139364" fg:w="166"/><text x="69.3666%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (142 samples, 0.07%)</title><rect x="69.1285%" y="101" width="0.0704%" height="15" fill="rgb(217,24,9)" fg:x="139388" fg:w="142"/><text x="69.3785%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (29 samples, 0.01%)</title><rect x="69.4851%" y="101" width="0.0144%" height="15" fill="rgb(220,13,46)" fg:x="140107" fg:w="29"/><text x="69.7351%" y="111.50"></text></g><g><title>`0x7FF97E696E23 (51 samples, 0.03%)</title><rect x="69.5312%" y="69" width="0.0253%" height="15" fill="rgb(239,221,27)" fg:x="140200" fg:w="51"/><text x="69.7812%" y="79.50"></text></g><g><title>`0x7FF97E69702C (106 samples, 0.05%)</title><rect x="69.5590%" y="69" width="0.0526%" height="15" fill="rgb(222,198,25)" fg:x="140256" fg:w="106"/><text x="69.8090%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (166 samples, 0.08%)</title><rect x="69.5307%" y="85" width="0.0823%" height="15" fill="rgb(211,99,13)" fg:x="140199" fg:w="166"/><text x="69.7807%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (211 samples, 0.10%)</title><rect x="69.5089%" y="101" width="0.1046%" height="15" fill="rgb(232,111,31)" fg:x="140155" fg:w="211"/><text x="69.7589%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (846 samples, 0.42%)</title><rect x="69.1994%" y="117" width="0.4196%" height="15" fill="rgb(245,82,37)" fg:x="139531" fg:w="846"/><text x="69.4494%" y="127.50"></text></g><g><title>`0x7FF968D51324 (31 samples, 0.02%)</title><rect x="69.6994%" y="101" width="0.0154%" height="15" fill="rgb(227,149,46)" fg:x="140539" fg:w="31"/><text x="69.9494%" y="111.50"></text></g><g><title>`0x7FF968D51381 (31 samples, 0.02%)</title><rect x="69.7167%" y="101" width="0.0154%" height="15" fill="rgb(218,36,50)" fg:x="140574" fg:w="31"/><text x="69.9667%" y="111.50"></text></g><g><title>`0x7FF968D51388 (35 samples, 0.02%)</title><rect x="69.7321%" y="101" width="0.0174%" height="15" fill="rgb(226,80,48)" fg:x="140605" fg:w="35"/><text x="69.9821%" y="111.50"></text></g><g><title>`0x7FF968D5147F (29 samples, 0.01%)</title><rect x="69.7564%" y="101" width="0.0144%" height="15" fill="rgb(238,224,15)" fg:x="140654" fg:w="29"/><text x="70.0064%" y="111.50"></text></g><g><title>`0x7FF968D514CC (42 samples, 0.02%)</title><rect x="69.7812%" y="101" width="0.0208%" height="15" fill="rgb(241,136,10)" fg:x="140704" fg:w="42"/><text x="70.0312%" y="111.50"></text></g><g><title>`0x7FF968D514D3 (35 samples, 0.02%)</title><rect x="69.8020%" y="101" width="0.0174%" height="15" fill="rgb(208,32,45)" fg:x="140746" fg:w="35"/><text x="70.0520%" y="111.50"></text></g><g><title>`0x7FF968D514E1 (40 samples, 0.02%)</title><rect x="69.8228%" y="101" width="0.0198%" height="15" fill="rgb(207,135,9)" fg:x="140788" fg:w="40"/><text x="70.0728%" y="111.50"></text></g><g><title>`0x7FF968D514EF (55 samples, 0.03%)</title><rect x="69.8462%" y="101" width="0.0273%" height="15" fill="rgb(206,86,44)" fg:x="140835" fg:w="55"/><text x="70.0962%" y="111.50"></text></g><g><title>`0x7FF968D514F6 (37 samples, 0.02%)</title><rect x="69.8734%" y="101" width="0.0183%" height="15" fill="rgb(245,177,15)" fg:x="140890" fg:w="37"/><text x="70.1234%" y="111.50"></text></g><g><title>`0x7FF968D514FA (26 samples, 0.01%)</title><rect x="69.8918%" y="101" width="0.0129%" height="15" fill="rgb(206,64,50)" fg:x="140927" fg:w="26"/><text x="70.1418%" y="111.50"></text></g><g><title>`0x7FF97E62CC9A (116 samples, 0.06%)</title><rect x="69.9245%" y="101" width="0.0575%" height="15" fill="rgb(234,36,40)" fg:x="140993" fg:w="116"/><text x="70.1745%" y="111.50"></text></g><g><title>neural_network.exe`memcpy (25 samples, 0.01%)</title><rect x="69.9865%" y="101" width="0.0124%" height="15" fill="rgb(213,64,8)" fg:x="141118" fg:w="25"/><text x="70.2365%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17h3785d4d09d4e4a20E (772 samples, 0.38%)</title><rect x="69.6190%" y="117" width="0.3829%" height="15" fill="rgb(210,75,36)" fg:x="140377" fg:w="772"/><text x="69.8690%" y="127.50"></text></g><g><title>`0x7FF97E696E23 (64 samples, 0.03%)</title><rect x="95.7354%" y="69" width="0.0317%" height="15" fill="rgb(229,88,21)" fg:x="193037" fg:w="64"/><text x="95.9854%" y="79.50"></text></g><g><title>`0x7FF97E69702C (98 samples, 0.05%)</title><rect x="95.7686%" y="69" width="0.0486%" height="15" fill="rgb(252,204,47)" fg:x="193104" fg:w="98"/><text x="96.0186%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (170 samples, 0.08%)</title><rect x="95.7349%" y="85" width="0.0843%" height="15" fill="rgb(208,77,27)" fg:x="193036" fg:w="170"/><text x="95.9849%" y="95.50"></text></g><g><title>`0x7FF97E653704 (33 samples, 0.02%)</title><rect x="95.8306%" y="53" width="0.0164%" height="15" fill="rgb(221,76,26)" fg:x="193229" fg:w="33"/><text x="96.0806%" y="63.50"></text></g><g><title>`0x7FF97E62D239 (32 samples, 0.02%)</title><rect x="95.8311%" y="37" width="0.0159%" height="15" fill="rgb(225,139,18)" fg:x="193230" fg:w="32"/><text x="96.0811%" y="47.50"></text></g><g><title>`0x7FF97E653618 (36 samples, 0.02%)</title><rect x="95.8296%" y="69" width="0.0179%" height="15" fill="rgb(230,137,11)" fg:x="193227" fg:w="36"/><text x="96.0796%" y="79.50"></text></g><g><title>`0x7FF97E62DB41 (45 samples, 0.02%)</title><rect x="95.8261%" y="85" width="0.0223%" height="15" fill="rgb(212,28,1)" fg:x="193220" fg:w="45"/><text x="96.0761%" y="95.50"></text></g><g><title>`0x7FF97E631921 (256 samples, 0.13%)</title><rect x="95.8504%" y="69" width="0.1270%" height="15" fill="rgb(248,164,17)" fg:x="193269" fg:w="256"/><text x="96.1004%" y="79.50"></text></g><g><title>`0x7FF97E62DBBF (310 samples, 0.15%)</title><rect x="95.8495%" y="85" width="0.1537%" height="15" fill="rgb(222,171,42)" fg:x="193267" fg:w="310"/><text x="96.0995%" y="95.50"></text></g><g><title>`0x7FF97E62DBDD (21 samples, 0.01%)</title><rect x="96.0032%" y="85" width="0.0104%" height="15" fill="rgb(243,84,45)" fg:x="193577" fg:w="21"/><text x="96.2532%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (613 samples, 0.30%)</title><rect x="95.7106%" y="101" width="0.3040%" height="15" fill="rgb(252,49,23)" fg:x="192987" fg:w="613"/><text x="95.9606%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17hacf7e5eb81c41081E.llvm.9226229113657676759 (52,458 samples, 26.02%)</title><rect x="70.0019%" y="117" width="26.0162%" height="15" fill="rgb(215,19,7)" fg:x="141149" fg:w="52458"/><text x="70.2519%" y="127.50">neural_network.exe`_ZN14neural_network7hel..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (2,538 samples, 1.26%)</title><rect x="96.0181%" y="117" width="1.2587%" height="15" fill="rgb(238,81,41)" fg:x="193607" fg:w="2538"/><text x="96.2681%" y="127.50"></text></g><g><title>`0x7FF97E69702C (125 samples, 0.06%)</title><rect x="97.4866%" y="69" width="0.0620%" height="15" fill="rgb(210,199,37)" fg:x="196568" fg:w="125"/><text x="97.7366%" y="79.50"></text></g><g><title>`0x7FF97E62CC9A (163 samples, 0.08%)</title><rect x="97.4682%" y="101" width="0.0808%" height="15" fill="rgb(244,192,49)" fg:x="196531" fg:w="163"/><text x="97.7182%" y="111.50"></text></g><g><title>`0x7FF97E62D7B9 (145 samples, 0.07%)</title><rect x="97.4771%" y="85" width="0.0719%" height="15" fill="rgb(226,211,11)" fg:x="196549" fg:w="145"/><text x="97.7271%" y="95.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (551 samples, 0.27%)</title><rect x="97.2768%" y="117" width="0.2733%" height="15" fill="rgb(236,162,54)" fg:x="196145" fg:w="551"/><text x="97.5268%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (58,678 samples, 29.10%)</title><rect x="68.4555%" y="133" width="29.1010%" height="15" fill="rgb(220,229,9)" fg:x="138031" fg:w="58678"/><text x="68.7055%" y="143.50">neural_network.exe`_ZN14neural_network7helpers6..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (1,425 samples, 0.71%)</title><rect x="97.5565%" y="133" width="0.7067%" height="15" fill="rgb(250,87,22)" fg:x="196709" fg:w="1425"/><text x="97.8065%" y="143.50"></text></g><g><title>`0x7FF97E62F956 (154 samples, 0.08%)</title><rect x="98.3530%" y="101" width="0.0764%" height="15" fill="rgb(239,43,17)" fg:x="198315" fg:w="154"/><text x="98.6030%" y="111.50"></text></g><g><title>`0x7FF97E69702C (154 samples, 0.08%)</title><rect x="98.3530%" y="85" width="0.0764%" height="15" fill="rgb(231,177,25)" fg:x="198315" fg:w="154"/><text x="98.6030%" y="95.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (339 samples, 0.17%)</title><rect x="98.2632%" y="133" width="0.1681%" height="15" fill="rgb(219,179,1)" fg:x="198134" fg:w="339"/><text x="98.5132%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (170 samples, 0.08%)</title><rect x="98.3470%" y="117" width="0.0843%" height="15" fill="rgb(238,219,53)" fg:x="198303" fg:w="170"/><text x="98.5970%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (61,960 samples, 30.73%)</title><rect x="67.7042%" y="149" width="30.7286%" height="15" fill="rgb(232,167,36)" fg:x="136516" fg:w="61960"/><text x="67.9542%" y="159.50">neural_network.exe`_ZN14neural_network7helpers6mat..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (813 samples, 0.40%)</title><rect x="98.4328%" y="149" width="0.4032%" height="15" fill="rgb(244,19,51)" fg:x="198476" fg:w="813"/><text x="98.6828%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (329 samples, 0.16%)</title><rect x="98.8831%" y="117" width="0.1632%" height="15" fill="rgb(224,6,22)" fg:x="199384" fg:w="329"/><text x="99.1331%" y="127.50"></text></g><g><title>`0x7FF97E69702C (328 samples, 0.16%)</title><rect x="98.8836%" y="101" width="0.1627%" height="15" fill="rgb(224,145,5)" fg:x="199385" fg:w="328"/><text x="99.1336%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (426 samples, 0.21%)</title><rect x="98.8360%" y="149" width="0.2113%" height="15" fill="rgb(234,130,49)" fg:x="199289" fg:w="426"/><text x="99.0860%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (341 samples, 0.17%)</title><rect x="98.8782%" y="133" width="0.1691%" height="15" fill="rgb(254,6,2)" fg:x="199374" fg:w="341"/><text x="99.1282%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (64,736 samples, 32.11%)</title><rect x="66.9424%" y="165" width="32.1054%" height="15" fill="rgb(208,96,46)" fg:x="134980" fg:w="64736"/><text x="67.1924%" y="175.50">neural_network.exe`_ZN14neural_network7helpers6matri..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (465 samples, 0.23%)</title><rect x="99.0478%" y="165" width="0.2306%" height="15" fill="rgb(239,3,39)" fg:x="199716" fg:w="465"/><text x="99.2978%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (67,287 samples, 33.37%)</title><rect x="66.1767%" y="181" width="33.3705%" height="15" fill="rgb(233,210,1)" fg:x="133436" fg:w="67287"/><text x="66.4267%" y="191.50">neural_network.exe`_ZN14neural_network7helpers6matrix6..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (542 samples, 0.27%)</title><rect x="99.2784%" y="165" width="0.2688%" height="15" fill="rgb(244,137,37)" fg:x="200181" fg:w="542"/><text x="99.5284%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (271 samples, 0.13%)</title><rect x="99.5472%" y="181" width="0.1344%" height="15" fill="rgb(240,136,2)" fg:x="200723" fg:w="271"/><text x="99.7972%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (69,015 samples, 34.23%)</title><rect x="65.5920%" y="197" width="34.2275%" height="15" fill="rgb(239,18,37)" fg:x="132257" fg:w="69015"/><text x="65.8420%" y="207.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Ma..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17h5a6c852f43949997E (278 samples, 0.14%)</title><rect x="99.6816%" y="181" width="0.1379%" height="15" fill="rgb(218,185,22)" fg:x="200994" fg:w="278"/><text x="99.9316%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (69,987 samples, 34.71%)</title><rect x="65.1858%" y="213" width="34.7096%" height="15" fill="rgb(225,218,4)" fg:x="131438" fg:w="69987"/><text x="65.4358%" y="223.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Ma..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17hc5dc7a666390031aE (153 samples, 0.08%)</title><rect x="99.8195%" y="197" width="0.0759%" height="15" fill="rgb(230,182,32)" fg:x="201272" fg:w="153"/><text x="100.0695%" y="207.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet19batch_backpropagate17h13924e2e413dd874E (201,227 samples, 99.80%)</title><rect x="0.1046%" y="245" width="99.7972%" height="15" fill="rgb(242,56,43)" fg:x="211" fg:w="201227"/><text x="0.3546%" y="255.50">neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet19batch_backpropagate17h13924e2e413dd874E</text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$4pass17h7cba2b535660275dE (70,005 samples, 34.72%)</title><rect x="65.1833%" y="229" width="34.7185%" height="15" fill="rgb(233,99,24)" fg:x="131433" fg:w="70005"/><text x="65.4333%" y="239.50">neural_network.exe`_ZN193_$LT$neural_network..layers..de..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17hacf7e5eb81c41081E.llvm.9226229113657676759 (149 samples, 0.07%)</title><rect x="99.9117%" y="165" width="0.0739%" height="15" fill="rgb(234,209,42)" fg:x="201458" fg:w="149"/><text x="100.1617%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (166 samples, 0.08%)</title><rect x="99.9083%" y="181" width="0.0823%" height="15" fill="rgb(227,7,12)" fg:x="201451" fg:w="166"/><text x="100.1583%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (176 samples, 0.09%)</title><rect x="99.9043%" y="197" width="0.0873%" height="15" fill="rgb(245,203,43)" fg:x="201443" fg:w="176"/><text x="100.1543%" y="207.50"></text></g><g><title>`0x7FF97E64AF28 (201,619 samples, 99.99%)</title><rect x="0.0005%" y="469" width="99.9916%" height="15" fill="rgb(238,205,33)" fg:x="1" fg:w="201619"/><text x="0.2505%" y="479.50">`0x7FF97E64AF28</text></g><g><title>`0x7FF97DFB257D (201,619 samples, 99.99%)</title><rect x="0.0005%" y="453" width="99.9916%" height="15" fill="rgb(231,56,7)" fg:x="1" fg:w="201619"/><text x="0.2505%" y="463.50">`0x7FF97DFB257D</text></g><g><title>neural_network.exe`__scrt_common_main_seh() (201,613 samples, 99.99%)</title><rect x="0.0035%" y="437" width="99.9886%" height="15" fill="rgb(244,186,29)" fg:x="7" fg:w="201613"/><text x="0.2535%" y="447.50">neural_network.exe`__scrt_common_main_seh()</text></g><g><title>neural_network.exe`invoke_main() (201,609 samples, 99.99%)</title><rect x="0.0055%" y="421" width="99.9866%" height="15" fill="rgb(234,111,31)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="431.50">neural_network.exe`invoke_main()</text></g><g><title>neural_network.exe`main (201,609 samples, 99.99%)</title><rect x="0.0055%" y="405" width="99.9866%" height="15" fill="rgb(241,149,10)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="415.50">neural_network.exe`main</text></g><g><title>neural_network.exe`std::rt::lang_start_internal (201,609 samples, 99.99%)</title><rect x="0.0055%" y="389" width="99.9866%" height="15" fill="rgb(249,206,44)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="399.50">neural_network.exe`std::rt::lang_start_internal</text></g><g><title>neural_network.exe`std::panic::catch_unwind (201,609 samples, 99.99%)</title><rect x="0.0055%" y="373" width="99.9866%" height="15" fill="rgb(251,153,30)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="383.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`std::panicking::try (201,609 samples, 99.99%)</title><rect x="0.0055%" y="357" width="99.9866%" height="15" fill="rgb(239,152,38)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="367.50">neural_network.exe`std::panicking::try</text></g><g><title>neural_network.exe`std::panicking::try::do_call (201,609 samples, 99.99%)</title><rect x="0.0055%" y="341" width="99.9866%" height="15" fill="rgb(249,139,47)" fg:x="11" fg:w="201609"/><text x="0.2555%" y="351.50">neural_network.exe`std::panicking::try::do_call</text></g><g><title>neural_network.exe`std::rt::lang_start_internal::closure$2 (201,608 samples, 99.99%)</title><rect x="0.0060%" y="325" width="99.9861%" height="15" fill="rgb(244,64,35)" fg:x="12" fg:w="201608"/><text x="0.2560%" y="335.50">neural_network.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>neural_network.exe`std::panic::catch_unwind (201,608 samples, 99.99%)</title><rect x="0.0060%" y="309" width="99.9861%" height="15" fill="rgb(216,46,15)" fg:x="12" fg:w="201608"/><text x="0.2560%" y="319.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h5069060c42f026eaE.llvm.7621465829703066914 (201,608 samples, 99.99%)</title><rect x="0.0060%" y="293" width="99.9861%" height="15" fill="rgb(250,74,19)" fg:x="12" fg:w="201608"/><text x="0.2560%" y="303.50">neural_network.exe`_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h5069060c42f026eaE.llvm.7621465829703066914</text></g><g><title>neural_network.exe`_ZN3std3sys9backtrace28__rust_begin_short_backtrace17hbf6416da2fe0fdb1E (201,608 samples, 99.99%)</title><rect x="0.0060%" y="277" width="99.9861%" height="15" fill="rgb(249,42,33)" fg:x="12" fg:w="201608"/><text x="0.2560%" y="287.50">neural_network.exe`_ZN3std3sys9backtrace28__rust_begin_short_backtrace17hbf6416da2fe0fdb1E</text></g><g><title>neural_network.exe`Unknown (201,608 samples, 99.99%)</title><rect x="0.0060%" y="261" width="99.9861%" height="15" fill="rgb(242,149,17)" fg:x="12" fg:w="201608"/><text x="0.2560%" y="271.50">neural_network.exe`Unknown</text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet7predict17h6d4047e217844956E (182 samples, 0.09%)</title><rect x="99.9018%" y="245" width="0.0903%" height="15" fill="rgb(244,29,21)" fg:x="201438" fg:w="182"/><text x="100.1518%" y="255.50"></text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$4pass17h7cba2b535660275dE (182 samples, 0.09%)</title><rect x="99.9018%" y="229" width="0.0903%" height="15" fill="rgb(220,130,37)" fg:x="201438" fg:w="182"/><text x="100.1518%" y="239.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h993408f46f17c55fE.llvm.9226229113657676759 (181 samples, 0.09%)</title><rect x="99.9023%" y="213" width="0.0898%" height="15" fill="rgb(211,67,2)" fg:x="201439" fg:w="181"/><text x="100.1523%" y="223.50"></text></g><g><title>all (201,636 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="201636"/><text x="0.2500%" y="495.50"></text></g></svg></svg>