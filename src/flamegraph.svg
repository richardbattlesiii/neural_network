<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="299946"><g><title>`0x7FF968D51381 (136 samples, 0.05%)</title><rect x="0.0360%" y="213" width="0.0453%" height="15" fill="rgb(227,0,7)" fg:x="108" fg:w="136"/><text x="0.2860%" y="223.50"></text></g><g><title>`0x7FF968D514E8 (40 samples, 0.01%)</title><rect x="0.0857%" y="213" width="0.0133%" height="15" fill="rgb(217,0,24)" fg:x="257" fg:w="40"/><text x="0.3357%" y="223.50"></text></g><g><title>`0x7FF97E62BFA7 (32 samples, 0.01%)</title><rect x="0.1314%" y="197" width="0.0107%" height="15" fill="rgb(221,193,54)" fg:x="394" fg:w="32"/><text x="0.3814%" y="207.50"></text></g><g><title>`0x7FF97E62C342 (33 samples, 0.01%)</title><rect x="0.1540%" y="197" width="0.0110%" height="15" fill="rgb(248,212,6)" fg:x="462" fg:w="33"/><text x="0.4040%" y="207.50"></text></g><g><title>`0x7FF97E62C371 (70 samples, 0.02%)</title><rect x="0.1734%" y="197" width="0.0233%" height="15" fill="rgb(208,68,35)" fg:x="520" fg:w="70"/><text x="0.4234%" y="207.50"></text></g><g><title>`0x7FF97E69CC6F (576 samples, 0.19%)</title><rect x="0.2177%" y="197" width="0.1920%" height="15" fill="rgb(232,128,0)" fg:x="653" fg:w="576"/><text x="0.4677%" y="207.50"></text></g><g><title>`0x7FF97E69CCAF (32 samples, 0.01%)</title><rect x="0.4147%" y="197" width="0.0107%" height="15" fill="rgb(207,160,47)" fg:x="1244" fg:w="32"/><text x="0.6647%" y="207.50"></text></g><g><title>`0x7FF97E629C08 (36 samples, 0.01%)</title><rect x="0.4404%" y="117" width="0.0120%" height="15" fill="rgb(228,23,34)" fg:x="1321" fg:w="36"/><text x="0.6904%" y="127.50"></text></g><g><title>`0x7FF97E637C5B (37 samples, 0.01%)</title><rect x="0.4404%" y="165" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="1321" fg:w="37"/><text x="0.6904%" y="175.50"></text></g><g><title>`0x7FF97E62AFF1 (37 samples, 0.01%)</title><rect x="0.4404%" y="149" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="1321" fg:w="37"/><text x="0.6904%" y="159.50"></text></g><g><title>`0x7FF97E62C324 (37 samples, 0.01%)</title><rect x="0.4404%" y="133" width="0.0123%" height="15" fill="rgb(250,228,42)" fg:x="1321" fg:w="37"/><text x="0.6904%" y="143.50"></text></g><g><title>`0x7FF97E69CE16 (50 samples, 0.02%)</title><rect x="0.4364%" y="197" width="0.0167%" height="15" fill="rgb(240,193,28)" fg:x="1309" fg:w="50"/><text x="0.6864%" y="207.50"></text></g><g><title>`0x7FF97E637B65 (38 samples, 0.01%)</title><rect x="0.4404%" y="181" width="0.0127%" height="15" fill="rgb(216,20,37)" fg:x="1321" fg:w="38"/><text x="0.6904%" y="191.50"></text></g><g><title>`0x7FF97E62AFF1 (1,028 samples, 0.34%)</title><rect x="0.1184%" y="213" width="0.3427%" height="15" fill="rgb(206,188,39)" fg:x="355" fg:w="1028"/><text x="0.3684%" y="223.50"></text></g><g><title>`0x7FF97E62AFF4 (54 samples, 0.02%)</title><rect x="0.4611%" y="213" width="0.0180%" height="15" fill="rgb(217,207,13)" fg:x="1383" fg:w="54"/><text x="0.7111%" y="223.50"></text></g><g><title>`0x7FF97E62CC9A (48 samples, 0.02%)</title><rect x="0.5164%" y="213" width="0.0160%" height="15" fill="rgb(231,73,38)" fg:x="1549" fg:w="48"/><text x="0.7664%" y="223.50"></text></g><g><title>`0x7FF97E696CD3 (45 samples, 0.02%)</title><rect x="0.5404%" y="133" width="0.0150%" height="15" fill="rgb(225,20,46)" fg:x="1621" fg:w="45"/><text x="0.7904%" y="143.50"></text></g><g><title>`0x7FF97E696CD7 (53 samples, 0.02%)</title><rect x="0.5554%" y="133" width="0.0177%" height="15" fill="rgb(210,31,41)" fg:x="1666" fg:w="53"/><text x="0.8054%" y="143.50"></text></g><g><title>`0x7FF97E632AFE (123 samples, 0.04%)</title><rect x="0.5401%" y="149" width="0.0410%" height="15" fill="rgb(221,200,47)" fg:x="1620" fg:w="123"/><text x="0.7901%" y="159.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha61644daa21b0ac3E (130 samples, 0.04%)</title><rect x="0.5401%" y="213" width="0.0433%" height="15" fill="rgb(226,26,5)" fg:x="1620" fg:w="130"/><text x="0.7901%" y="223.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17h5d194511daa6c98eE.llvm.9661512443724087573 (130 samples, 0.04%)</title><rect x="0.5401%" y="197" width="0.0433%" height="15" fill="rgb(249,33,26)" fg:x="1620" fg:w="130"/><text x="0.7901%" y="207.50"></text></g><g><title>`0x7FF97E63218A (130 samples, 0.04%)</title><rect x="0.5401%" y="181" width="0.0433%" height="15" fill="rgb(235,183,28)" fg:x="1620" fg:w="130"/><text x="0.7901%" y="191.50"></text></g><g><title>`0x7FF97E6322C7 (130 samples, 0.04%)</title><rect x="0.5401%" y="165" width="0.0433%" height="15" fill="rgb(221,5,38)" fg:x="1620" fg:w="130"/><text x="0.7901%" y="175.50"></text></g><g><title>neural_network.exe`_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h06261b4b244c6bf4E (1,499 samples, 0.50%)</title><rect x="0.6498%" y="197" width="0.4998%" height="15" fill="rgb(247,18,42)" fg:x="1949" fg:w="1499"/><text x="0.8998%" y="207.50"></text></g><g><title>`0x7FF97E696CD3 (41 samples, 0.01%)</title><rect x="1.1499%" y="117" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="3449" fg:w="41"/><text x="1.3999%" y="127.50"></text></g><g><title>`0x7FF97E696CD7 (53 samples, 0.02%)</title><rect x="1.1635%" y="117" width="0.0177%" height="15" fill="rgb(249,31,29)" fg:x="3490" fg:w="53"/><text x="1.4135%" y="127.50"></text></g><g><title>`0x7FF97E632AFE (124 samples, 0.04%)</title><rect x="1.1495%" y="133" width="0.0413%" height="15" fill="rgb(225,111,53)" fg:x="3448" fg:w="124"/><text x="1.3995%" y="143.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h2c422b97c758f924E (1,828 samples, 0.61%)</title><rect x="0.5834%" y="213" width="0.6094%" height="15" fill="rgb(238,160,17)" fg:x="1750" fg:w="1828"/><text x="0.8334%" y="223.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17ha61644daa21b0ac3E (130 samples, 0.04%)</title><rect x="1.1495%" y="197" width="0.0433%" height="15" fill="rgb(214,148,48)" fg:x="3448" fg:w="130"/><text x="1.3995%" y="207.50"></text></g><g><title>neural_network.exe`_ZN5alloc7raw_vec11finish_grow17h5d194511daa6c98eE.llvm.9661512443724087573 (130 samples, 0.04%)</title><rect x="1.1495%" y="181" width="0.0433%" height="15" fill="rgb(232,36,49)" fg:x="3448" fg:w="130"/><text x="1.3995%" y="191.50"></text></g><g><title>`0x7FF97E63218A (130 samples, 0.04%)</title><rect x="1.1495%" y="165" width="0.0433%" height="15" fill="rgb(209,103,24)" fg:x="3448" fg:w="130"/><text x="1.3995%" y="175.50"></text></g><g><title>`0x7FF97E6322C7 (130 samples, 0.04%)</title><rect x="1.1495%" y="149" width="0.0433%" height="15" fill="rgb(229,88,8)" fg:x="3448" fg:w="130"/><text x="1.3995%" y="159.50"></text></g><g><title>`0x7FF968D51381 (207 samples, 0.07%)</title><rect x="1.2062%" y="197" width="0.0690%" height="15" fill="rgb(213,181,19)" fg:x="3618" fg:w="207"/><text x="1.4562%" y="207.50"></text></g><g><title>`0x7FF97E631921 (188 samples, 0.06%)</title><rect x="1.3076%" y="165" width="0.0627%" height="15" fill="rgb(254,191,54)" fg:x="3922" fg:w="188"/><text x="1.5576%" y="175.50"></text></g><g><title>`0x7FF97E631924 (82 samples, 0.03%)</title><rect x="1.3702%" y="165" width="0.0273%" height="15" fill="rgb(241,83,37)" fg:x="4110" fg:w="82"/><text x="1.6202%" y="175.50"></text></g><g><title>`0x7FF97E62CC9A (356 samples, 0.12%)</title><rect x="1.2842%" y="197" width="0.1187%" height="15" fill="rgb(233,36,39)" fg:x="3852" fg:w="356"/><text x="1.5342%" y="207.50"></text></g><g><title>`0x7FF97E62DBBF (289 samples, 0.10%)</title><rect x="1.3066%" y="181" width="0.0964%" height="15" fill="rgb(226,3,54)" fg:x="3919" fg:w="289"/><text x="1.5566%" y="191.50"></text></g><g><title>neural_network.exe`_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h54cc35b652fcf209E (652 samples, 0.22%)</title><rect x="1.1929%" y="213" width="0.2174%" height="15" fill="rgb(245,192,40)" fg:x="3578" fg:w="652"/><text x="1.4429%" y="223.50"></text></g><g><title>neural_network.exe`__rust_dealloc (46 samples, 0.02%)</title><rect x="1.4109%" y="213" width="0.0153%" height="15" fill="rgb(238,167,29)" fg:x="4232" fg:w="46"/><text x="1.6609%" y="223.50"></text></g><g><title>neural_network.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (32 samples, 0.01%)</title><rect x="1.4279%" y="213" width="0.0107%" height="15" fill="rgb(232,182,51)" fg:x="4283" fg:w="32"/><text x="1.6779%" y="223.50"></text></g><g><title>neural_network.exe`std::fs::impl$8::read_to_string (30 samples, 0.01%)</title><rect x="1.4386%" y="213" width="0.0100%" height="15" fill="rgb(231,60,39)" fg:x="4315" fg:w="30"/><text x="1.6886%" y="223.50"></text></g><g><title>neural_network.exe`std::fs::impl$5::read_to_string (30 samples, 0.01%)</title><rect x="1.4386%" y="197" width="0.0100%" height="15" fill="rgb(208,69,12)" fg:x="4315" fg:w="30"/><text x="1.6886%" y="207.50"></text></g><g><title>neural_network.exe`std::io::default_read_to_string (30 samples, 0.01%)</title><rect x="1.4386%" y="181" width="0.0100%" height="15" fill="rgb(235,93,37)" fg:x="4315" fg:w="30"/><text x="1.6886%" y="191.50"></text></g><g><title>neural_network.exe`std::io::append_to_string (30 samples, 0.01%)</title><rect x="1.4386%" y="165" width="0.0100%" height="15" fill="rgb(213,116,39)" fg:x="4315" fg:w="30"/><text x="1.6886%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network4flow7flow_ai7convert17hb82b2e8bdee3624eE (4,329 samples, 1.44%)</title><rect x="0.0067%" y="229" width="1.4433%" height="15" fill="rgb(222,207,29)" fg:x="20" fg:w="4329"/><text x="0.2567%" y="239.50"></text></g><g><title>`0x7FF968D514E8 (95 samples, 0.03%)</title><rect x="1.6233%" y="181" width="0.0317%" height="15" fill="rgb(206,96,30)" fg:x="4869" fg:w="95"/><text x="1.8733%" y="191.50"></text></g><g><title>`0x7FF968D514EF (89 samples, 0.03%)</title><rect x="1.6550%" y="181" width="0.0297%" height="15" fill="rgb(218,138,4)" fg:x="4964" fg:w="89"/><text x="1.9050%" y="191.50"></text></g><g><title>`0x7FF97E62A10C (507 samples, 0.17%)</title><rect x="1.6853%" y="149" width="0.1690%" height="15" fill="rgb(250,191,14)" fg:x="5055" fg:w="507"/><text x="1.9353%" y="159.50"></text></g><g><title>`0x7FF97E636AC6 (507 samples, 0.17%)</title><rect x="1.6853%" y="133" width="0.1690%" height="15" fill="rgb(239,60,40)" fg:x="5055" fg:w="507"/><text x="1.9353%" y="143.50"></text></g><g><title>`0x7FF97E690364 (507 samples, 0.17%)</title><rect x="1.6853%" y="117" width="0.1690%" height="15" fill="rgb(206,27,48)" fg:x="5055" fg:w="507"/><text x="1.9353%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (510 samples, 0.17%)</title><rect x="1.6850%" y="181" width="0.1700%" height="15" fill="rgb(225,35,8)" fg:x="5054" fg:w="510"/><text x="1.9350%" y="191.50"></text></g><g><title>`0x7FF97E62C324 (510 samples, 0.17%)</title><rect x="1.6850%" y="165" width="0.1700%" height="15" fill="rgb(250,213,24)" fg:x="5054" fg:w="510"/><text x="1.9350%" y="175.50"></text></g><g><title>`0x7FF968D51331 (38 samples, 0.01%)</title><rect x="2.1524%" y="165" width="0.0127%" height="15" fill="rgb(247,123,22)" fg:x="6456" fg:w="38"/><text x="2.4024%" y="175.50"></text></g><g><title>`0x7FF97E62AFF1 (113 samples, 0.04%)</title><rect x="2.1817%" y="165" width="0.0377%" height="15" fill="rgb(231,138,38)" fg:x="6544" fg:w="113"/><text x="2.4317%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (113 samples, 0.04%)</title><rect x="2.1817%" y="149" width="0.0377%" height="15" fill="rgb(231,145,46)" fg:x="6544" fg:w="113"/><text x="2.4317%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (113 samples, 0.04%)</title><rect x="2.1817%" y="133" width="0.0377%" height="15" fill="rgb(251,118,11)" fg:x="6544" fg:w="113"/><text x="2.4317%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (113 samples, 0.04%)</title><rect x="2.1817%" y="117" width="0.0377%" height="15" fill="rgb(217,147,25)" fg:x="6544" fg:w="113"/><text x="2.4317%" y="127.50"></text></g><g><title>`0x7FF97E690364 (113 samples, 0.04%)</title><rect x="2.1817%" y="101" width="0.0377%" height="15" fill="rgb(247,81,37)" fg:x="6544" fg:w="113"/><text x="2.4317%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (1,102 samples, 0.37%)</title><rect x="1.8577%" y="181" width="0.3674%" height="15" fill="rgb(209,12,38)" fg:x="5572" fg:w="1102"/><text x="2.1077%" y="191.50"></text></g><g><title>`0x7FF968D5137D (115 samples, 0.04%)</title><rect x="2.2264%" y="165" width="0.0383%" height="15" fill="rgb(227,1,9)" fg:x="6678" fg:w="115"/><text x="2.4764%" y="175.50"></text></g><g><title>`0x7FF968D51381 (131 samples, 0.04%)</title><rect x="2.2647%" y="165" width="0.0437%" height="15" fill="rgb(248,47,43)" fg:x="6793" fg:w="131"/><text x="2.5147%" y="175.50"></text></g><g><title>`0x7FF968D51388 (62 samples, 0.02%)</title><rect x="2.3084%" y="165" width="0.0207%" height="15" fill="rgb(221,10,30)" fg:x="6924" fg:w="62"/><text x="2.5584%" y="175.50"></text></g><g><title>`0x7FF968D513D9 (59 samples, 0.02%)</title><rect x="2.3291%" y="165" width="0.0197%" height="15" fill="rgb(210,229,1)" fg:x="6986" fg:w="59"/><text x="2.5791%" y="175.50"></text></g><g><title>`0x7FF968D513E3 (59 samples, 0.02%)</title><rect x="2.3491%" y="165" width="0.0197%" height="15" fill="rgb(222,148,37)" fg:x="7046" fg:w="59"/><text x="2.5991%" y="175.50"></text></g><g><title>`0x7FF968D51406 (73 samples, 0.02%)</title><rect x="2.3714%" y="165" width="0.0243%" height="15" fill="rgb(234,67,33)" fg:x="7113" fg:w="73"/><text x="2.6214%" y="175.50"></text></g><g><title>`0x7FF968D51416 (78 samples, 0.03%)</title><rect x="2.3961%" y="165" width="0.0260%" height="15" fill="rgb(247,98,35)" fg:x="7187" fg:w="78"/><text x="2.6461%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (259 samples, 0.09%)</title><rect x="2.4531%" y="165" width="0.0863%" height="15" fill="rgb(247,138,52)" fg:x="7358" fg:w="259"/><text x="2.7031%" y="175.50"></text></g><g><title>`0x7FF968D514EF (178 samples, 0.06%)</title><rect x="2.5395%" y="165" width="0.0593%" height="15" fill="rgb(213,79,30)" fg:x="7617" fg:w="178"/><text x="2.7895%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (1,143 samples, 0.38%)</title><rect x="2.2251%" y="181" width="0.3811%" height="15" fill="rgb(246,177,23)" fg:x="6674" fg:w="1143"/><text x="2.4751%" y="191.50"></text></g><g><title>`0x7FF968D51388 (39 samples, 0.01%)</title><rect x="2.7028%" y="165" width="0.0130%" height="15" fill="rgb(230,62,27)" fg:x="8107" fg:w="39"/><text x="2.9528%" y="175.50"></text></g><g><title>`0x7FF968D51426 (37 samples, 0.01%)</title><rect x="2.7552%" y="165" width="0.0123%" height="15" fill="rgb(216,154,8)" fg:x="8264" fg:w="37"/><text x="3.0052%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (212 samples, 0.07%)</title><rect x="2.7775%" y="165" width="0.0707%" height="15" fill="rgb(244,35,45)" fg:x="8331" fg:w="212"/><text x="3.0275%" y="175.50"></text></g><g><title>`0x7FF968D514EF (118 samples, 0.04%)</title><rect x="2.8482%" y="165" width="0.0393%" height="15" fill="rgb(251,115,12)" fg:x="8543" fg:w="118"/><text x="3.0982%" y="175.50"></text></g><g><title>`0x7FF97E636988 (66 samples, 0.02%)</title><rect x="2.8929%" y="85" width="0.0220%" height="15" fill="rgb(240,54,50)" fg:x="8677" fg:w="66"/><text x="3.1429%" y="95.50"></text></g><g><title>`0x7FF97E636AC6 (66 samples, 0.02%)</title><rect x="2.8929%" y="69" width="0.0220%" height="15" fill="rgb(233,84,52)" fg:x="8677" fg:w="66"/><text x="3.1429%" y="79.50"></text></g><g><title>`0x7FF97E690364 (66 samples, 0.02%)</title><rect x="2.8929%" y="53" width="0.0220%" height="15" fill="rgb(207,117,47)" fg:x="8677" fg:w="66"/><text x="3.1429%" y="63.50"></text></g><g><title>`0x7FF97E629C08 (80 samples, 0.03%)</title><rect x="2.8892%" y="133" width="0.0267%" height="15" fill="rgb(249,43,39)" fg:x="8666" fg:w="80"/><text x="3.1392%" y="143.50"></text></g><g><title>`0x7FF97E634FFB (71 samples, 0.02%)</title><rect x="2.8922%" y="117" width="0.0237%" height="15" fill="rgb(209,38,44)" fg:x="8675" fg:w="71"/><text x="3.1422%" y="127.50"></text></g><g><title>`0x7FF97E6368DA (69 samples, 0.02%)</title><rect x="2.8929%" y="101" width="0.0230%" height="15" fill="rgb(236,212,23)" fg:x="8677" fg:w="69"/><text x="3.1429%" y="111.50"></text></g><g><title>`0x7FF97E636AC6 (415 samples, 0.14%)</title><rect x="2.9169%" y="117" width="0.1384%" height="15" fill="rgb(242,79,21)" fg:x="8749" fg:w="415"/><text x="3.1669%" y="127.50"></text></g><g><title>`0x7FF97E690364 (415 samples, 0.14%)</title><rect x="2.9169%" y="101" width="0.1384%" height="15" fill="rgb(211,96,35)" fg:x="8749" fg:w="415"/><text x="3.1669%" y="111.50"></text></g><g><title>`0x7FF97E62A10C (416 samples, 0.14%)</title><rect x="2.9169%" y="133" width="0.1387%" height="15" fill="rgb(253,215,40)" fg:x="8749" fg:w="416"/><text x="3.1669%" y="143.50"></text></g><g><title>`0x7FF97E62C324 (505 samples, 0.17%)</title><rect x="2.8885%" y="149" width="0.1684%" height="15" fill="rgb(211,81,21)" fg:x="8664" fg:w="505"/><text x="3.1385%" y="159.50"></text></g><g><title>`0x7FF97E62AFF1 (506 samples, 0.17%)</title><rect x="2.8885%" y="165" width="0.1687%" height="15" fill="rgb(208,190,38)" fg:x="8664" fg:w="506"/><text x="3.1385%" y="175.50"></text></g><g><title>`0x7FF97E69702C (99 samples, 0.03%)</title><rect x="3.0579%" y="133" width="0.0330%" height="15" fill="rgb(235,213,38)" fg:x="9172" fg:w="99"/><text x="3.3079%" y="143.50"></text></g><g><title>`0x7FF97E62F956 (100 samples, 0.03%)</title><rect x="3.0579%" y="149" width="0.0333%" height="15" fill="rgb(237,122,38)" fg:x="9172" fg:w="100"/><text x="3.3079%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (134 samples, 0.04%)</title><rect x="3.0572%" y="165" width="0.0447%" height="15" fill="rgb(244,218,35)" fg:x="9170" fg:w="134"/><text x="3.3072%" y="175.50"></text></g><g><title>`0x7FF97E62F956 (133 samples, 0.04%)</title><rect x="3.3026%" y="133" width="0.0443%" height="15" fill="rgb(240,68,47)" fg:x="9906" fg:w="133"/><text x="3.5526%" y="143.50"></text></g><g><title>`0x7FF97E69702C (133 samples, 0.04%)</title><rect x="3.3026%" y="117" width="0.0443%" height="15" fill="rgb(210,16,53)" fg:x="9906" fg:w="133"/><text x="3.5526%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (736 samples, 0.25%)</title><rect x="3.1019%" y="165" width="0.2454%" height="15" fill="rgb(235,124,12)" fg:x="9304" fg:w="736"/><text x="3.3519%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (137 samples, 0.05%)</title><rect x="3.3016%" y="149" width="0.0457%" height="15" fill="rgb(224,169,11)" fg:x="9903" fg:w="137"/><text x="3.5516%" y="159.50"></text></g><g><title>`0x7FF968D513E3 (78 samples, 0.03%)</title><rect x="3.3909%" y="149" width="0.0260%" height="15" fill="rgb(250,166,2)" fg:x="10171" fg:w="78"/><text x="3.6409%" y="159.50"></text></g><g><title>`0x7FF968D513EC (62 samples, 0.02%)</title><rect x="3.4219%" y="149" width="0.0207%" height="15" fill="rgb(242,216,29)" fg:x="10264" fg:w="62"/><text x="3.6719%" y="159.50"></text></g><g><title>`0x7FF968D51416 (73 samples, 0.02%)</title><rect x="3.4650%" y="149" width="0.0243%" height="15" fill="rgb(230,116,27)" fg:x="10393" fg:w="73"/><text x="3.7150%" y="159.50"></text></g><g><title>`0x7FF968D51426 (51 samples, 0.02%)</title><rect x="3.4983%" y="149" width="0.0170%" height="15" fill="rgb(228,99,48)" fg:x="10493" fg:w="51"/><text x="3.7483%" y="159.50"></text></g><g><title>`0x7FF968D5142E (31 samples, 0.01%)</title><rect x="3.5153%" y="149" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="10544" fg:w="31"/><text x="3.7653%" y="159.50"></text></g><g><title>`0x7FF968D51436 (39 samples, 0.01%)</title><rect x="3.5256%" y="149" width="0.0130%" height="15" fill="rgb(247,143,39)" fg:x="10575" fg:w="39"/><text x="3.7756%" y="159.50"></text></g><g><title>`0x7FF968D514E8 (199 samples, 0.07%)</title><rect x="3.5563%" y="149" width="0.0663%" height="15" fill="rgb(236,97,10)" fg:x="10667" fg:w="199"/><text x="3.8063%" y="159.50"></text></g><g><title>`0x7FF968D514EF (218 samples, 0.07%)</title><rect x="3.6227%" y="149" width="0.0727%" height="15" fill="rgb(233,208,19)" fg:x="10866" fg:w="218"/><text x="3.8727%" y="159.50"></text></g><g><title>`0x7FF968D514F6 (89 samples, 0.03%)</title><rect x="3.6953%" y="149" width="0.0297%" height="15" fill="rgb(216,164,2)" fg:x="11084" fg:w="89"/><text x="3.9453%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (1,177 samples, 0.39%)</title><rect x="3.3473%" y="165" width="0.3924%" height="15" fill="rgb(220,129,5)" fg:x="10040" fg:w="1177"/><text x="3.5973%" y="175.50"></text></g><g><title>`0x7FF97E634F99 (36 samples, 0.01%)</title><rect x="3.8930%" y="101" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="11677" fg:w="36"/><text x="4.1430%" y="111.50"></text></g><g><title>`0x7FF97E634FFB (69 samples, 0.02%)</title><rect x="3.9050%" y="101" width="0.0230%" height="15" fill="rgb(242,107,0)" fg:x="11713" fg:w="69"/><text x="4.1550%" y="111.50"></text></g><g><title>`0x7FF97E6368DA (68 samples, 0.02%)</title><rect x="3.9054%" y="85" width="0.0227%" height="15" fill="rgb(251,28,31)" fg:x="11714" fg:w="68"/><text x="4.1554%" y="95.50"></text></g><g><title>`0x7FF97E636988 (68 samples, 0.02%)</title><rect x="3.9054%" y="69" width="0.0227%" height="15" fill="rgb(233,223,10)" fg:x="11714" fg:w="68"/><text x="4.1554%" y="79.50"></text></g><g><title>`0x7FF97E636AC6 (68 samples, 0.02%)</title><rect x="3.9054%" y="53" width="0.0227%" height="15" fill="rgb(215,21,27)" fg:x="11714" fg:w="68"/><text x="4.1554%" y="63.50"></text></g><g><title>`0x7FF97E690364 (68 samples, 0.02%)</title><rect x="3.9054%" y="37" width="0.0227%" height="15" fill="rgb(232,23,21)" fg:x="11714" fg:w="68"/><text x="4.1554%" y="47.50"></text></g><g><title>`0x7FF97E629C08 (108 samples, 0.04%)</title><rect x="3.8924%" y="117" width="0.0360%" height="15" fill="rgb(244,5,23)" fg:x="11675" fg:w="108"/><text x="4.1424%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (120 samples, 0.04%)</title><rect x="3.8914%" y="149" width="0.0400%" height="15" fill="rgb(226,81,46)" fg:x="11672" fg:w="120"/><text x="4.1414%" y="159.50"></text></g><g><title>`0x7FF97E62C324 (119 samples, 0.04%)</title><rect x="3.8917%" y="133" width="0.0397%" height="15" fill="rgb(247,70,30)" fg:x="11673" fg:w="119"/><text x="4.1417%" y="143.50"></text></g><g><title>`0x7FF97E62F956 (291 samples, 0.10%)</title><rect x="3.9377%" y="133" width="0.0970%" height="15" fill="rgb(212,68,19)" fg:x="11811" fg:w="291"/><text x="4.1877%" y="143.50"></text></g><g><title>`0x7FF97E69702C (291 samples, 0.10%)</title><rect x="3.9377%" y="117" width="0.0970%" height="15" fill="rgb(240,187,13)" fg:x="11811" fg:w="291"/><text x="4.1877%" y="127.50"></text></g><g><title>`0x7FF97E62D239 (316 samples, 0.11%)</title><rect x="3.9317%" y="149" width="0.1054%" height="15" fill="rgb(223,113,26)" fg:x="11793" fg:w="316"/><text x="4.1817%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (110 samples, 0.04%)</title><rect x="4.3718%" y="117" width="0.0367%" height="15" fill="rgb(206,192,2)" fg:x="13113" fg:w="110"/><text x="4.6218%" y="127.50"></text></g><g><title>`0x7FF97E69702C (110 samples, 0.04%)</title><rect x="4.3718%" y="101" width="0.0367%" height="15" fill="rgb(241,108,4)" fg:x="13113" fg:w="110"/><text x="4.6218%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (130 samples, 0.04%)</title><rect x="4.3668%" y="133" width="0.0433%" height="15" fill="rgb(247,173,49)" fg:x="13098" fg:w="130"/><text x="4.6168%" y="143.50"></text></g><g><title>neural_network.exe`Unknown (1,120 samples, 0.37%)</title><rect x="4.0371%" y="149" width="0.3734%" height="15" fill="rgb(224,114,35)" fg:x="12109" fg:w="1120"/><text x="4.2871%" y="159.50"></text></g><g><title>`0x7FF968D51388 (36 samples, 0.01%)</title><rect x="4.4421%" y="133" width="0.0120%" height="15" fill="rgb(245,159,27)" fg:x="13324" fg:w="36"/><text x="4.6921%" y="143.50"></text></g><g><title>`0x7FF968D513E7 (37 samples, 0.01%)</title><rect x="4.4761%" y="133" width="0.0123%" height="15" fill="rgb(245,172,44)" fg:x="13426" fg:w="37"/><text x="4.7261%" y="143.50"></text></g><g><title>`0x7FF968D5141E (31 samples, 0.01%)</title><rect x="4.5171%" y="133" width="0.0103%" height="15" fill="rgb(236,23,11)" fg:x="13549" fg:w="31"/><text x="4.7671%" y="143.50"></text></g><g><title>`0x7FF968D514E8 (69 samples, 0.02%)</title><rect x="4.5792%" y="133" width="0.0230%" height="15" fill="rgb(205,117,38)" fg:x="13735" fg:w="69"/><text x="4.8292%" y="143.50"></text></g><g><title>`0x7FF968D514EF (71 samples, 0.02%)</title><rect x="4.6022%" y="133" width="0.0237%" height="15" fill="rgb(237,72,25)" fg:x="13804" fg:w="71"/><text x="4.8522%" y="143.50"></text></g><g><title>`0x7FF968D514F6 (36 samples, 0.01%)</title><rect x="4.6258%" y="133" width="0.0120%" height="15" fill="rgb(244,70,9)" fg:x="13875" fg:w="36"/><text x="4.8758%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (47 samples, 0.02%)</title><rect x="4.6445%" y="133" width="0.0157%" height="15" fill="rgb(217,125,39)" fg:x="13931" fg:w="47"/><text x="4.8945%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (761 samples, 0.25%)</title><rect x="4.4105%" y="149" width="0.2537%" height="15" fill="rgb(235,36,10)" fg:x="13229" fg:w="761"/><text x="4.6605%" y="159.50"></text></g><g><title>`0x7FF968D514EF (34 samples, 0.01%)</title><rect x="4.9649%" y="133" width="0.0113%" height="15" fill="rgb(251,123,47)" fg:x="14892" fg:w="34"/><text x="5.2149%" y="143.50"></text></g><g><title>`0x7FF97E634F99 (35 samples, 0.01%)</title><rect x="4.9942%" y="85" width="0.0117%" height="15" fill="rgb(221,13,13)" fg:x="14980" fg:w="35"/><text x="5.2442%" y="95.50"></text></g><g><title>`0x7FF97E629C08 (39 samples, 0.01%)</title><rect x="4.9932%" y="101" width="0.0130%" height="15" fill="rgb(238,131,9)" fg:x="14977" fg:w="39"/><text x="5.2432%" y="111.50"></text></g><g><title>`0x7FF97E62C324 (54 samples, 0.02%)</title><rect x="4.9892%" y="117" width="0.0180%" height="15" fill="rgb(211,50,8)" fg:x="14965" fg:w="54"/><text x="5.2392%" y="127.50"></text></g><g><title>`0x7FF97E69CE16 (49 samples, 0.02%)</title><rect x="5.0162%" y="117" width="0.0163%" height="15" fill="rgb(245,182,24)" fg:x="15046" fg:w="49"/><text x="5.2662%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (145 samples, 0.05%)</title><rect x="4.9846%" y="133" width="0.0483%" height="15" fill="rgb(242,14,37)" fg:x="14951" fg:w="145"/><text x="5.2346%" y="143.50"></text></g><g><title>`0x7FF97E62CC9A (81 samples, 0.03%)</title><rect x="5.0339%" y="133" width="0.0270%" height="15" fill="rgb(246,228,12)" fg:x="15099" fg:w="81"/><text x="5.2839%" y="143.50"></text></g><g><title>`0x7FF97E62D7B9 (75 samples, 0.03%)</title><rect x="5.0359%" y="117" width="0.0250%" height="15" fill="rgb(213,55,15)" fg:x="15105" fg:w="75"/><text x="5.2859%" y="127.50"></text></g><g><title>`0x7FF97E69702C (72 samples, 0.02%)</title><rect x="5.0369%" y="101" width="0.0240%" height="15" fill="rgb(209,9,3)" fg:x="15108" fg:w="72"/><text x="5.2869%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (312 samples, 0.10%)</title><rect x="5.0736%" y="117" width="0.1040%" height="15" fill="rgb(230,59,30)" fg:x="15218" fg:w="312"/><text x="5.3236%" y="127.50"></text></g><g><title>`0x7FF97E69702C (312 samples, 0.10%)</title><rect x="5.0736%" y="101" width="0.1040%" height="15" fill="rgb(209,121,21)" fg:x="15218" fg:w="312"/><text x="5.3236%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (367 samples, 0.12%)</title><rect x="5.0612%" y="133" width="0.1224%" height="15" fill="rgb(220,109,13)" fg:x="15181" fg:w="367"/><text x="5.3112%" y="143.50"></text></g><g><title>`0x7FF97E69702C (158 samples, 0.05%)</title><rect x="5.7980%" y="85" width="0.0527%" height="15" fill="rgb(232,18,1)" fg:x="17391" fg:w="158"/><text x="6.0480%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (187 samples, 0.06%)</title><rect x="5.7897%" y="117" width="0.0623%" height="15" fill="rgb(215,41,42)" fg:x="17366" fg:w="187"/><text x="6.0397%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (173 samples, 0.06%)</title><rect x="5.7944%" y="101" width="0.0577%" height="15" fill="rgb(224,123,36)" fg:x="17380" fg:w="173"/><text x="6.0444%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (2,013 samples, 0.67%)</title><rect x="5.1836%" y="133" width="0.6711%" height="15" fill="rgb(240,125,3)" fg:x="15548" fg:w="2013"/><text x="5.4336%" y="143.50"></text></g><g><title>`0x7FF968D51324 (46 samples, 0.02%)</title><rect x="5.8924%" y="117" width="0.0153%" height="15" fill="rgb(205,98,50)" fg:x="17674" fg:w="46"/><text x="6.1424%" y="127.50"></text></g><g><title>`0x7FF968D51381 (50 samples, 0.02%)</title><rect x="5.9077%" y="117" width="0.0167%" height="15" fill="rgb(205,185,37)" fg:x="17720" fg:w="50"/><text x="6.1577%" y="127.50"></text></g><g><title>`0x7FF968D51388 (49 samples, 0.02%)</title><rect x="5.9244%" y="117" width="0.0163%" height="15" fill="rgb(238,207,15)" fg:x="17770" fg:w="49"/><text x="6.1744%" y="127.50"></text></g><g><title>`0x7FF968D5147F (36 samples, 0.01%)</title><rect x="5.9804%" y="117" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="17938" fg:w="36"/><text x="6.2304%" y="127.50"></text></g><g><title>`0x7FF968D5149D (35 samples, 0.01%)</title><rect x="6.0021%" y="117" width="0.0117%" height="15" fill="rgb(235,201,11)" fg:x="18003" fg:w="35"/><text x="6.2521%" y="127.50"></text></g><g><title>`0x7FF968D514E1 (46 samples, 0.02%)</title><rect x="6.0528%" y="117" width="0.0153%" height="15" fill="rgb(207,46,11)" fg:x="18155" fg:w="46"/><text x="6.3028%" y="127.50"></text></g><g><title>`0x7FF968D514EF (54 samples, 0.02%)</title><rect x="6.0698%" y="117" width="0.0180%" height="15" fill="rgb(241,35,35)" fg:x="18206" fg:w="54"/><text x="6.3198%" y="127.50"></text></g><g><title>`0x7FF968D514F6 (59 samples, 0.02%)</title><rect x="6.0878%" y="117" width="0.0197%" height="15" fill="rgb(243,32,47)" fg:x="18260" fg:w="59"/><text x="6.3378%" y="127.50"></text></g><g><title>`0x7FF968D514FA (38 samples, 0.01%)</title><rect x="6.1074%" y="117" width="0.0127%" height="15" fill="rgb(247,202,23)" fg:x="18319" fg:w="38"/><text x="6.3574%" y="127.50"></text></g><g><title>`0x7FF97E62CC9A (43 samples, 0.01%)</title><rect x="6.1278%" y="117" width="0.0143%" height="15" fill="rgb(219,102,11)" fg:x="18380" fg:w="43"/><text x="6.3778%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (925 samples, 0.31%)</title><rect x="5.8547%" y="133" width="0.3084%" height="15" fill="rgb(243,110,44)" fg:x="17561" fg:w="925"/><text x="6.1047%" y="143.50"></text></g><g><title>`0x7FF968D51324 (40 samples, 0.01%)</title><rect x="6.9189%" y="117" width="0.0133%" height="15" fill="rgb(222,74,54)" fg:x="20753" fg:w="40"/><text x="7.1689%" y="127.50"></text></g><g><title>`0x7FF968D51388 (56 samples, 0.02%)</title><rect x="6.9399%" y="117" width="0.0187%" height="15" fill="rgb(216,99,12)" fg:x="20816" fg:w="56"/><text x="7.1899%" y="127.50"></text></g><g><title>`0x7FF968D5146F (34 samples, 0.01%)</title><rect x="6.9593%" y="117" width="0.0113%" height="15" fill="rgb(226,22,26)" fg:x="20874" fg:w="34"/><text x="7.2093%" y="127.50"></text></g><g><title>`0x7FF968D514CC (58 samples, 0.02%)</title><rect x="6.9769%" y="117" width="0.0193%" height="15" fill="rgb(217,163,10)" fg:x="20927" fg:w="58"/><text x="7.2269%" y="127.50"></text></g><g><title>`0x7FF968D514EF (37 samples, 0.01%)</title><rect x="7.0129%" y="117" width="0.0123%" height="15" fill="rgb(213,25,53)" fg:x="21035" fg:w="37"/><text x="7.2629%" y="127.50"></text></g><g><title>`0x7FF968D514F6 (39 samples, 0.01%)</title><rect x="7.0253%" y="117" width="0.0130%" height="15" fill="rgb(252,105,26)" fg:x="21072" fg:w="39"/><text x="7.2753%" y="127.50"></text></g><g><title>`0x7FF97E69CC6F (73 samples, 0.02%)</title><rect x="7.1209%" y="101" width="0.0243%" height="15" fill="rgb(220,39,43)" fg:x="21359" fg:w="73"/><text x="7.3709%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (343 samples, 0.11%)</title><rect x="7.0609%" y="117" width="0.1144%" height="15" fill="rgb(229,68,48)" fg:x="21179" fg:w="343"/><text x="7.3109%" y="127.50"></text></g><g><title>`0x7FF97E69702C (317 samples, 0.11%)</title><rect x="7.2263%" y="85" width="0.1057%" height="15" fill="rgb(252,8,32)" fg:x="21675" fg:w="317"/><text x="7.4763%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (435 samples, 0.15%)</title><rect x="7.1893%" y="117" width="0.1450%" height="15" fill="rgb(223,20,43)" fg:x="21564" fg:w="435"/><text x="7.4393%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (365 samples, 0.12%)</title><rect x="7.2126%" y="101" width="0.1217%" height="15" fill="rgb(229,81,49)" fg:x="21634" fg:w="365"/><text x="7.4626%" y="111.50"></text></g><g><title>`0x7FF97E69CB70 (30 samples, 0.01%)</title><rect x="8.2828%" y="85" width="0.0100%" height="15" fill="rgb(236,28,36)" fg:x="24844" fg:w="30"/><text x="8.5328%" y="95.50"></text></g><g><title>`0x7FF97E62AFF1 (107 samples, 0.04%)</title><rect x="8.2715%" y="101" width="0.0357%" height="15" fill="rgb(249,185,26)" fg:x="24810" fg:w="107"/><text x="8.5215%" y="111.50"></text></g><g><title>`0x7FF97E696E23 (148 samples, 0.05%)</title><rect x="8.3432%" y="69" width="0.0493%" height="15" fill="rgb(249,174,33)" fg:x="25025" fg:w="148"/><text x="8.5932%" y="79.50"></text></g><g><title>`0x7FF97E69702C (239 samples, 0.08%)</title><rect x="8.4002%" y="69" width="0.0797%" height="15" fill="rgb(233,201,37)" fg:x="25196" fg:w="239"/><text x="8.6502%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (420 samples, 0.14%)</title><rect x="8.3428%" y="85" width="0.1400%" height="15" fill="rgb(221,78,26)" fg:x="25024" fg:w="420"/><text x="8.5928%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (508 samples, 0.17%)</title><rect x="8.3142%" y="101" width="0.1694%" height="15" fill="rgb(250,127,30)" fg:x="24938" fg:w="508"/><text x="8.5642%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (3,455 samples, 1.15%)</title><rect x="7.3357%" y="117" width="1.1519%" height="15" fill="rgb(230,49,44)" fg:x="22003" fg:w="3455"/><text x="7.5857%" y="127.50"></text></g><g><title>`0x7FF968D51324 (97 samples, 0.03%)</title><rect x="8.6252%" y="101" width="0.0323%" height="15" fill="rgb(229,67,23)" fg:x="25871" fg:w="97"/><text x="8.8752%" y="111.50"></text></g><g><title>`0x7FF968D51381 (114 samples, 0.04%)</title><rect x="8.6609%" y="101" width="0.0380%" height="15" fill="rgb(249,83,47)" fg:x="25978" fg:w="114"/><text x="8.9109%" y="111.50"></text></g><g><title>`0x7FF968D51388 (133 samples, 0.04%)</title><rect x="8.6989%" y="101" width="0.0443%" height="15" fill="rgb(215,43,3)" fg:x="26092" fg:w="133"/><text x="8.9489%" y="111.50"></text></g><g><title>`0x7FF968D5146F (32 samples, 0.01%)</title><rect x="8.7436%" y="101" width="0.0107%" height="15" fill="rgb(238,154,13)" fg:x="26226" fg:w="32"/><text x="8.9936%" y="111.50"></text></g><g><title>`0x7FF968D5147F (44 samples, 0.01%)</title><rect x="8.7576%" y="101" width="0.0147%" height="15" fill="rgb(219,56,2)" fg:x="26268" fg:w="44"/><text x="9.0076%" y="111.50"></text></g><g><title>`0x7FF968D514C5 (39 samples, 0.01%)</title><rect x="8.7966%" y="101" width="0.0130%" height="15" fill="rgb(233,0,4)" fg:x="26385" fg:w="39"/><text x="9.0466%" y="111.50"></text></g><g><title>`0x7FF968D514CC (122 samples, 0.04%)</title><rect x="8.8096%" y="101" width="0.0407%" height="15" fill="rgb(235,30,7)" fg:x="26424" fg:w="122"/><text x="9.0596%" y="111.50"></text></g><g><title>`0x7FF968D514D3 (115 samples, 0.04%)</title><rect x="8.8503%" y="101" width="0.0383%" height="15" fill="rgb(250,79,13)" fg:x="26546" fg:w="115"/><text x="9.1003%" y="111.50"></text></g><g><title>`0x7FF968D514E1 (148 samples, 0.05%)</title><rect x="8.8936%" y="101" width="0.0493%" height="15" fill="rgb(211,146,34)" fg:x="26676" fg:w="148"/><text x="9.1436%" y="111.50"></text></g><g><title>`0x7FF968D514EF (144 samples, 0.05%)</title><rect x="8.9509%" y="101" width="0.0480%" height="15" fill="rgb(228,22,38)" fg:x="26848" fg:w="144"/><text x="9.2009%" y="111.50"></text></g><g><title>`0x7FF968D514F6 (84 samples, 0.03%)</title><rect x="8.9990%" y="101" width="0.0280%" height="15" fill="rgb(235,168,5)" fg:x="26992" fg:w="84"/><text x="9.2490%" y="111.50"></text></g><g><title>`0x7FF968D514FA (54 samples, 0.02%)</title><rect x="9.0270%" y="101" width="0.0180%" height="15" fill="rgb(221,155,16)" fg:x="27076" fg:w="54"/><text x="9.2770%" y="111.50"></text></g><g><title>`0x7FF97E62CC9A (316 samples, 0.11%)</title><rect x="9.0870%" y="101" width="0.1054%" height="15" fill="rgb(215,215,53)" fg:x="27256" fg:w="316"/><text x="9.3370%" y="111.50"></text></g><g><title>neural_network.exe`memcpy (67 samples, 0.02%)</title><rect x="9.2020%" y="101" width="0.0223%" height="15" fill="rgb(223,4,10)" fg:x="27601" fg:w="67"/><text x="9.4520%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (2,234 samples, 0.74%)</title><rect x="8.4875%" y="117" width="0.7448%" height="15" fill="rgb(234,103,6)" fg:x="25458" fg:w="2234"/><text x="8.7375%" y="127.50"></text></g><g><title>`0x7FF97E696E23 (123 samples, 0.04%)</title><rect x="56.9106%" y="69" width="0.0410%" height="15" fill="rgb(227,97,0)" fg:x="170701" fg:w="123"/><text x="57.1606%" y="79.50"></text></g><g><title>`0x7FF97E69702C (312 samples, 0.10%)</title><rect x="56.9573%" y="69" width="0.1040%" height="15" fill="rgb(234,150,53)" fg:x="170841" fg:w="312"/><text x="57.2073%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (466 samples, 0.16%)</title><rect x="56.9106%" y="85" width="0.1554%" height="15" fill="rgb(228,201,54)" fg:x="170701" fg:w="466"/><text x="57.1606%" y="95.50"></text></g><g><title>`0x7FF97E62DA96 (39 samples, 0.01%)</title><rect x="57.0706%" y="85" width="0.0130%" height="15" fill="rgb(222,22,37)" fg:x="171181" fg:w="39"/><text x="57.3206%" y="95.50"></text></g><g><title>`0x7FF97E653704 (84 samples, 0.03%)</title><rect x="57.1009%" y="53" width="0.0280%" height="15" fill="rgb(237,53,32)" fg:x="171272" fg:w="84"/><text x="57.3509%" y="63.50"></text></g><g><title>`0x7FF97E62D239 (81 samples, 0.03%)</title><rect x="57.1019%" y="37" width="0.0270%" height="15" fill="rgb(233,25,53)" fg:x="171275" fg:w="81"/><text x="57.3519%" y="47.50"></text></g><g><title>`0x7FF97E653618 (91 samples, 0.03%)</title><rect x="57.0989%" y="69" width="0.0303%" height="15" fill="rgb(210,40,34)" fg:x="171266" fg:w="91"/><text x="57.3489%" y="79.50"></text></g><g><title>`0x7FF97E62DB41 (120 samples, 0.04%)</title><rect x="57.0896%" y="85" width="0.0400%" height="15" fill="rgb(241,220,44)" fg:x="171238" fg:w="120"/><text x="57.3396%" y="95.50"></text></g><g><title>`0x7FF97E631921 (84 samples, 0.03%)</title><rect x="57.1330%" y="69" width="0.0280%" height="15" fill="rgb(235,28,35)" fg:x="171368" fg:w="84"/><text x="57.3830%" y="79.50"></text></g><g><title>`0x7FF97E631C86 (30 samples, 0.01%)</title><rect x="57.1926%" y="53" width="0.0100%" height="15" fill="rgb(210,56,17)" fg:x="171547" fg:w="30"/><text x="57.4426%" y="63.50"></text></g><g><title>`0x7FF97E62DBBF (216 samples, 0.07%)</title><rect x="57.1320%" y="85" width="0.0720%" height="15" fill="rgb(224,130,29)" fg:x="171365" fg:w="216"/><text x="57.3820%" y="95.50"></text></g><g><title>`0x7FF97E631B1F (34 samples, 0.01%)</title><rect x="57.1926%" y="69" width="0.0113%" height="15" fill="rgb(235,212,8)" fg:x="171547" fg:w="34"/><text x="57.4426%" y="79.50"></text></g><g><title>`0x7FF97E62DBDD (37 samples, 0.01%)</title><rect x="57.2040%" y="85" width="0.0123%" height="15" fill="rgb(223,33,50)" fg:x="171581" fg:w="37"/><text x="57.4540%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (997 samples, 0.33%)</title><rect x="56.8862%" y="101" width="0.3324%" height="15" fill="rgb(219,149,13)" fg:x="170628" fg:w="997"/><text x="57.1362%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17h98e4a7673af62caaE.llvm.6972577778651885175 (143,957 samples, 47.99%)</title><rect x="9.2323%" y="117" width="47.9943%" height="15" fill="rgb(250,156,29)" fg:x="27692" fg:w="143957"/><text x="9.4823%" y="127.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17h..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (8,342 samples, 2.78%)</title><rect x="57.2266%" y="117" width="2.7812%" height="15" fill="rgb(216,193,19)" fg:x="171649" fg:w="8342"/><text x="57.4766%" y="127.50">ne..</text></g><g><title>`0x7FF97E696E23 (37 samples, 0.01%)</title><rect x="61.7308%" y="69" width="0.0123%" height="15" fill="rgb(216,135,14)" fg:x="185159" fg:w="37"/><text x="61.9808%" y="79.50"></text></g><g><title>`0x7FF97E69702C (397 samples, 0.13%)</title><rect x="61.7481%" y="69" width="0.1324%" height="15" fill="rgb(241,47,5)" fg:x="185211" fg:w="397"/><text x="61.9981%" y="79.50"></text></g><g><title>`0x7FF97E62CC9A (512 samples, 0.17%)</title><rect x="61.7111%" y="101" width="0.1707%" height="15" fill="rgb(233,42,35)" fg:x="185100" fg:w="512"/><text x="61.9611%" y="111.50"></text></g><g><title>`0x7FF97E62D7B9 (453 samples, 0.15%)</title><rect x="61.7308%" y="85" width="0.1510%" height="15" fill="rgb(231,13,6)" fg:x="185159" fg:w="453"/><text x="61.9808%" y="95.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (5,631 samples, 1.88%)</title><rect x="60.0078%" y="117" width="1.8773%" height="15" fill="rgb(207,181,40)" fg:x="179991" fg:w="5631"/><text x="60.2578%" y="127.50">n..</text></g><g><title>neural_network.exe`memcpy (30 samples, 0.01%)</title><rect x="61.8851%" y="117" width="0.0100%" height="15" fill="rgb(254,173,49)" fg:x="185622" fg:w="30"/><text x="62.1351%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (167,179 samples, 55.74%)</title><rect x="6.1631%" y="133" width="55.7364%" height="15" fill="rgb(221,1,38)" fg:x="18486" fg:w="167179"/><text x="6.4131%" y="143.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (4,102 samples, 1.37%)</title><rect x="61.8995%" y="133" width="1.3676%" height="15" fill="rgb(206,124,46)" fg:x="185665" fg:w="4102"/><text x="62.1495%" y="143.50"></text></g><g><title>`0x7FF97E69702C (239 samples, 0.08%)</title><rect x="64.2826%" y="85" width="0.0797%" height="15" fill="rgb(249,21,11)" fg:x="192813" fg:w="239"/><text x="64.5326%" y="95.50"></text></g><g><title>`0x7FF97E62F956 (241 samples, 0.08%)</title><rect x="64.2822%" y="101" width="0.0803%" height="15" fill="rgb(222,201,40)" fg:x="192812" fg:w="241"/><text x="64.5322%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (313 samples, 0.10%)</title><rect x="64.2642%" y="117" width="0.1044%" height="15" fill="rgb(235,61,29)" fg:x="192758" fg:w="313"/><text x="64.5142%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (3,305 samples, 1.10%)</title><rect x="63.2671%" y="133" width="1.1019%" height="15" fill="rgb(219,207,3)" fg:x="189767" fg:w="3305"/><text x="63.5171%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (179,089 samples, 59.71%)</title><rect x="4.6642%" y="149" width="59.7071%" height="15" fill="rgb(222,56,46)" fg:x="13990" fg:w="179089"/><text x="4.9142%" y="159.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (2,356 samples, 0.79%)</title><rect x="64.3713%" y="149" width="0.7855%" height="15" fill="rgb(239,76,54)" fg:x="193079" fg:w="2356"/><text x="64.6213%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (270 samples, 0.09%)</title><rect x="65.6592%" y="117" width="0.0900%" height="15" fill="rgb(231,124,27)" fg:x="196942" fg:w="270"/><text x="65.9092%" y="127.50"></text></g><g><title>`0x7FF97E69702C (270 samples, 0.09%)</title><rect x="65.6592%" y="101" width="0.0900%" height="15" fill="rgb(249,195,6)" fg:x="196942" fg:w="270"/><text x="65.9092%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (1,782 samples, 0.59%)</title><rect x="65.1567%" y="149" width="0.5941%" height="15" fill="rgb(237,174,47)" fg:x="195435" fg:w="1782"/><text x="65.4067%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (285 samples, 0.10%)</title><rect x="65.6558%" y="133" width="0.0950%" height="15" fill="rgb(206,201,31)" fg:x="196932" fg:w="285"/><text x="65.9058%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (186,005 samples, 62.01%)</title><rect x="3.7397%" y="165" width="62.0128%" height="15" fill="rgb(231,57,52)" fg:x="11217" fg:w="186005"/><text x="3.9897%" y="175.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llv..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (1,366 samples, 0.46%)</title><rect x="65.7525%" y="165" width="0.4554%" height="15" fill="rgb(248,177,22)" fg:x="197222" fg:w="1366"/><text x="66.0025%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (1,768 samples, 0.59%)</title><rect x="66.2079%" y="165" width="0.5894%" height="15" fill="rgb(215,211,37)" fg:x="198588" fg:w="1768"/><text x="66.4579%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (33 samples, 0.01%)</title><rect x="66.7864%" y="149" width="0.0110%" height="15" fill="rgb(241,128,51)" fg:x="200323" fg:w="33"/><text x="67.0364%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (192,542 samples, 64.19%)</title><rect x="2.6061%" y="181" width="64.1922%" height="15" fill="rgb(227,165,31)" fg:x="7817" fg:w="192542"/><text x="2.8561%" y="191.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (833 samples, 0.28%)</title><rect x="66.7984%" y="181" width="0.2777%" height="15" fill="rgb(228,167,24)" fg:x="200359" fg:w="833"/><text x="67.0484%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (196,803 samples, 65.61%)</title><rect x="1.4639%" y="197" width="65.6128%" height="15" fill="rgb(228,143,12)" fg:x="4391" fg:w="196803"/><text x="1.7139%" y="207.50">neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972..</text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$19batch_backpropagate17hbfd05dafd9dbc411E (196,823 samples, 65.62%)</title><rect x="1.4606%" y="213" width="65.6195%" height="15" fill="rgb(249,149,8)" fg:x="4381" fg:w="196823"/><text x="1.7106%" y="223.50">neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..laye..</text></g><g><title>`0x7FF968D514E8 (44 samples, 0.01%)</title><rect x="67.1658%" y="181" width="0.0147%" height="15" fill="rgb(243,35,44)" fg:x="201461" fg:w="44"/><text x="67.4158%" y="191.50"></text></g><g><title>`0x7FF968D514EF (30 samples, 0.01%)</title><rect x="67.1804%" y="181" width="0.0100%" height="15" fill="rgb(246,89,9)" fg:x="201505" fg:w="30"/><text x="67.4304%" y="191.50"></text></g><g><title>`0x7FF97E62A10C (249 samples, 0.08%)</title><rect x="67.1908%" y="149" width="0.0830%" height="15" fill="rgb(233,213,13)" fg:x="201536" fg:w="249"/><text x="67.4408%" y="159.50"></text></g><g><title>`0x7FF97E636AC6 (249 samples, 0.08%)</title><rect x="67.1908%" y="133" width="0.0830%" height="15" fill="rgb(233,141,41)" fg:x="201536" fg:w="249"/><text x="67.4408%" y="143.50"></text></g><g><title>`0x7FF97E690364 (249 samples, 0.08%)</title><rect x="67.1908%" y="117" width="0.0830%" height="15" fill="rgb(239,167,4)" fg:x="201536" fg:w="249"/><text x="67.4408%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (250 samples, 0.08%)</title><rect x="67.1908%" y="181" width="0.0833%" height="15" fill="rgb(209,217,16)" fg:x="201536" fg:w="250"/><text x="67.4408%" y="191.50"></text></g><g><title>`0x7FF97E62C324 (250 samples, 0.08%)</title><rect x="67.1908%" y="165" width="0.0833%" height="15" fill="rgb(219,88,35)" fg:x="201536" fg:w="250"/><text x="67.4408%" y="175.50"></text></g><g><title>`0x7FF968D51331 (40 samples, 0.01%)</title><rect x="67.4211%" y="165" width="0.0133%" height="15" fill="rgb(220,193,23)" fg:x="202227" fg:w="40"/><text x="67.6711%" y="175.50"></text></g><g><title>`0x7FF97E62AFF1 (50 samples, 0.02%)</title><rect x="67.4471%" y="165" width="0.0167%" height="15" fill="rgb(230,90,52)" fg:x="202305" fg:w="50"/><text x="67.6971%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (50 samples, 0.02%)</title><rect x="67.4471%" y="149" width="0.0167%" height="15" fill="rgb(252,106,19)" fg:x="202305" fg:w="50"/><text x="67.6971%" y="159.50"></text></g><g><title>`0x7FF97E62A10C (50 samples, 0.02%)</title><rect x="67.4471%" y="133" width="0.0167%" height="15" fill="rgb(206,74,20)" fg:x="202305" fg:w="50"/><text x="67.6971%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (50 samples, 0.02%)</title><rect x="67.4471%" y="117" width="0.0167%" height="15" fill="rgb(230,138,44)" fg:x="202305" fg:w="50"/><text x="67.6971%" y="127.50"></text></g><g><title>`0x7FF97E690364 (50 samples, 0.02%)</title><rect x="67.4471%" y="101" width="0.0167%" height="15" fill="rgb(235,182,43)" fg:x="202305" fg:w="50"/><text x="67.6971%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (575 samples, 0.19%)</title><rect x="67.2751%" y="181" width="0.1917%" height="15" fill="rgb(242,16,51)" fg:x="201789" fg:w="575"/><text x="67.5251%" y="191.50"></text></g><g><title>`0x7FF968D5137D (56 samples, 0.02%)</title><rect x="67.4678%" y="165" width="0.0187%" height="15" fill="rgb(248,9,4)" fg:x="202367" fg:w="56"/><text x="67.7178%" y="175.50"></text></g><g><title>`0x7FF968D51381 (42 samples, 0.01%)</title><rect x="67.4865%" y="165" width="0.0140%" height="15" fill="rgb(210,31,22)" fg:x="202423" fg:w="42"/><text x="67.7365%" y="175.50"></text></g><g><title>`0x7FF968D513D9 (32 samples, 0.01%)</title><rect x="67.5095%" y="165" width="0.0107%" height="15" fill="rgb(239,54,39)" fg:x="202492" fg:w="32"/><text x="67.7595%" y="175.50"></text></g><g><title>`0x7FF968D513E3 (31 samples, 0.01%)</title><rect x="67.5205%" y="165" width="0.0103%" height="15" fill="rgb(230,99,41)" fg:x="202525" fg:w="31"/><text x="67.7705%" y="175.50"></text></g><g><title>`0x7FF968D51406 (48 samples, 0.02%)</title><rect x="67.5348%" y="165" width="0.0160%" height="15" fill="rgb(253,106,12)" fg:x="202568" fg:w="48"/><text x="67.7848%" y="175.50"></text></g><g><title>`0x7FF968D51416 (30 samples, 0.01%)</title><rect x="67.5512%" y="165" width="0.0100%" height="15" fill="rgb(213,46,41)" fg:x="202617" fg:w="30"/><text x="67.8012%" y="175.50"></text></g><g><title>`0x7FF968D514E8 (140 samples, 0.05%)</title><rect x="67.5735%" y="165" width="0.0467%" height="15" fill="rgb(215,133,35)" fg:x="202684" fg:w="140"/><text x="67.8235%" y="175.50"></text></g><g><title>`0x7FF968D514EF (91 samples, 0.03%)</title><rect x="67.6202%" y="165" width="0.0303%" height="15" fill="rgb(213,28,5)" fg:x="202824" fg:w="91"/><text x="67.8702%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (562 samples, 0.19%)</title><rect x="67.4668%" y="181" width="0.1874%" height="15" fill="rgb(215,77,49)" fg:x="202364" fg:w="562"/><text x="67.7168%" y="191.50"></text></g><g><title>`0x7FF968D514E8 (119 samples, 0.04%)</title><rect x="67.7429%" y="165" width="0.0397%" height="15" fill="rgb(248,100,22)" fg:x="203192" fg:w="119"/><text x="67.9929%" y="175.50"></text></g><g><title>`0x7FF968D514EF (53 samples, 0.02%)</title><rect x="67.7825%" y="165" width="0.0177%" height="15" fill="rgb(208,67,9)" fg:x="203311" fg:w="53"/><text x="68.0325%" y="175.50"></text></g><g><title>`0x7FF97E629C08 (46 samples, 0.02%)</title><rect x="67.8022%" y="133" width="0.0153%" height="15" fill="rgb(219,133,21)" fg:x="203370" fg:w="46"/><text x="68.0522%" y="143.50"></text></g><g><title>`0x7FF97E634FFB (41 samples, 0.01%)</title><rect x="67.8039%" y="117" width="0.0137%" height="15" fill="rgb(246,46,29)" fg:x="203375" fg:w="41"/><text x="68.0539%" y="127.50"></text></g><g><title>`0x7FF97E6368DA (39 samples, 0.01%)</title><rect x="67.8045%" y="101" width="0.0130%" height="15" fill="rgb(246,185,52)" fg:x="203377" fg:w="39"/><text x="68.0545%" y="111.50"></text></g><g><title>`0x7FF97E636988 (39 samples, 0.01%)</title><rect x="67.8045%" y="85" width="0.0130%" height="15" fill="rgb(252,136,11)" fg:x="203377" fg:w="39"/><text x="68.0545%" y="95.50"></text></g><g><title>`0x7FF97E636AC6 (39 samples, 0.01%)</title><rect x="67.8045%" y="69" width="0.0130%" height="15" fill="rgb(219,138,53)" fg:x="203377" fg:w="39"/><text x="68.0545%" y="79.50"></text></g><g><title>`0x7FF97E690364 (39 samples, 0.01%)</title><rect x="67.8045%" y="53" width="0.0130%" height="15" fill="rgb(211,51,23)" fg:x="203377" fg:w="39"/><text x="68.0545%" y="63.50"></text></g><g><title>`0x7FF97E62A10C (214 samples, 0.07%)</title><rect x="67.8189%" y="133" width="0.0713%" height="15" fill="rgb(247,221,28)" fg:x="203420" fg:w="214"/><text x="68.0689%" y="143.50"></text></g><g><title>`0x7FF97E636AC6 (214 samples, 0.07%)</title><rect x="67.8189%" y="117" width="0.0713%" height="15" fill="rgb(251,222,45)" fg:x="203420" fg:w="214"/><text x="68.0689%" y="127.50"></text></g><g><title>`0x7FF97E690364 (214 samples, 0.07%)</title><rect x="67.8189%" y="101" width="0.0713%" height="15" fill="rgb(217,162,53)" fg:x="203420" fg:w="214"/><text x="68.0689%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (267 samples, 0.09%)</title><rect x="67.8019%" y="165" width="0.0890%" height="15" fill="rgb(229,93,14)" fg:x="203369" fg:w="267"/><text x="68.0519%" y="175.50"></text></g><g><title>`0x7FF97E62C324 (267 samples, 0.09%)</title><rect x="67.8019%" y="149" width="0.0890%" height="15" fill="rgb(209,67,49)" fg:x="203369" fg:w="267"/><text x="68.0519%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (63 samples, 0.02%)</title><rect x="67.8912%" y="149" width="0.0210%" height="15" fill="rgb(213,87,29)" fg:x="203637" fg:w="63"/><text x="68.1412%" y="159.50"></text></g><g><title>`0x7FF97E69702C (63 samples, 0.02%)</title><rect x="67.8912%" y="133" width="0.0210%" height="15" fill="rgb(205,151,52)" fg:x="203637" fg:w="63"/><text x="68.1412%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (75 samples, 0.03%)</title><rect x="67.8909%" y="165" width="0.0250%" height="15" fill="rgb(253,215,39)" fg:x="203636" fg:w="75"/><text x="68.1409%" y="175.50"></text></g><g><title>`0x7FF97E62F956 (111 samples, 0.04%)</title><rect x="68.0222%" y="133" width="0.0370%" height="15" fill="rgb(221,220,41)" fg:x="204030" fg:w="111"/><text x="68.2722%" y="143.50"></text></g><g><title>`0x7FF97E69702C (111 samples, 0.04%)</title><rect x="68.0222%" y="117" width="0.0370%" height="15" fill="rgb(218,133,21)" fg:x="204030" fg:w="111"/><text x="68.2722%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (431 samples, 0.14%)</title><rect x="67.9159%" y="165" width="0.1437%" height="15" fill="rgb(221,193,43)" fg:x="203711" fg:w="431"/><text x="68.1659%" y="175.50"></text></g><g><title>`0x7FF97E62D239 (117 samples, 0.04%)</title><rect x="68.0206%" y="149" width="0.0390%" height="15" fill="rgb(240,128,52)" fg:x="204025" fg:w="117"/><text x="68.2706%" y="159.50"></text></g><g><title>`0x7FF968D513EC (35 samples, 0.01%)</title><rect x="68.0923%" y="149" width="0.0117%" height="15" fill="rgb(253,114,12)" fg:x="204240" fg:w="35"/><text x="68.3423%" y="159.50"></text></g><g><title>`0x7FF968D51416 (36 samples, 0.01%)</title><rect x="68.1163%" y="149" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="204312" fg:w="36"/><text x="68.3663%" y="159.50"></text></g><g><title>`0x7FF968D514E8 (118 samples, 0.04%)</title><rect x="68.1646%" y="149" width="0.0393%" height="15" fill="rgb(248,225,23)" fg:x="204457" fg:w="118"/><text x="68.4146%" y="159.50"></text></g><g><title>`0x7FF968D514EF (147 samples, 0.05%)</title><rect x="68.2039%" y="149" width="0.0490%" height="15" fill="rgb(250,108,0)" fg:x="204575" fg:w="147"/><text x="68.4539%" y="159.50"></text></g><g><title>`0x7FF968D514F6 (47 samples, 0.02%)</title><rect x="68.2530%" y="149" width="0.0157%" height="15" fill="rgb(228,208,7)" fg:x="204722" fg:w="47"/><text x="68.5030%" y="159.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (654 samples, 0.22%)</title><rect x="68.0596%" y="165" width="0.2180%" height="15" fill="rgb(244,45,10)" fg:x="204142" fg:w="654"/><text x="68.3096%" y="175.50"></text></g><g><title>`0x7FF97E629C08 (135 samples, 0.05%)</title><rect x="68.3576%" y="117" width="0.0450%" height="15" fill="rgb(207,125,25)" fg:x="205036" fg:w="135"/><text x="68.6076%" y="127.50"></text></g><g><title>`0x7FF97E634FFB (113 samples, 0.04%)</title><rect x="68.3650%" y="101" width="0.0377%" height="15" fill="rgb(210,195,18)" fg:x="205058" fg:w="113"/><text x="68.6150%" y="111.50"></text></g><g><title>`0x7FF97E6368DA (111 samples, 0.04%)</title><rect x="68.3656%" y="85" width="0.0370%" height="15" fill="rgb(249,80,12)" fg:x="205060" fg:w="111"/><text x="68.6156%" y="95.50"></text></g><g><title>`0x7FF97E636988 (111 samples, 0.04%)</title><rect x="68.3656%" y="69" width="0.0370%" height="15" fill="rgb(221,65,9)" fg:x="205060" fg:w="111"/><text x="68.6156%" y="79.50"></text></g><g><title>`0x7FF97E636AC6 (110 samples, 0.04%)</title><rect x="68.3660%" y="53" width="0.0367%" height="15" fill="rgb(235,49,36)" fg:x="205061" fg:w="110"/><text x="68.6160%" y="63.50"></text></g><g><title>`0x7FF97E690364 (110 samples, 0.04%)</title><rect x="68.3660%" y="37" width="0.0367%" height="15" fill="rgb(225,32,20)" fg:x="205061" fg:w="110"/><text x="68.6160%" y="47.50"></text></g><g><title>`0x7FF97E62AFF1 (154 samples, 0.05%)</title><rect x="68.3550%" y="149" width="0.0513%" height="15" fill="rgb(215,141,46)" fg:x="205028" fg:w="154"/><text x="68.6050%" y="159.50"></text></g><g><title>`0x7FF97E62C324 (154 samples, 0.05%)</title><rect x="68.3550%" y="133" width="0.0513%" height="15" fill="rgb(250,160,47)" fg:x="205028" fg:w="154"/><text x="68.6050%" y="143.50"></text></g><g><title>`0x7FF97E69702C (194 samples, 0.06%)</title><rect x="68.4080%" y="117" width="0.0647%" height="15" fill="rgb(216,222,40)" fg:x="205187" fg:w="194"/><text x="68.6580%" y="127.50"></text></g><g><title>`0x7FF97E62F956 (195 samples, 0.07%)</title><rect x="68.4080%" y="133" width="0.0650%" height="15" fill="rgb(234,217,39)" fg:x="205187" fg:w="195"/><text x="68.6580%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (202 samples, 0.07%)</title><rect x="68.4066%" y="149" width="0.0673%" height="15" fill="rgb(207,178,40)" fg:x="205183" fg:w="202"/><text x="68.6566%" y="159.50"></text></g><g><title>`0x7FF97E69702C (76 samples, 0.03%)</title><rect x="68.6367%" y="101" width="0.0253%" height="15" fill="rgb(221,136,13)" fg:x="205873" fg:w="76"/><text x="68.8867%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (77 samples, 0.03%)</title><rect x="68.6367%" y="117" width="0.0257%" height="15" fill="rgb(249,199,10)" fg:x="205873" fg:w="77"/><text x="68.8867%" y="127.50"></text></g><g><title>neural_network.exe`Unknown (569 samples, 0.19%)</title><rect x="68.4740%" y="149" width="0.1897%" height="15" fill="rgb(249,222,13)" fg:x="205385" fg:w="569"/><text x="68.7240%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (92 samples, 0.03%)</title><rect x="68.6330%" y="133" width="0.0307%" height="15" fill="rgb(244,185,38)" fg:x="205862" fg:w="92"/><text x="68.8830%" y="143.50"></text></g><g><title>`0x7FF968D514E8 (76 samples, 0.03%)</title><rect x="68.7560%" y="133" width="0.0253%" height="15" fill="rgb(236,202,9)" fg:x="206231" fg:w="76"/><text x="69.0060%" y="143.50"></text></g><g><title>`0x7FF968D514EF (151 samples, 0.05%)</title><rect x="68.7814%" y="133" width="0.0503%" height="15" fill="rgb(250,229,37)" fg:x="206307" fg:w="151"/><text x="69.0314%" y="143.50"></text></g><g><title>`0x7FF968D514F6 (39 samples, 0.01%)</title><rect x="68.8317%" y="133" width="0.0130%" height="15" fill="rgb(206,174,23)" fg:x="206458" fg:w="39"/><text x="69.0817%" y="143.50"></text></g><g><title>`0x7FF97E62D239 (43 samples, 0.01%)</title><rect x="68.8487%" y="133" width="0.0143%" height="15" fill="rgb(211,33,43)" fg:x="206509" fg:w="43"/><text x="69.0987%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (608 samples, 0.20%)</title><rect x="68.6637%" y="149" width="0.2027%" height="15" fill="rgb(245,58,50)" fg:x="205954" fg:w="608"/><text x="68.9137%" y="159.50"></text></g><g><title>`0x7FF97E629C08 (48 samples, 0.02%)</title><rect x="69.0301%" y="101" width="0.0160%" height="15" fill="rgb(244,68,36)" fg:x="207053" fg:w="48"/><text x="69.2801%" y="111.50"></text></g><g><title>`0x7FF97E62C324 (58 samples, 0.02%)</title><rect x="69.0278%" y="117" width="0.0193%" height="15" fill="rgb(232,229,15)" fg:x="207046" fg:w="58"/><text x="69.2778%" y="127.50"></text></g><g><title>`0x7FF97E62AFF1 (113 samples, 0.04%)</title><rect x="69.0238%" y="133" width="0.0377%" height="15" fill="rgb(254,30,23)" fg:x="207034" fg:w="113"/><text x="69.2738%" y="143.50"></text></g><g><title>`0x7FF97E69702C (34 samples, 0.01%)</title><rect x="69.0648%" y="101" width="0.0113%" height="15" fill="rgb(235,160,14)" fg:x="207157" fg:w="34"/><text x="69.3148%" y="111.50"></text></g><g><title>`0x7FF97E62CC9A (42 samples, 0.01%)</title><rect x="69.0624%" y="133" width="0.0140%" height="15" fill="rgb(212,155,44)" fg:x="207150" fg:w="42"/><text x="69.3124%" y="143.50"></text></g><g><title>`0x7FF97E62D7B9 (38 samples, 0.01%)</title><rect x="69.0638%" y="117" width="0.0127%" height="15" fill="rgb(226,2,50)" fg:x="207154" fg:w="38"/><text x="69.3138%" y="127.50"></text></g><g><title>`0x7FF97E69702C (227 samples, 0.08%)</title><rect x="69.0848%" y="101" width="0.0757%" height="15" fill="rgb(234,177,6)" fg:x="207217" fg:w="227"/><text x="69.3348%" y="111.50"></text></g><g><title>`0x7FF97E62F956 (228 samples, 0.08%)</title><rect x="69.0848%" y="117" width="0.0760%" height="15" fill="rgb(217,24,9)" fg:x="207217" fg:w="228"/><text x="69.3348%" y="127.50"></text></g><g><title>`0x7FF97E62D239 (261 samples, 0.09%)</title><rect x="69.0768%" y="133" width="0.0870%" height="15" fill="rgb(220,13,46)" fg:x="207193" fg:w="261"/><text x="69.3268%" y="143.50"></text></g><g><title>`0x7FF97E62CC9A (92 samples, 0.03%)</title><rect x="69.4445%" y="117" width="0.0307%" height="15" fill="rgb(239,221,27)" fg:x="208296" fg:w="92"/><text x="69.6945%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (89 samples, 0.03%)</title><rect x="69.4455%" y="101" width="0.0297%" height="15" fill="rgb(222,198,25)" fg:x="208299" fg:w="89"/><text x="69.6955%" y="111.50"></text></g><g><title>`0x7FF97E69702C (83 samples, 0.03%)</title><rect x="69.4475%" y="85" width="0.0277%" height="15" fill="rgb(211,99,13)" fg:x="208305" fg:w="83"/><text x="69.6975%" y="95.50"></text></g><g><title>neural_network.exe`Unknown (935 samples, 0.31%)</title><rect x="69.1638%" y="133" width="0.3117%" height="15" fill="rgb(232,111,31)" fg:x="207454" fg:w="935"/><text x="69.4138%" y="143.50"></text></g><g><title>`0x7FF968D51388 (30 samples, 0.01%)</title><rect x="69.5125%" y="117" width="0.0100%" height="15" fill="rgb(245,82,37)" fg:x="208500" fg:w="30"/><text x="69.7625%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (479 samples, 0.16%)</title><rect x="69.4755%" y="133" width="0.1597%" height="15" fill="rgb(227,149,46)" fg:x="208389" fg:w="479"/><text x="69.7255%" y="143.50"></text></g><g><title>`0x7FF968D514CC (39 samples, 0.01%)</title><rect x="70.0456%" y="117" width="0.0130%" height="15" fill="rgb(218,36,50)" fg:x="210099" fg:w="39"/><text x="70.2956%" y="127.50"></text></g><g><title>`0x7FF968D514F6 (38 samples, 0.01%)</title><rect x="70.0759%" y="117" width="0.0127%" height="15" fill="rgb(226,80,48)" fg:x="210190" fg:w="38"/><text x="70.3259%" y="127.50"></text></g><g><title>`0x7FF97E69CC6F (31 samples, 0.01%)</title><rect x="70.1296%" y="101" width="0.0103%" height="15" fill="rgb(238,224,15)" fg:x="210351" fg:w="31"/><text x="70.3796%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (176 samples, 0.06%)</title><rect x="70.0993%" y="117" width="0.0587%" height="15" fill="rgb(241,136,10)" fg:x="210260" fg:w="176"/><text x="70.3493%" y="127.50"></text></g><g><title>`0x7FF97E69702C (146 samples, 0.05%)</title><rect x="70.1763%" y="85" width="0.0487%" height="15" fill="rgb(208,32,45)" fg:x="210491" fg:w="146"/><text x="70.4263%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (190 samples, 0.06%)</title><rect x="70.1623%" y="117" width="0.0633%" height="15" fill="rgb(207,135,9)" fg:x="210449" fg:w="190"/><text x="70.4123%" y="127.50"></text></g><g><title>`0x7FF97E62D7B9 (160 samples, 0.05%)</title><rect x="70.1723%" y="101" width="0.0533%" height="15" fill="rgb(206,86,44)" fg:x="210479" fg:w="160"/><text x="70.4223%" y="111.50"></text></g><g><title>`0x7FF97E62AFF1 (49 samples, 0.02%)</title><rect x="70.6764%" y="101" width="0.0163%" height="15" fill="rgb(245,177,15)" fg:x="211991" fg:w="49"/><text x="70.9264%" y="111.50"></text></g><g><title>`0x7FF97E696E23 (93 samples, 0.03%)</title><rect x="70.7127%" y="69" width="0.0310%" height="15" fill="rgb(206,64,50)" fg:x="212100" fg:w="93"/><text x="70.9627%" y="79.50"></text></g><g><title>`0x7FF97E69702C (129 samples, 0.04%)</title><rect x="70.7461%" y="69" width="0.0430%" height="15" fill="rgb(234,36,40)" fg:x="212200" fg:w="129"/><text x="70.9961%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (237 samples, 0.08%)</title><rect x="70.7117%" y="85" width="0.0790%" height="15" fill="rgb(213,64,8)" fg:x="212097" fg:w="237"/><text x="70.9617%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (274 samples, 0.09%)</title><rect x="70.6997%" y="101" width="0.0913%" height="15" fill="rgb(210,75,36)" fg:x="212061" fg:w="274"/><text x="70.9497%" y="111.50"></text></g><g><title>neural_network.exe`Unknown (1,700 samples, 0.57%)</title><rect x="70.2256%" y="117" width="0.5668%" height="15" fill="rgb(229,88,21)" fg:x="210639" fg:w="1700"/><text x="70.4756%" y="127.50"></text></g><g><title>`0x7FF968D51324 (43 samples, 0.01%)</title><rect x="70.8724%" y="101" width="0.0143%" height="15" fill="rgb(252,204,47)" fg:x="212579" fg:w="43"/><text x="71.1224%" y="111.50"></text></g><g><title>`0x7FF968D51381 (66 samples, 0.02%)</title><rect x="70.8881%" y="101" width="0.0220%" height="15" fill="rgb(208,77,27)" fg:x="212626" fg:w="66"/><text x="71.1381%" y="111.50"></text></g><g><title>`0x7FF968D51388 (76 samples, 0.03%)</title><rect x="70.9101%" y="101" width="0.0253%" height="15" fill="rgb(221,76,26)" fg:x="212692" fg:w="76"/><text x="71.1601%" y="111.50"></text></g><g><title>`0x7FF968D514CC (60 samples, 0.02%)</title><rect x="70.9701%" y="101" width="0.0200%" height="15" fill="rgb(225,139,18)" fg:x="212872" fg:w="60"/><text x="71.2201%" y="111.50"></text></g><g><title>`0x7FF968D514D3 (45 samples, 0.02%)</title><rect x="70.9901%" y="101" width="0.0150%" height="15" fill="rgb(230,137,11)" fg:x="212932" fg:w="45"/><text x="71.2401%" y="111.50"></text></g><g><title>`0x7FF968D514E1 (72 samples, 0.02%)</title><rect x="71.0078%" y="101" width="0.0240%" height="15" fill="rgb(212,28,1)" fg:x="212985" fg:w="72"/><text x="71.2578%" y="111.50"></text></g><g><title>`0x7FF968D514EF (69 samples, 0.02%)</title><rect x="71.0348%" y="101" width="0.0230%" height="15" fill="rgb(248,164,17)" fg:x="213066" fg:w="69"/><text x="71.2848%" y="111.50"></text></g><g><title>`0x7FF968D514F6 (51 samples, 0.02%)</title><rect x="71.0578%" y="101" width="0.0170%" height="15" fill="rgb(222,171,42)" fg:x="213135" fg:w="51"/><text x="71.3078%" y="111.50"></text></g><g><title>`0x7FF97E62CC9A (161 samples, 0.05%)</title><rect x="71.1018%" y="101" width="0.0537%" height="15" fill="rgb(243,84,45)" fg:x="213267" fg:w="161"/><text x="71.3518%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix10sub_matrix17hbea9b54e86bb68f4E (1,141 samples, 0.38%)</title><rect x="70.7924%" y="117" width="0.3804%" height="15" fill="rgb(252,49,23)" fg:x="212339" fg:w="1141"/><text x="71.0424%" y="127.50"></text></g><g><title>`0x7FF97E696E23 (58 samples, 0.02%)</title><rect x="95.0458%" y="69" width="0.0193%" height="15" fill="rgb(215,19,7)" fg:x="285086" fg:w="58"/><text x="95.2958%" y="79.50"></text></g><g><title>`0x7FF97E69702C (181 samples, 0.06%)</title><rect x="95.0681%" y="69" width="0.0603%" height="15" fill="rgb(238,81,41)" fg:x="285153" fg:w="181"/><text x="95.3181%" y="79.50"></text></g><g><title>`0x7FF97E62D7B9 (257 samples, 0.09%)</title><rect x="95.0451%" y="85" width="0.0857%" height="15" fill="rgb(210,199,37)" fg:x="285084" fg:w="257"/><text x="95.2951%" y="95.50"></text></g><g><title>`0x7FF97E653704 (39 samples, 0.01%)</title><rect x="95.1495%" y="53" width="0.0130%" height="15" fill="rgb(244,192,49)" fg:x="285397" fg:w="39"/><text x="95.3995%" y="63.50"></text></g><g><title>`0x7FF97E62D239 (39 samples, 0.01%)</title><rect x="95.1495%" y="37" width="0.0130%" height="15" fill="rgb(226,211,11)" fg:x="285397" fg:w="39"/><text x="95.3995%" y="47.50"></text></g><g><title>`0x7FF97E62DB41 (56 samples, 0.02%)</title><rect x="95.1441%" y="85" width="0.0187%" height="15" fill="rgb(236,162,54)" fg:x="285381" fg:w="56"/><text x="95.3941%" y="95.50"></text></g><g><title>`0x7FF97E653618 (41 samples, 0.01%)</title><rect x="95.1491%" y="69" width="0.0137%" height="15" fill="rgb(220,229,9)" fg:x="285396" fg:w="41"/><text x="95.3991%" y="79.50"></text></g><g><title>`0x7FF97E631921 (138 samples, 0.05%)</title><rect x="95.1651%" y="69" width="0.0460%" height="15" fill="rgb(250,87,22)" fg:x="285444" fg:w="138"/><text x="95.4151%" y="79.50"></text></g><g><title>`0x7FF97E62DBBF (212 samples, 0.07%)</title><rect x="95.1641%" y="85" width="0.0707%" height="15" fill="rgb(239,43,17)" fg:x="285441" fg:w="212"/><text x="95.4141%" y="95.50"></text></g><g><title>`0x7FF97E62CC9A (619 samples, 0.21%)</title><rect x="95.0358%" y="101" width="0.2064%" height="15" fill="rgb(231,177,25)" fg:x="285056" fg:w="619"/><text x="95.2858%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17h98e4a7673af62caaE.llvm.6972577778651885175 (72,204 samples, 24.07%)</title><rect x="71.1728%" y="117" width="24.0723%" height="15" fill="rgb(219,179,1)" fg:x="213480" fg:w="72204"/><text x="71.4228%" y="127.50">neural_network.exe`_ZN14neural_network..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (3,429 samples, 1.14%)</title><rect x="95.2451%" y="117" width="1.1432%" height="15" fill="rgb(238,219,53)" fg:x="285684" fg:w="3429"/><text x="95.4951%" y="127.50"></text></g><g><title>`0x7FF97E69702C (184 samples, 0.06%)</title><rect x="97.2518%" y="69" width="0.0613%" height="15" fill="rgb(232,167,36)" fg:x="291703" fg:w="184"/><text x="97.5018%" y="79.50"></text></g><g><title>`0x7FF97E62CC9A (235 samples, 0.08%)</title><rect x="97.2358%" y="101" width="0.0783%" height="15" fill="rgb(244,19,51)" fg:x="291655" fg:w="235"/><text x="97.4858%" y="111.50"></text></g><g><title>`0x7FF97E62D7B9 (203 samples, 0.07%)</title><rect x="97.2465%" y="85" width="0.0677%" height="15" fill="rgb(224,6,22)" fg:x="291687" fg:w="203"/><text x="97.4965%" y="95.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (2,778 samples, 0.93%)</title><rect x="96.3883%" y="117" width="0.9262%" height="15" fill="rgb(224,145,5)" fg:x="289113" fg:w="2778"/><text x="96.6383%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (83,048 samples, 27.69%)</title><rect x="69.6352%" y="133" width="27.6877%" height="15" fill="rgb(234,130,49)" fg:x="208868" fg:w="83048"/><text x="69.8852%" y="143.50">neural_network.exe`_ZN14neural_network7helpe..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (1,857 samples, 0.62%)</title><rect x="97.3229%" y="133" width="0.6191%" height="15" fill="rgb(254,6,2)" fg:x="291916" fg:w="1857"/><text x="97.5729%" y="143.50"></text></g><g><title>`0x7FF97E69702C (171 samples, 0.06%)</title><rect x="98.4534%" y="85" width="0.0570%" height="15" fill="rgb(208,96,46)" fg:x="295307" fg:w="171"/><text x="98.7034%" y="95.50"></text></g><g><title>`0x7FF97E62F956 (172 samples, 0.06%)</title><rect x="98.4534%" y="101" width="0.0573%" height="15" fill="rgb(239,3,39)" fg:x="295307" fg:w="172"/><text x="98.7034%" y="111.50"></text></g><g><title>`0x7FF97E62D239 (219 samples, 0.07%)</title><rect x="98.4417%" y="117" width="0.0730%" height="15" fill="rgb(233,210,1)" fg:x="295272" fg:w="219"/><text x="98.6917%" y="127.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (1,719 samples, 0.57%)</title><rect x="97.9420%" y="133" width="0.5731%" height="15" fill="rgb(244,137,37)" fg:x="293773" fg:w="1719"/><text x="98.1920%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (88,937 samples, 29.65%)</title><rect x="68.8664%" y="149" width="29.6510%" height="15" fill="rgb(240,136,2)" fg:x="206562" fg:w="88937"/><text x="69.1164%" y="159.50">neural_network.exe`_ZN14neural_network7helpers6m..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (1,153 samples, 0.38%)</title><rect x="98.5174%" y="149" width="0.3844%" height="15" fill="rgb(239,18,37)" fg:x="295499" fg:w="1153"/><text x="98.7674%" y="159.50"></text></g><g><title>`0x7FF97E62F956 (226 samples, 0.08%)</title><rect x="99.1512%" y="117" width="0.0753%" height="15" fill="rgb(218,185,22)" fg:x="297400" fg:w="226"/><text x="99.4012%" y="127.50"></text></g><g><title>`0x7FF97E69702C (226 samples, 0.08%)</title><rect x="99.1512%" y="101" width="0.0753%" height="15" fill="rgb(225,218,4)" fg:x="297400" fg:w="226"/><text x="99.4012%" y="111.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (92,836 samples, 30.95%)</title><rect x="68.2776%" y="165" width="30.9509%" height="15" fill="rgb(230,182,32)" fg:x="204796" fg:w="92836"/><text x="68.5276%" y="175.50">neural_network.exe`_ZN14neural_network7helpers6mat..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (980 samples, 0.33%)</title><rect x="98.9018%" y="149" width="0.3267%" height="15" fill="rgb(242,56,43)" fg:x="296652" fg:w="980"/><text x="99.1518%" y="159.50"></text></g><g><title>`0x7FF97E62D239 (241 samples, 0.08%)</title><rect x="99.1482%" y="133" width="0.0803%" height="15" fill="rgb(233,99,24)" fg:x="297391" fg:w="241"/><text x="99.3982%" y="143.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (708 samples, 0.24%)</title><rect x="99.2285%" y="165" width="0.2360%" height="15" fill="rgb(234,209,42)" fg:x="297632" fg:w="708"/><text x="99.4785%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix4copy17hd6cb5c67259375c5E (880 samples, 0.29%)</title><rect x="99.4646%" y="165" width="0.2934%" height="15" fill="rgb(227,7,12)" fg:x="298340" fg:w="880"/><text x="99.7146%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (96,295 samples, 32.10%)</title><rect x="67.6542%" y="181" width="32.1041%" height="15" fill="rgb(245,203,43)" fg:x="202926" fg:w="96295"/><text x="67.9042%" y="191.50">neural_network.exe`_ZN14neural_network7helpers6matri..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (98,433 samples, 32.82%)</title><rect x="67.0811%" y="197" width="32.8169%" height="15" fill="rgb(238,205,33)" fg:x="201207" fg:w="98433"/><text x="67.3311%" y="207.50">neural_network.exe`_ZN14neural_network7helpers6matrix..</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix3add17h011c5c395671db36E (419 samples, 0.14%)</title><rect x="99.7583%" y="181" width="0.1397%" height="15" fill="rgb(231,56,7)" fg:x="299221" fg:w="419"/><text x="100.0083%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet19batch_backpropagate17h34cc1f560368317dE (295,302 samples, 98.45%)</title><rect x="1.4503%" y="229" width="98.4517%" height="15" fill="rgb(244,186,29)" fg:x="4350" fg:w="295302"/><text x="1.7003%" y="239.50">neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet19batch_backpropagate17h34cc1f560368317dE</text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$4pass17h6cd3405a7f010feeE (98,448 samples, 32.82%)</title><rect x="67.0801%" y="213" width="32.8219%" height="15" fill="rgb(234,111,31)" fg:x="201204" fg:w="98448"/><text x="67.3301%" y="223.50">neural_network.exe`_ZN193_$LT$neural_network..layers...</text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix14naive_multiply17h98e4a7673af62caaE.llvm.6972577778651885175 (220 samples, 0.07%)</title><rect x="99.9113%" y="165" width="0.0733%" height="15" fill="rgb(241,149,10)" fg:x="299680" fg:w="220"/><text x="100.1613%" y="175.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (257 samples, 0.09%)</title><rect x="99.9053%" y="181" width="0.0857%" height="15" fill="rgb(249,206,44)" fg:x="299662" fg:w="257"/><text x="100.1553%" y="191.50"></text></g><g><title>neural_network.exe`_ZN14neural_network8networks9dense_net8DenseNet7predict17h3a48c0497700823dE (271 samples, 0.09%)</title><rect x="99.9020%" y="229" width="0.0903%" height="15" fill="rgb(251,153,30)" fg:x="299652" fg:w="271"/><text x="100.1520%" y="239.50"></text></g><g><title>neural_network.exe`_ZN193_$LT$neural_network..layers..dense_layer..DenseLayer$u20$as$u20$neural_network..layers..layer..Layer$LT$neural_network..helpers..matrix..Matrix$C$neural_network..helpers..matrix..Matrix$GT$$GT$4pass17h6cd3405a7f010feeE (271 samples, 0.09%)</title><rect x="99.9020%" y="213" width="0.0903%" height="15" fill="rgb(239,152,38)" fg:x="299652" fg:w="271"/><text x="100.1520%" y="223.50"></text></g><g><title>neural_network.exe`_ZN14neural_network7helpers6matrix6Matrix17strassen_multiply17h4d90bbebc1c15267E.llvm.6972577778651885175 (270 samples, 0.09%)</title><rect x="99.9023%" y="197" width="0.0900%" height="15" fill="rgb(249,139,47)" fg:x="299653" fg:w="270"/><text x="100.1523%" y="207.50"></text></g><g><title>`0x7FF97E64AF28 (299,926 samples, 99.99%)</title><rect x="0.0003%" y="453" width="99.9933%" height="15" fill="rgb(244,64,35)" fg:x="1" fg:w="299926"/><text x="0.2503%" y="463.50">`0x7FF97E64AF28</text></g><g><title>`0x7FF97DFB257D (299,926 samples, 99.99%)</title><rect x="0.0003%" y="437" width="99.9933%" height="15" fill="rgb(216,46,15)" fg:x="1" fg:w="299926"/><text x="0.2503%" y="447.50">`0x7FF97DFB257D</text></g><g><title>neural_network.exe`__scrt_common_main_seh() (299,917 samples, 99.99%)</title><rect x="0.0033%" y="421" width="99.9903%" height="15" fill="rgb(250,74,19)" fg:x="10" fg:w="299917"/><text x="0.2533%" y="431.50">neural_network.exe`__scrt_common_main_seh()</text></g><g><title>neural_network.exe`invoke_main() (299,912 samples, 99.99%)</title><rect x="0.0050%" y="405" width="99.9887%" height="15" fill="rgb(249,42,33)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="415.50">neural_network.exe`invoke_main()</text></g><g><title>neural_network.exe`main (299,912 samples, 99.99%)</title><rect x="0.0050%" y="389" width="99.9887%" height="15" fill="rgb(242,149,17)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="399.50">neural_network.exe`main</text></g><g><title>neural_network.exe`std::rt::lang_start_internal (299,912 samples, 99.99%)</title><rect x="0.0050%" y="373" width="99.9887%" height="15" fill="rgb(244,29,21)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="383.50">neural_network.exe`std::rt::lang_start_internal</text></g><g><title>neural_network.exe`std::panic::catch_unwind (299,912 samples, 99.99%)</title><rect x="0.0050%" y="357" width="99.9887%" height="15" fill="rgb(220,130,37)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="367.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`std::panicking::try (299,912 samples, 99.99%)</title><rect x="0.0050%" y="341" width="99.9887%" height="15" fill="rgb(211,67,2)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="351.50">neural_network.exe`std::panicking::try</text></g><g><title>neural_network.exe`std::panicking::try::do_call (299,912 samples, 99.99%)</title><rect x="0.0050%" y="325" width="99.9887%" height="15" fill="rgb(235,68,52)" fg:x="15" fg:w="299912"/><text x="0.2550%" y="335.50">neural_network.exe`std::panicking::try::do_call</text></g><g><title>neural_network.exe`std::rt::lang_start_internal::closure$2 (299,911 samples, 99.99%)</title><rect x="0.0053%" y="309" width="99.9883%" height="15" fill="rgb(246,142,3)" fg:x="16" fg:w="299911"/><text x="0.2553%" y="319.50">neural_network.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>neural_network.exe`std::panic::catch_unwind (299,911 samples, 99.99%)</title><rect x="0.0053%" y="293" width="99.9883%" height="15" fill="rgb(241,25,7)" fg:x="16" fg:w="299911"/><text x="0.2553%" y="303.50">neural_network.exe`std::panic::catch_unwind</text></g><g><title>neural_network.exe`_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h49cfb7074a1ba1efE.llvm.5481414139050099855 (299,911 samples, 99.99%)</title><rect x="0.0053%" y="277" width="99.9883%" height="15" fill="rgb(242,119,39)" fg:x="16" fg:w="299911"/><text x="0.2553%" y="287.50">neural_network.exe`_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h49cfb7074a1ba1efE.llvm.5481414139050099855</text></g><g><title>neural_network.exe`_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h863a6dc294ceef51E (299,911 samples, 99.99%)</title><rect x="0.0053%" y="261" width="99.9883%" height="15" fill="rgb(241,98,45)" fg:x="16" fg:w="299911"/><text x="0.2553%" y="271.50">neural_network.exe`_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h863a6dc294ceef51E</text></g><g><title>neural_network.exe`Unknown (299,911 samples, 99.99%)</title><rect x="0.0053%" y="245" width="99.9883%" height="15" fill="rgb(254,28,30)" fg:x="16" fg:w="299911"/><text x="0.2553%" y="255.50">neural_network.exe`Unknown</text></g><g><title>all (299,946 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(241,142,54)" fg:x="0" fg:w="299946"/><text x="0.2500%" y="479.50"></text></g></svg></svg>